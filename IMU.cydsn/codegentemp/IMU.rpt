Loading plugins phase: Elapsed time ==> 0s.187ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -d CY8C5888LTI-LP097 -s C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.738ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.086ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  IMU.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -dcpsoc3 IMU.v -verilog
======================================================================

======================================================================
Compiling:  IMU.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -dcpsoc3 IMU.v -verilog
======================================================================

======================================================================
Compiling:  IMU.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -dcpsoc3 -verilog IMU.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Thu Apr 11 09:15:49 2019


======================================================================
Compiling:  IMU.v
Program  :   vpp
Options  :    -yv2 -q10 IMU.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Thu Apr 11 09:15:49 2019

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'IMU.ctl'.
IMU.v (line 741, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.

vlogfe:  No errors.


======================================================================
Compiling:  IMU.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -dcpsoc3 -verilog IMU.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Thu Apr 11 09:15:49 2019

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\codegentemp\IMU.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\codegentemp\IMU.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  IMU.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -dcpsoc3 -verilog IMU.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Thu Apr 11 09:15:50 2019

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\codegentemp\IMU.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\codegentemp\IMU.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\Seat_ADC:SAR:Net_221\
	\Seat_ADC:SAR:Net_383\
	\Seat_ADC:ch_addr_5\
	\Seat_ADC:Net_3905\
	\Seat_ADC:Net_3867\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:albi_2\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:agbi_2\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_3\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_3\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_4\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_4\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:lti_1\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:gti_1\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:albi_1\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:agbi_1\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:albi_0\
	\Seat_ADC:MODULE_1:g1:a0:gx:u0:agbi_0\
	\Seat_ADC:MODULE_1:g1:a0:xneq\
	\Seat_ADC:MODULE_1:g1:a0:xlt\
	\Seat_ADC:MODULE_1:g1:a0:xlte\
	\Seat_ADC:MODULE_1:g1:a0:xgt\
	\Seat_ADC:MODULE_1:g1:a0:xgte\
	\Seat_ADC:MODULE_1:lt\
	\Seat_ADC:MODULE_1:gt\
	\Seat_ADC:MODULE_1:gte\
	\Seat_ADC:MODULE_1:lte\
	\Seat_ADC:MODULE_1:neq\
	\USBUART:dma_complete_0\
	\USBUART:Net_1922\
	\USBUART:dma_complete_1\
	\USBUART:Net_1921\
	\USBUART:dma_complete_2\
	\USBUART:Net_1920\
	\USBUART:dma_complete_3\
	\USBUART:Net_1919\
	\USBUART:dma_complete_4\
	\USBUART:Net_1918\
	\USBUART:dma_complete_5\
	\USBUART:Net_1917\
	\USBUART:dma_complete_6\
	\USBUART:Net_1916\
	\USBUART:dma_complete_7\
	\USBUART:Net_1915\
	Net_201
	\I2C:udb_clk\
	Net_229
	\I2C:Net_973\
	Net_230
	\I2C:Net_974\
	\I2C:timeout_clk\
	Net_235
	\I2C:Net_975\
	Net_233
	Net_234


Deleted 54 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \Seat_ADC:SAR:vp_ctl_2\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:SAR:vn_ctl_1\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:SAR:vn_ctl_3\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:SAR:vp_ctl_1\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:SAR:vp_ctl_3\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:SAR:vn_ctl_0\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:SAR:vn_ctl_2\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing zero to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_7\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_6\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_5\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_4\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_3\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_2\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:status_1\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing Net_256 to \Seat_ADC:bSAR_SEQ:status_0\
Aliasing \Seat_ADC:bSAR_SEQ:soc_edge_detect\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:AMuxHw_1_Decoder_enable\ to one
Aliasing \Seat_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ to one
Aliasing tmpOE__sAn_net_0 to one
Aliasing tmpOE__sAp_net_0 to one
Aliasing tmpOE__sBp_net_0 to one
Aliasing tmpOE__sBn_net_0 to one
Aliasing tmpOE__sCp_net_0 to one
Aliasing tmpOE__sCn_net_0 to one
Aliasing \USBUART:tmpOE__Dm_net_0\ to one
Aliasing \USBUART:tmpOE__Dp_net_0\ to one
Aliasing tmpOE__LED_net_0 to one
Aliasing \Sample_Timer:Net_260\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing Net_195 to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Sample_Timer:Net_102\ to one
Aliasing tmpOE__SDA_1_net_0 to one
Aliasing tmpOE__SCL_1_net_0 to one
Aliasing \I2C:Net_969\ to one
Aliasing \I2C:Net_968\ to one
Aliasing tmpOE__BNO_Interupt_net_0 to one
Aliasing \Seat_ADC:bSAR_SEQ:soc_reg\\D\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:bSAR_SEQ:state_2\\D\ to \Seat_ADC:SAR:vp_ctl_0\
Aliasing \Seat_ADC:AMuxHw_1_Decoder_old_id_4\\D\ to \Seat_ADC:MODIN1_4\
Aliasing \Seat_ADC:AMuxHw_1_Decoder_old_id_3\\D\ to \Seat_ADC:MODIN1_3\
Aliasing \Seat_ADC:AMuxHw_1_Decoder_old_id_2\\D\ to \Seat_ADC:MODIN1_2\
Aliasing \Seat_ADC:AMuxHw_1_Decoder_old_id_1\\D\ to \Seat_ADC:MODIN1_1\
Aliasing \Seat_ADC:AMuxHw_1_Decoder_old_id_0\\D\ to \Seat_ADC:MODIN1_0\
Removing Lhs of wire \Seat_ADC:SAR:vp_ctl_2\[4] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:vn_ctl_1\[5] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:vn_ctl_3\[6] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:vp_ctl_1\[7] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:vp_ctl_3\[8] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:vn_ctl_0\[9] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:vn_ctl_2\[10] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Lhs of wire \Seat_ADC:SAR:Net_188\[11] = \Seat_ADC:clock\[12]
Removing Rhs of wire \Seat_ADC:clock\[12] = \Seat_ADC:Net_3874\[213]
Removing Rhs of wire \Seat_ADC:soc_out\[18] = \Seat_ADC:bSAR_SEQ:state_0\[91]
Removing Rhs of wire zero[19] = \Seat_ADC:SAR:vp_ctl_0\[3]
Removing Rhs of wire \Seat_ADC:bSAR_SEQ:enable\[51] = \Seat_ADC:bSAR_SEQ:control_0\[52]
Removing Rhs of wire \Seat_ADC:bSAR_SEQ:load_period\[53] = \Seat_ADC:bSAR_SEQ:control_1\[54]
Removing Rhs of wire \Seat_ADC:bSAR_SEQ:sw_soc\[55] = \Seat_ADC:bSAR_SEQ:control_2\[56]
Removing Rhs of wire \Seat_ADC:ch_addr_4\[64] = \Seat_ADC:bSAR_SEQ:count_4\[65]
Removing Rhs of wire \Seat_ADC:ch_addr_3\[66] = \Seat_ADC:bSAR_SEQ:count_3\[67]
Removing Rhs of wire \Seat_ADC:ch_addr_2\[68] = \Seat_ADC:bSAR_SEQ:count_2\[69]
Removing Rhs of wire \Seat_ADC:ch_addr_1\[70] = \Seat_ADC:bSAR_SEQ:count_1\[71]
Removing Rhs of wire \Seat_ADC:ch_addr_0\[72] = \Seat_ADC:bSAR_SEQ:count_0\[73]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_7\[74] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_6\[75] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_5\[76] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_4\[77] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_3\[78] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_2\[79] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:status_1\[80] = zero[19]
Removing Rhs of wire \Seat_ADC:bSAR_SEQ:status_0\[81] = \Seat_ADC:bSAR_SEQ:nrq_edge_detect_reg\[82]
Removing Rhs of wire Net_256[89] = \Seat_ADC:bSAR_SEQ:status_0\[81]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:soc_in\[90] = \Seat_ADC:bSAR_SEQ:sw_soc\[55]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:soc_edge_detect\[94] = zero[19]
Removing Lhs of wire \Seat_ADC:AMuxHw_1_Decoder_enable\[107] = one[60]
Removing Lhs of wire \Seat_ADC:cmp_vv_vv_MODGEN_1\[109] = \Seat_ADC:MODULE_1:g1:a0:xeq\[299]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newa_4\[224] = \Seat_ADC:MODIN1_4\[225]
Removing Lhs of wire \Seat_ADC:MODIN1_4\[225] = \Seat_ADC:ch_addr_4\[64]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newa_3\[226] = \Seat_ADC:MODIN1_3\[227]
Removing Lhs of wire \Seat_ADC:MODIN1_3\[227] = \Seat_ADC:ch_addr_3\[66]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newa_2\[228] = \Seat_ADC:MODIN1_2\[229]
Removing Lhs of wire \Seat_ADC:MODIN1_2\[229] = \Seat_ADC:ch_addr_2\[68]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newa_1\[230] = \Seat_ADC:MODIN1_1\[231]
Removing Lhs of wire \Seat_ADC:MODIN1_1\[231] = \Seat_ADC:ch_addr_1\[70]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newa_0\[232] = \Seat_ADC:MODIN1_0\[233]
Removing Lhs of wire \Seat_ADC:MODIN1_0\[233] = \Seat_ADC:ch_addr_0\[72]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newb_4\[234] = \Seat_ADC:MODIN2_4\[235]
Removing Lhs of wire \Seat_ADC:MODIN2_4\[235] = \Seat_ADC:AMuxHw_1_Decoder_old_id_4\[110]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newb_3\[236] = \Seat_ADC:MODIN2_3\[237]
Removing Lhs of wire \Seat_ADC:MODIN2_3\[237] = \Seat_ADC:AMuxHw_1_Decoder_old_id_3\[111]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newb_2\[238] = \Seat_ADC:MODIN2_2\[239]
Removing Lhs of wire \Seat_ADC:MODIN2_2\[239] = \Seat_ADC:AMuxHw_1_Decoder_old_id_2\[112]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newb_1\[240] = \Seat_ADC:MODIN2_1\[241]
Removing Lhs of wire \Seat_ADC:MODIN2_1\[241] = \Seat_ADC:AMuxHw_1_Decoder_old_id_1\[113]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:newb_0\[242] = \Seat_ADC:MODIN2_0\[243]
Removing Lhs of wire \Seat_ADC:MODIN2_0\[243] = \Seat_ADC:AMuxHw_1_Decoder_old_id_0\[114]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:dataa_4\[244] = \Seat_ADC:ch_addr_4\[64]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:dataa_3\[245] = \Seat_ADC:ch_addr_3\[66]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:dataa_2\[246] = \Seat_ADC:ch_addr_2\[68]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:dataa_1\[247] = \Seat_ADC:ch_addr_1\[70]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:dataa_0\[248] = \Seat_ADC:ch_addr_0\[72]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:datab_4\[249] = \Seat_ADC:AMuxHw_1_Decoder_old_id_4\[110]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:datab_3\[250] = \Seat_ADC:AMuxHw_1_Decoder_old_id_3\[111]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:datab_2\[251] = \Seat_ADC:AMuxHw_1_Decoder_old_id_2\[112]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:datab_1\[252] = \Seat_ADC:AMuxHw_1_Decoder_old_id_1\[113]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:datab_0\[253] = \Seat_ADC:AMuxHw_1_Decoder_old_id_0\[114]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:a_4\[254] = \Seat_ADC:ch_addr_4\[64]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:a_3\[255] = \Seat_ADC:ch_addr_3\[66]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:a_2\[256] = \Seat_ADC:ch_addr_2\[68]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:a_1\[257] = \Seat_ADC:ch_addr_1\[70]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:a_0\[258] = \Seat_ADC:ch_addr_0\[72]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:b_4\[259] = \Seat_ADC:AMuxHw_1_Decoder_old_id_4\[110]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:b_3\[260] = \Seat_ADC:AMuxHw_1_Decoder_old_id_3\[111]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:b_2\[261] = \Seat_ADC:AMuxHw_1_Decoder_old_id_2\[112]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:b_1\[262] = \Seat_ADC:AMuxHw_1_Decoder_old_id_1\[113]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:b_0\[263] = \Seat_ADC:AMuxHw_1_Decoder_old_id_0\[114]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\[269] = one[60]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_0\[270] = \Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\[268]
Removing Lhs of wire \Seat_ADC:MODULE_1:g1:a0:gx:u0:eqi_0\[275] = \Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_4\[274]
Removing Rhs of wire \Seat_ADC:MODULE_1:g1:a0:xeq\[299] = \Seat_ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\[276]
Removing Lhs of wire tmpOE__sAn_net_0[311] = one[60]
Removing Lhs of wire tmpOE__sAp_net_0[317] = one[60]
Removing Lhs of wire tmpOE__sBp_net_0[323] = one[60]
Removing Lhs of wire tmpOE__sBn_net_0[329] = one[60]
Removing Lhs of wire tmpOE__sCp_net_0[335] = one[60]
Removing Lhs of wire tmpOE__sCn_net_0[341] = one[60]
Removing Lhs of wire \USBUART:tmpOE__Dm_net_0\[349] = one[60]
Removing Lhs of wire \USBUART:tmpOE__Dp_net_0\[356] = one[60]
Removing Lhs of wire tmpOE__LED_net_0[408] = one[60]
Removing Lhs of wire \Sample_Timer:Net_260\[415] = zero[19]
Removing Lhs of wire \Sample_Timer:Net_266\[416] = one[60]
Removing Lhs of wire Net_195[417] = zero[19]
Removing Rhs of wire Net_196[421] = \Sample_Timer:Net_57\[420]
Removing Lhs of wire \Sample_Timer:Net_102\[423] = one[60]
Removing Lhs of wire tmpOE__SDA_1_net_0[427] = one[60]
Removing Lhs of wire tmpOE__SCL_1_net_0[433] = one[60]
Removing Rhs of wire \I2C:sda_x_wire\[438] = \I2C:Net_643_1\[439]
Removing Rhs of wire \I2C:Net_697\[441] = \I2C:Net_643_2\[447]
Removing Rhs of wire \I2C:Net_1109_0\[444] = \I2C:scl_yfb\[457]
Removing Rhs of wire \I2C:Net_1109_1\[445] = \I2C:sda_yfb\[458]
Removing Lhs of wire \I2C:scl_x_wire\[448] = \I2C:Net_643_0\[446]
Removing Lhs of wire \I2C:Net_969\[449] = one[60]
Removing Lhs of wire \I2C:Net_968\[450] = one[60]
Removing Lhs of wire \I2C:tmpOE__Bufoe_scl_net_0\[460] = one[60]
Removing Lhs of wire \I2C:tmpOE__Bufoe_sda_net_0\[462] = one[60]
Removing Lhs of wire tmpOE__BNO_Interupt_net_0[471] = one[60]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[475] = \Seat_ADC:bSAR_SEQ:nrq_edge_detect\[88]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:nrq_reg\\D\[477] = \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\[85]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:soc_reg\\D\[479] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:soc_edge_detect_reg\\D\[480] = zero[19]
Removing Lhs of wire \Seat_ADC:bSAR_SEQ:state_2\\D\[481] = zero[19]
Removing Lhs of wire \Seat_ADC:AMuxHw_1_Decoder_old_id_4\\D\[483] = \Seat_ADC:ch_addr_4\[64]
Removing Lhs of wire \Seat_ADC:AMuxHw_1_Decoder_old_id_3\\D\[484] = \Seat_ADC:ch_addr_3\[66]
Removing Lhs of wire \Seat_ADC:AMuxHw_1_Decoder_old_id_2\\D\[485] = \Seat_ADC:ch_addr_2\[68]
Removing Lhs of wire \Seat_ADC:AMuxHw_1_Decoder_old_id_1\\D\[486] = \Seat_ADC:ch_addr_1\[70]
Removing Lhs of wire \Seat_ADC:AMuxHw_1_Decoder_old_id_0\\D\[487] = \Seat_ADC:ch_addr_0\[72]

------------------------------------------------------
Aliased 0 equations, 112 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 2):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\)
	OR (\Seat_ADC:ch_addr_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (\Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (\Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (\Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 32):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_0\)
	OR (not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\)
	OR (not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\Seat_ADC:MODULE_1:g1:a0:xeq\' (cost = 32):
\Seat_ADC:MODULE_1:g1:a0:xeq\ <= ((not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \Seat_ADC:AMuxHw_1_Decoder_is_active\ with ( cost: 96 or cost_inv: -1)  > 90 or with size: 32 > 102 has been made a (soft) node.
\Seat_ADC:AMuxHw_1_Decoder_is_active\ <= ((not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_4\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_3\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (not \Seat_ADC:ch_addr_2\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\)
	OR (not \Seat_ADC:ch_addr_1\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\)
	OR (not \Seat_ADC:ch_addr_0\ and not \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ and \Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\)
	OR (\Seat_ADC:ch_addr_4\ and \Seat_ADC:ch_addr_3\ and \Seat_ADC:ch_addr_2\ and \Seat_ADC:ch_addr_1\ and \Seat_ADC:ch_addr_0\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ and \Seat_ADC:AMuxHw_1_Decoder_old_id_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 15 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------

------------------------------------------------------
Aliased 0 equations, 0 wires.
------------------------------------------------------

Last attempt to remove unused logic - pass 1:


Last attempt to remove unused logic - pass 2:


topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj" -dcpsoc3 IMU.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 0s.751ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.2.0.641, Family: PSoC3, Started at: Thursday, 11 April 2019 09:15:50
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\jebush2\Desktop\PSoC 3-19-2019\Smart Bike PSoC\IMU.cydsn\IMU.cyprj -d CY8C5888LTI-LP097 IMU.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.016ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \Seat_ADC:MODULE_1:g1:a0:gx:u0:lti_0\ kept \Seat_ADC:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \Seat_ADC:MODULE_1:g1:a0:gx:u0:gti_0\ kept \Seat_ADC:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \Seat_ADC:bSAR_SEQ:soc_reg\ from registered to combinatorial
    Converted constant MacroCell: \Seat_ADC:bSAR_SEQ:soc_edge_detect_reg\ from registered to combinatorial
    Converted constant MacroCell: \Seat_ADC:bSAR_SEQ:state_2\ from registered to combinatorial
Assigning clock Seat_ADC_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock I2C_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Seat_ADC_IntClock'. Fanout=40, Signal=\Seat_ADC:clock\
    Digital Clock 1: Automatic-assigning  clock 'Clock_3'. Fanout=1, Signal=Net_202
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \Seat_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: Seat_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \Seat_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: Seat_ADC_IntClock, EnableOut: \Seat_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \Seat_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: Seat_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Seat_ADC_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 2 pin(s) will be assigned a location by the fitter: \USBUART:Dm(0)\, \USBUART:Dp(0)\


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = sAn(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => sAn(0)__PA ,
            analog_term => Net_178 ,
            pad => sAn(0)_PAD ,
            pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = sAp(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => sAp(0)__PA ,
            analog_term => Net_182 ,
            pad => sAp(0)_PAD ,
            pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = sBp(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => sBp(0)__PA ,
            analog_term => Net_190 ,
            pad => sBp(0)_PAD ,
            pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = sBn(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => sBn(0)__PA ,
            analog_term => Net_189 ,
            pad => sBn(0)_PAD ,
            pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = sCp(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => sCp(0)__PA ,
            analog_term => Net_187 ,
            pad => sCp(0)_PAD ,
            pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = sCn(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => sCn(0)__PA ,
            analog_term => Net_180 ,
            pad => sCn(0)_PAD ,
            pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = \USBUART:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART:Dm(0)\__PA ,
            analog_term => \USBUART:Net_597\ ,
            pad => \USBUART:Dm(0)_PAD\ );

    Pin : Name = \USBUART:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART:Dp(0)\__PA ,
            analog_term => \USBUART:Net_1000\ ,
            pad => \USBUART:Dp(0)_PAD\ );

    Pin : Name = LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(0)__PA ,
            pad => LED(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SDA_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: OPEN_DRAIN_LO
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SDA_1(0)__PA ,
            fb => \I2C:Net_1109_1\ ,
            pin_input => \I2C:sda_x_wire\ ,
            pad => SDA_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SCL_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: OPEN_DRAIN_LO
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SCL_1(0)__PA ,
            fb => \I2C:Net_1109_0\ ,
            pin_input => \I2C:Net_643_0\ ,
            pad => SCL_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = BNO_Interupt(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BNO_Interupt(0)__PA ,
            fb => Net_388 ,
            pad => BNO_Interupt(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 10
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \Seat_ADC:ch_addr_4\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\
            + \Seat_ADC:ch_addr_3\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\
            + !\Seat_ADC:ch_addr_2\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_2\
            + \Seat_ADC:ch_addr_2\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\
            + !\Seat_ADC:ch_addr_1\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_1\
            + \Seat_ADC:ch_addr_1\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\
            + !\Seat_ADC:ch_addr_0\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
            + \Seat_ADC:ch_addr_0\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\Seat_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_255 * !\Seat_ADC:bSAR_SEQ:load_period\
        );
        Output = \Seat_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 3
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\Seat_ADC:ch_addr_4\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_4\
            + !\Seat_ADC:ch_addr_3\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_3\
            + \Seat_ADC:AMuxHw_1_Decoder_is_active_split\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_is_active\ (fanout=32)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=Net_256, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\Seat_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_256 (fanout=3)

    MacroCell: Name=\Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_256
            + \Seat_ADC:Net_3935\
        );
        Output = \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\Seat_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \Seat_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\Seat_ADC:soc_out\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\Seat_ADC:soc_out\ * \Seat_ADC:Net_3830\ * 
              !\Seat_ADC:bSAR_SEQ:load_period\ * \Seat_ADC:bSAR_SEQ:state_1\ * 
              !\Seat_ADC:bSAR_SEQ:cnt_tc\
            + !\Seat_ADC:soc_out\ * !\Seat_ADC:bSAR_SEQ:load_period\ * 
              \Seat_ADC:bSAR_SEQ:sw_soc\ * !\Seat_ADC:bSAR_SEQ:state_1\
        );
        Output = \Seat_ADC:soc_out\ (fanout=3)

    MacroCell: Name=\Seat_ADC:bSAR_SEQ:state_1\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\Seat_ADC:soc_out\ * !\Seat_ADC:Net_3830\ * 
              !\Seat_ADC:bSAR_SEQ:load_period\ * \Seat_ADC:bSAR_SEQ:state_1\
            + \Seat_ADC:soc_out\ * !\Seat_ADC:bSAR_SEQ:load_period\ * 
              !\Seat_ADC:bSAR_SEQ:state_1\
        );
        Output = \Seat_ADC:bSAR_SEQ:state_1\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_4\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ (fanout=34)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_3\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ (fanout=34)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_2\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ (fanout=33)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_1\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ (fanout=33)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ (fanout=33)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_0\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_1\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_2\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_3\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_4\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_5\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_6\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_7\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_8\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_9\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_10\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_11\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_12\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_13\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_14\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_15\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_16\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_17\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_18\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_19\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_20\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_21\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_22\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_23\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_24\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_25\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_26\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_27\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_28\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_29\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_30\ (fanout=2)

    MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_31\ (fanout=2)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\Seat_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \Seat_ADC:clock\ ,
            status_0 => Net_256 ,
            clk_en => \Seat_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\Seat_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \Seat_ADC:nrq\ ,
            out => \Seat_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =SCL_1(0)_SYNC
        PORT MAP (
            in => \I2C:Net_1109_0\ ,
            out => \I2C:Net_1109_0_SYNCOUT\ ,
            clock => ClockBlock_BUS_CLK );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =SDA_1(0)_SYNC
        PORT MAP (
            in => \I2C:Net_1109_1\ ,
            out => \I2C:Net_1109_1_SYNCOUT\ ,
            clock => ClockBlock_BUS_CLK );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\Seat_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \Seat_ADC:clock\ ,
            control_7 => \Seat_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \Seat_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \Seat_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \Seat_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \Seat_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \Seat_ADC:bSAR_SEQ:sw_soc\ ,
            control_1 => \Seat_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \Seat_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\Seat_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \Seat_ADC:clock\ ,
            load => \Seat_ADC:bSAR_SEQ:load_period\ ,
            enable => \Seat_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \Seat_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \Seat_ADC:bSAR_SEQ:count_5\ ,
            count_4 => \Seat_ADC:ch_addr_4\ ,
            count_3 => \Seat_ADC:ch_addr_3\ ,
            count_2 => \Seat_ADC:ch_addr_2\ ,
            count_1 => \Seat_ADC:ch_addr_1\ ,
            count_0 => \Seat_ADC:ch_addr_0\ ,
            tc => \Seat_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \Seat_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\Seat_ADC:TempBuf\
        PORT MAP (
            dmareq => \Seat_ADC:Net_3830\ ,
            termin => zero ,
            termout => \Seat_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\Seat_ADC:FinalBuf\
        PORT MAP (
            dmareq => \Seat_ADC:Net_3698\ ,
            termin => zero ,
            termout => \Seat_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\Seat_ADC:IRQ\
        PORT MAP (
            interrupt => Net_256 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:dp_int\
        PORT MAP (
            interrupt => \USBUART:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_3\
        PORT MAP (
            interrupt => \USBUART:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_2\
        PORT MAP (
            interrupt => \USBUART:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_1\
        PORT MAP (
            interrupt => \USBUART:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_0\
        PORT MAP (
            interrupt => \USBUART:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:bus_reset\
        PORT MAP (
            interrupt => \USBUART:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:arb_int\
        PORT MAP (
            interrupt => \USBUART:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:sof_int\
        PORT MAP (
            interrupt => Net_120 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =Sample_Interrupt
        PORT MAP (
            interrupt => Net_196 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\I2C:I2C_IRQ\
        PORT MAP (
            interrupt => \I2C:Net_697\ );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =isr_1
        PORT MAP (
            interrupt => Net_388 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :   12 :   20 :   32 : 37.50 %
IO                            :   15 :   33 :   48 : 31.25 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    1 :    0 :    1 : 100.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :   46 :  146 :  192 : 23.96 %
  Unique P-terms              :   57 :  327 :  384 : 14.84 %
  Total P-terms               :   57 :      :      :        
  Datapath Cells              :    0 :   24 :   24 :  0.00 %
  Status Cells                :    3 :   21 :   24 : 12.50 %
    Status Registers          :    1 :      :      :        
    Sync Cells (x3)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    2 :   22 :   24 :  8.33 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.290ms
Tech Mapping phase: Elapsed time ==> 0s.376ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_259" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_261" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_264" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_266" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_269" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_271" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_274" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_276" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_279" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_281" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_284" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_286" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_289" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_291" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_294" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_296" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_299" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_301" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_304" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_306" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_309" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_311" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_314" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_316" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_319" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_321" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_324" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_326" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_329" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_260" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_262" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_265" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_267" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_270" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_272" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_275" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_277" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_280" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_282" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_285" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_287" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_290" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_292" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_295" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_297" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_300" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_302" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_305" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_307" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_310" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_312" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_315" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_317" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_320" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_322" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_325" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_327" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_330" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_1@[IOP=(3)][IoId=(1)] : BNO_Interupt(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : LED(0) (fixed)
IO_0@[IOP=(12)][IoId=(0)] : SCL_1(0) (fixed)
IO_1@[IOP=(12)][IoId=(1)] : SDA_1(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : sAn(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : sAp(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : sBn(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : sBp(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : sCn(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : sCp(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART:Dp(0)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \Seat_ADC:SAR:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \Seat_ADC:SAR:vRef_1024\
USB[0]@[FFB(USB,0)] : \USBUART:USB\
Log: apr.M0058: The analog placement iterative improvement is 47% done. (App=cydsfit)
Analog Placement Results:
IO_1@[IOP=(3)][IoId=(1)] : BNO_Interupt(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : LED(0) (fixed)
IO_0@[IOP=(12)][IoId=(0)] : SCL_1(0) (fixed)
IO_1@[IOP=(12)][IoId=(1)] : SDA_1(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : sAn(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : sAp(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : sBn(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : sBp(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : sCn(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : sCp(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART:Dp(0)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \Seat_ADC:SAR:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \Seat_ADC:SAR:vRef_1024\
USB[0]@[FFB(USB,0)] : \USBUART:USB\

Analog Placement phase: Elapsed time ==> 3s.538ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.004ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \Seat_ADC:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_182 {
    p0_1
  }
  Net: Net_190 {
    p0_3
  }
  Net: Net_187 {
    p0_5
  }
  Net: Net_259 {
  }
  Net: Net_261 {
  }
  Net: Net_264 {
  }
  Net: Net_266 {
  }
  Net: Net_269 {
  }
  Net: Net_271 {
  }
  Net: Net_274 {
  }
  Net: Net_276 {
  }
  Net: Net_279 {
  }
  Net: Net_281 {
  }
  Net: Net_284 {
  }
  Net: Net_286 {
  }
  Net: Net_289 {
  }
  Net: Net_291 {
  }
  Net: Net_294 {
  }
  Net: Net_296 {
  }
  Net: Net_299 {
  }
  Net: Net_301 {
  }
  Net: Net_304 {
  }
  Net: Net_306 {
  }
  Net: Net_309 {
  }
  Net: Net_311 {
  }
  Net: Net_314 {
  }
  Net: Net_316 {
  }
  Net: Net_319 {
  }
  Net: Net_321 {
  }
  Net: Net_324 {
  }
  Net: Net_326 {
  }
  Net: Net_329 {
  }
  Net: \Seat_ADC:V_diff1\ {
    sar_0_vminus
  }
  Net: Net_178 {
    p0_0
  }
  Net: Net_189 {
    p0_2
  }
  Net: Net_180 {
    p0_4
  }
  Net: Net_260 {
  }
  Net: Net_262 {
  }
  Net: Net_265 {
  }
  Net: Net_267 {
  }
  Net: Net_270 {
  }
  Net: Net_272 {
  }
  Net: Net_275 {
  }
  Net: Net_277 {
  }
  Net: Net_280 {
  }
  Net: Net_282 {
  }
  Net: Net_285 {
  }
  Net: Net_287 {
  }
  Net: Net_290 {
  }
  Net: Net_292 {
  }
  Net: Net_295 {
  }
  Net: Net_297 {
  }
  Net: Net_300 {
  }
  Net: Net_302 {
  }
  Net: Net_305 {
  }
  Net: Net_307 {
  }
  Net: Net_310 {
  }
  Net: Net_312 {
  }
  Net: Net_315 {
  }
  Net: Net_317 {
  }
  Net: Net_320 {
  }
  Net: Net_322 {
  }
  Net: Net_325 {
  }
  Net: Net_327 {
  }
  Net: Net_330 {
  }
  Net: \Seat_ADC:SAR:Net_209\ {
  }
  Net: \Seat_ADC:SAR:Net_233\ {
    common_vref_1024
    sar_0_vref_1024
    sar_0_vref_x_sar_0_vref_1024
    sar_0_vref
  }
  Net: \Seat_ADC:SAR:Net_255\ {
  }
  Net: AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\ {
    sar_0_vplus
    agl5_x_sar_0_vplus
    agl5
    agl5_x_p0_5
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_3
    agl5_x_p0_1
    p0_5
    p0_3
    p0_1
  }
  Net: AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\ {
    sar_0_vminus
    agl6_x_sar_0_vminus
    agl6
    agl6_x_p0_2
    agl4_x_sar_0_vminus
    agl4
    agl4_x_p0_0
    agl4_x_p0_4
    p0_2
    p0_0
    p0_4
  }
}
Map of item to net {
  common_vref_1024                                 -> \Seat_ADC:SAR:Net_233\
  sar_0_vref_1024                                  -> \Seat_ADC:SAR:Net_233\
  sar_0_vref_x_sar_0_vref_1024                     -> \Seat_ADC:SAR:Net_233\
  sar_0_vref                                       -> \Seat_ADC:SAR:Net_233\
  sar_0_vplus                                      -> \Seat_ADC:Net_2803\
  p0_1                                             -> Net_182
  p0_3                                             -> Net_190
  p0_5                                             -> Net_187
  sar_0_vminus                                     -> \Seat_ADC:V_diff1\
  p0_0                                             -> Net_178
  p0_2                                             -> Net_189
  p0_4                                             -> Net_180
  agl5_x_sar_0_vplus                               -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl5                                             -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl5_x_p0_5                                      -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl7_x_sar_0_vplus                               -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl7                                             -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl7_x_p0_3                                      -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl5_x_p0_1                                      -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
  agl6_x_sar_0_vminus                              -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
  agl6                                             -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
  agl6_x_p0_2                                      -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
  agl4_x_sar_0_vminus                              -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
  agl4                                             -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
  agl4_x_p0_0                                      -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
  agl4_x_p0_4                                      -> AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
}
Mux Info {
  Mux: \Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\ {
     Mouth: \Seat_ADC:Net_2803\
     Guts:  AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_182
      Outer: agl5_x_p0_1
      Inner: __open__
      Path {
        p0_1
        agl5_x_p0_1
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_190
      Outer: agl7_x_p0_3
      Inner: agl7_x_sar_0_vplus
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_187
      Outer: agl5_x_p0_5
      Inner: __open__
      Path {
        p0_5
        agl5_x_p0_5
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_259
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_261
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_264
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_266
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_269
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_271
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_274
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_276
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_279
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_281
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_284
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_286
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_289
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_291
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_294
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_296
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_299
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_301
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_304
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_306
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_309
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_311
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_314
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_316
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_319
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_321
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_324
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_326
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_329
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\ {
     Mouth: \Seat_ADC:V_diff1\
     Guts:  AmuxNet::\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_178
      Outer: agl4_x_p0_0
      Inner: __open__
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vminus
        sar_0_vminus
      }
    }
    Arm: 1 {
      Net:   Net_189
      Outer: agl6_x_p0_2
      Inner: agl6_x_sar_0_vminus
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_sar_0_vminus
        sar_0_vminus
      }
    }
    Arm: 2 {
      Net:   Net_180
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_sar_0_vminus
        sar_0_vminus
      }
    }
    Arm: 3 {
      Net:   Net_260
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_262
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_265
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_267
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_270
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_272
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_275
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_277
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_280
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_282
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_285
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_287
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_290
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_292
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_295
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_297
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_300
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_302
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_305
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_307
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_310
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_312
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_315
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_317
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_320
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_322
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_325
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_327
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_330
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.263ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 1.2 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   17 :   31 :   48 :  35.42%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            6.41
                   Pterms :            3.35
               Macrocells :            2.71
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.001ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.054ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :          9 :       7.00 :       5.11
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] is empty.
UDB [UDB=(0,1)] is empty.
UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] is empty.
UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] is empty.
UDB [UDB=(1,1)] is empty.
UDB [UDB=(1,2)] is empty.
UDB [UDB=(1,3)] is empty.
UDB [UDB=(1,4)] is empty.
UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] is empty.
UDB [UDB=(2,1)] is empty.
UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_2\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ (fanout=33)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_7\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_29\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=2, #inputs=6, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_31\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_19\ (fanout=2)
        Properties               : 
        {
        }
}

statuscell: Name =\Seat_ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \Seat_ADC:clock\ ,
        status_0 => Net_256 ,
        clk_en => \Seat_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_256
            + \Seat_ADC:Net_3935\
        );
        Output = \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_255 * !\Seat_ADC:bSAR_SEQ:load_period\
        );
        Output = \Seat_ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=Net_256, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\Seat_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_256 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Seat_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \Seat_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:soc_out\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\Seat_ADC:soc_out\ * \Seat_ADC:Net_3830\ * 
              !\Seat_ADC:bSAR_SEQ:load_period\ * \Seat_ADC:bSAR_SEQ:state_1\ * 
              !\Seat_ADC:bSAR_SEQ:cnt_tc\
            + !\Seat_ADC:soc_out\ * !\Seat_ADC:bSAR_SEQ:load_period\ * 
              \Seat_ADC:bSAR_SEQ:sw_soc\ * !\Seat_ADC:bSAR_SEQ:state_1\
        );
        Output = \Seat_ADC:soc_out\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:bSAR_SEQ:state_1\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\Seat_ADC:soc_out\ * !\Seat_ADC:Net_3830\ * 
              !\Seat_ADC:bSAR_SEQ:load_period\ * \Seat_ADC:bSAR_SEQ:state_1\
            + \Seat_ADC:soc_out\ * !\Seat_ADC:bSAR_SEQ:load_period\ * 
              !\Seat_ADC:bSAR_SEQ:state_1\
        );
        Output = \Seat_ADC:bSAR_SEQ:state_1\ (fanout=2)
        Properties               : 
        {
        }
}

controlcell: Name =\Seat_ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \Seat_ADC:clock\ ,
        control_7 => \Seat_ADC:bSAR_SEQ:control_7\ ,
        control_6 => \Seat_ADC:bSAR_SEQ:control_6\ ,
        control_5 => \Seat_ADC:bSAR_SEQ:control_5\ ,
        control_4 => \Seat_ADC:bSAR_SEQ:control_4\ ,
        control_3 => \Seat_ADC:bSAR_SEQ:control_3\ ,
        control_2 => \Seat_ADC:bSAR_SEQ:sw_soc\ ,
        control_1 => \Seat_ADC:bSAR_SEQ:load_period\ ,
        control_0 => \Seat_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=1, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \Seat_ADC:ch_addr_4\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\
            + \Seat_ADC:ch_addr_3\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\
            + !\Seat_ADC:ch_addr_2\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_2\
            + \Seat_ADC:ch_addr_2\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\
            + !\Seat_ADC:ch_addr_1\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_1\
            + \Seat_ADC:ch_addr_1\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\
            + !\Seat_ADC:ch_addr_0\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
            + \Seat_ADC:ch_addr_0\ * !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,4)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_1\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ (fanout=33)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_24\ (fanout=2)
        Properties               : 
        {
        }
}

count7cell: Name =\Seat_ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \Seat_ADC:clock\ ,
        load => \Seat_ADC:bSAR_SEQ:load_period\ ,
        enable => \Seat_ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \Seat_ADC:bSAR_SEQ:count_6\ ,
        count_5 => \Seat_ADC:bSAR_SEQ:count_5\ ,
        count_4 => \Seat_ADC:ch_addr_4\ ,
        count_3 => \Seat_ADC:ch_addr_3\ ,
        count_2 => \Seat_ADC:ch_addr_2\ ,
        count_1 => \Seat_ADC:ch_addr_1\ ,
        count_0 => \Seat_ADC:ch_addr_0\ ,
        tc => \Seat_ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \Seat_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\Seat_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=3, #inputs=9, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_21\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 3
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\Seat_ADC:ch_addr_4\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_4\
            + !\Seat_ADC:ch_addr_3\ * \Seat_ADC:AMuxHw_1_Decoder_old_id_3\
            + \Seat_ADC:AMuxHw_1_Decoder_is_active_split\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_is_active\ (fanout=32)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_17\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_26\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_4\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ (fanout=34)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_3\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ (fanout=34)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_20\ (fanout=2)
        Properties               : 
        {
        }
}

UDB [UDB=(3,0)] is empty.
UDB [UDB=(3,1)] is empty.
UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=3, #inputs=6, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_30\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_14\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_8\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=3, #inputs=6, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_28\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_18\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_25\ (fanout=2)
        Properties               : 
        {
        }
}

synccell: Name =SDA_1(0)_SYNC
    PORT MAP (
        in => \I2C:Net_1109_1\ ,
        out => \I2C:Net_1109_1_SYNCOUT\ ,
        clock => ClockBlock_BUS_CLK );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =SCL_1(0)_SYNC
    PORT MAP (
        in => \I2C:Net_1109_0\ ,
        out => \I2C:Net_1109_0_SYNCOUT\ ,
        clock => ClockBlock_BUS_CLK );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_4\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_6\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_11\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_23\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_3\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_27\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_13\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_22\ (fanout=2)
        Properties               : 
        {
        }
}

synccell: Name =\Seat_ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \Seat_ADC:nrq\ ,
        out => \Seat_ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_12\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_0\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:ch_addr_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_old_id_0\ (fanout=33)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=3, #inputs=6, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_2\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_10\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=2, #inputs=6, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_9\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_5\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=2, #inputs=6, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_16\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Seat_ADC:AMuxHw_1_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Seat_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Seat_ADC:AMuxHw_1_Decoder_is_active\ * 
              !\Seat_ADC:AMuxHw_1_Decoder_old_id_4\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_3\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_2\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_1\ * 
              \Seat_ADC:AMuxHw_1_Decoder_old_id_0\
        );
        Output = \Seat_ADC:AMuxHw_1_Decoder_one_hot_15\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\Seat_ADC:IRQ\
        PORT MAP (
            interrupt => Net_256 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\USBUART:ep_1\
        PORT MAP (
            interrupt => \USBUART:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\USBUART:ep_2\
        PORT MAP (
            interrupt => \USBUART:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\USBUART:ep_3\
        PORT MAP (
            interrupt => \USBUART:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =isr_1
        PORT MAP (
            interrupt => Net_388 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBUART:dp_int\
        PORT MAP (
            interrupt => \USBUART:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(15)] 
    interrupt: Name =\I2C:I2C_IRQ\
        PORT MAP (
            interrupt => \I2C:Net_697\ );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(17)] 
    interrupt: Name =Sample_Interrupt
        PORT MAP (
            interrupt => Net_196 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBUART:sof_int\
        PORT MAP (
            interrupt => Net_120 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBUART:arb_int\
        PORT MAP (
            interrupt => \USBUART:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBUART:bus_reset\
        PORT MAP (
            interrupt => \USBUART:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBUART:ep_0\
        PORT MAP (
            interrupt => \USBUART:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\Seat_ADC:FinalBuf\
        PORT MAP (
            dmareq => \Seat_ADC:Net_3698\ ,
            termin => zero ,
            termout => \Seat_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\Seat_ADC:TempBuf\
        PORT MAP (
            dmareq => \Seat_ADC:Net_3830\ ,
            termin => zero ,
            termout => \Seat_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = sAn(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => sAn(0)__PA ,
        analog_term => Net_178 ,
        pad => sAn(0)_PAD ,
        pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = sAp(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => sAp(0)__PA ,
        analog_term => Net_182 ,
        pad => sAp(0)_PAD ,
        pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = sBn(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => sBn(0)__PA ,
        analog_term => Net_189 ,
        pad => sBn(0)_PAD ,
        pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = sBp(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => sBp(0)__PA ,
        analog_term => Net_190 ,
        pad => sBp(0)_PAD ,
        pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = sCn(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => sCn(0)__PA ,
        analog_term => Net_180 ,
        pad => sCn(0)_PAD ,
        pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = sCp(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => sCp(0)__PA ,
        analog_term => Net_187 ,
        pad => sCp(0)_PAD ,
        pin_input => \Seat_ADC:AMuxHw_1_Decoder_one_hot_2\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
Port 2 contains the following IO cells:
[IoId=1]: 
Pin : Name = LED(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED(0)__PA ,
        pad => LED(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=1]: 
Pin : Name = BNO_Interupt(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BNO_Interupt(0)__PA ,
        fb => Net_388 ,
        pad => BNO_Interupt(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=0]: 
Pin : Name = SCL_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: OPEN_DRAIN_LO
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SCL_1(0)__PA ,
        fb => \I2C:Net_1109_0\ ,
        pin_input => \I2C:Net_643_0\ ,
        pad => SCL_1(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = SDA_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: OPEN_DRAIN_LO
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SDA_1(0)__PA ,
        fb => \I2C:Net_1109_1\ ,
        pin_input => \I2C:sda_x_wire\ ,
        pad => SDA_1(0)_PAD );
    Properties:
    {
    }

Port 15 generates interrupt for logical port:
    logicalport: Name =\USBUART:Dp\
        PORT MAP (
            in_clock_en => one ,
            in_reset => zero ,
            out_clock_en => one ,
            out_reset => zero ,
            interrupt => \USBUART:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "beca5e2d-f70f-4900-a4db-7eca1ed3126e/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=6]: 
Pin : Name = \USBUART:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART:Dp(0)\__PA ,
        analog_term => \USBUART:Net_1000\ ,
        pad => \USBUART:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBUART:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART:Dm(0)\__PA ,
        analog_term => \USBUART:Net_597\ ,
        pad => \USBUART:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \Seat_ADC:clock\ ,
            dclk_0 => \Seat_ADC:clock_local\ ,
            dclk_glb_1 => Net_202 ,
            dclk_1 => Net_202_local );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: 
    I2C Block @ F(I2C,0): 
    i2ccell: Name =\I2C:I2C_FF\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            scl_in => \I2C:Net_1109_0\ ,
            sda_in => \I2C:Net_1109_1\ ,
            scl_out => \I2C:Net_643_0\ ,
            sda_out => \I2C:sda_x_wire\ ,
            interrupt => \I2C:Net_697\ );
        Properties:
        {
            cy_registers = ""
            use_wakeup = 0
        }
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\Sample_Timer:TimerHW\
        PORT MAP (
            clock => Net_202 ,
            enable => __ONE__ ,
            tc => \Sample_Timer:Net_51\ ,
            cmp => \Sample_Timer:Net_261\ ,
            irq => Net_196 );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBUART:USB\
        PORT MAP (
            dp => \USBUART:Net_1000\ ,
            dm => \USBUART:Net_597\ ,
            sof_int => Net_120 ,
            arb_int => \USBUART:Net_1889\ ,
            usb_int => \USBUART:Net_1876\ ,
            ept_int_8 => \USBUART:ep_int_8\ ,
            ept_int_7 => \USBUART:ep_int_7\ ,
            ept_int_6 => \USBUART:ep_int_6\ ,
            ept_int_5 => \USBUART:ep_int_5\ ,
            ept_int_4 => \USBUART:ep_int_4\ ,
            ept_int_3 => \USBUART:ep_int_3\ ,
            ept_int_2 => \USBUART:ep_int_2\ ,
            ept_int_1 => \USBUART:ep_int_1\ ,
            ept_int_0 => \USBUART:ep_int_0\ ,
            ord_int => \USBUART:Net_95\ ,
            dma_req_7 => \USBUART:dma_request_7\ ,
            dma_req_6 => \USBUART:dma_request_6\ ,
            dma_req_5 => \USBUART:dma_request_5\ ,
            dma_req_4 => \USBUART:dma_request_4\ ,
            dma_req_3 => \USBUART:dma_request_3\ ,
            dma_req_2 => \USBUART:dma_request_2\ ,
            dma_req_1 => \USBUART:dma_request_1\ ,
            dma_req_0 => \USBUART:dma_request_0\ ,
            dma_termin => \USBUART:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,3): 
    vrefcell: Name =\Seat_ADC:SAR:vRef_1024\
        PORT MAP (
            vout => \Seat_ADC:SAR:Net_233\ );
        Properties:
        {
            autoenable = 1
            guid = "89B398AD-36A8-4627-9212-707F2986319E"
            ignoresleep = 0
            name = "1.024V"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\Seat_ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \Seat_ADC:Net_2803\ ,
            vminus => \Seat_ADC:V_diff1\ ,
            ext_pin => \Seat_ADC:SAR:Net_209\ ,
            vrefhi_out => \Seat_ADC:SAR:Net_255\ ,
            vref => \Seat_ADC:SAR:Net_233\ ,
            clk_udb => \Seat_ADC:clock_local\ ,
            sof_udb => \Seat_ADC:soc_out\ ,
            irq => \Seat_ADC:SAR:Net_252\ ,
            next => Net_255 ,
            data_out_udb_11 => \Seat_ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \Seat_ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \Seat_ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \Seat_ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \Seat_ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \Seat_ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \Seat_ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \Seat_ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \Seat_ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \Seat_ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \Seat_ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \Seat_ADC:SAR:Net_207_0\ ,
            eof_udb => \Seat_ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\Seat_ADC:AMuxHw_1_CYAMUXSIDE_A\
        PORT MAP (
            muxin_31 => Net_329 ,
            muxin_30 => Net_326 ,
            muxin_29 => Net_324 ,
            muxin_28 => Net_321 ,
            muxin_27 => Net_319 ,
            muxin_26 => Net_316 ,
            muxin_25 => Net_314 ,
            muxin_24 => Net_311 ,
            muxin_23 => Net_309 ,
            muxin_22 => Net_306 ,
            muxin_21 => Net_304 ,
            muxin_20 => Net_301 ,
            muxin_19 => Net_299 ,
            muxin_18 => Net_296 ,
            muxin_17 => Net_294 ,
            muxin_16 => Net_291 ,
            muxin_15 => Net_289 ,
            muxin_14 => Net_286 ,
            muxin_13 => Net_284 ,
            muxin_12 => Net_281 ,
            muxin_11 => Net_279 ,
            muxin_10 => Net_276 ,
            muxin_9 => Net_274 ,
            muxin_8 => Net_271 ,
            muxin_7 => Net_269 ,
            muxin_6 => Net_266 ,
            muxin_5 => Net_264 ,
            muxin_4 => Net_261 ,
            muxin_3 => Net_259 ,
            muxin_2 => Net_187 ,
            muxin_1 => Net_190 ,
            muxin_0 => Net_182 ,
            hw_ctrl_en_31 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_3\ ,
            vout => \Seat_ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "00000000000000000000000000000000"
            muxin_width = 32
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\Seat_ADC:AMuxHw_1_CYAMUXSIDE_B\
        PORT MAP (
            muxin_31 => Net_330 ,
            muxin_30 => Net_327 ,
            muxin_29 => Net_325 ,
            muxin_28 => Net_322 ,
            muxin_27 => Net_320 ,
            muxin_26 => Net_317 ,
            muxin_25 => Net_315 ,
            muxin_24 => Net_312 ,
            muxin_23 => Net_310 ,
            muxin_22 => Net_307 ,
            muxin_21 => Net_305 ,
            muxin_20 => Net_302 ,
            muxin_19 => Net_300 ,
            muxin_18 => Net_297 ,
            muxin_17 => Net_295 ,
            muxin_16 => Net_292 ,
            muxin_15 => Net_290 ,
            muxin_14 => Net_287 ,
            muxin_13 => Net_285 ,
            muxin_12 => Net_282 ,
            muxin_11 => Net_280 ,
            muxin_10 => Net_277 ,
            muxin_9 => Net_275 ,
            muxin_8 => Net_272 ,
            muxin_7 => Net_270 ,
            muxin_6 => Net_267 ,
            muxin_5 => Net_265 ,
            muxin_4 => Net_262 ,
            muxin_3 => Net_260 ,
            muxin_2 => Net_180 ,
            muxin_1 => Net_189 ,
            muxin_0 => Net_178 ,
            hw_ctrl_en_31 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \Seat_ADC:AMuxHw_1_Decoder_one_hot_3\ ,
            vout => \Seat_ADC:V_diff1\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "00000000000000000000000000000000"
            muxin_width = 32
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                 | 
Port | Pin | Fixed |      Type |       Drive Mode |            Name | Connections
-----+-----+-------+-----------+------------------+-----------------+-----------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG |          sAn(0) | In(\Seat_ADC:AMuxHw_1_Decoder_one_hot_0\), Analog(Net_178)
     |   1 |     * |      NONE |      HI_Z_ANALOG |          sAp(0) | In(\Seat_ADC:AMuxHw_1_Decoder_one_hot_0\), Analog(Net_182)
     |   2 |     * |      NONE |      HI_Z_ANALOG |          sBn(0) | In(\Seat_ADC:AMuxHw_1_Decoder_one_hot_1\), Analog(Net_189)
     |   3 |     * |      NONE |      HI_Z_ANALOG |          sBp(0) | In(\Seat_ADC:AMuxHw_1_Decoder_one_hot_1\), Analog(Net_190)
     |   4 |     * |      NONE |      HI_Z_ANALOG |          sCn(0) | In(\Seat_ADC:AMuxHw_1_Decoder_one_hot_2\), Analog(Net_180)
     |   5 |     * |      NONE |      HI_Z_ANALOG |          sCp(0) | In(\Seat_ADC:AMuxHw_1_Decoder_one_hot_2\), Analog(Net_187)
-----+-----+-------+-----------+------------------+-----------------+-----------------------------------------------------------
   2 |   1 |     * |      NONE |         CMOS_OUT |          LED(0) | 
-----+-----+-------+-----------+------------------+-----------------+-----------------------------------------------------------
   3 |   1 |     * |      NONE |     HI_Z_DIGITAL | BNO_Interupt(0) | FB(Net_388)
-----+-----+-------+-----------+------------------+-----------------+-----------------------------------------------------------
  12 |   0 |     * |      NONE |    OPEN_DRAIN_LO |        SCL_1(0) | FB(\I2C:Net_1109_0\), In(\I2C:Net_643_0\)
     |   1 |     * |      NONE |    OPEN_DRAIN_LO |        SDA_1(0) | FB(\I2C:Net_1109_1\), In(\I2C:sda_x_wire\)
-----+-----+-------+-----------+------------------+-----------------+-----------------------------------------------------------
  15 |   6 |       |   FALLING |      HI_Z_ANALOG | \USBUART:Dp(0)\ | Analog(\USBUART:Net_1000\)
     |   7 |       |      NONE |      HI_Z_ANALOG | \USBUART:Dm(0)\ | Analog(\USBUART:Net_597\)
--------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.106ms
Digital Placement phase: Elapsed time ==> 1s.707ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "IMU_r.vh2" --pcf-path "IMU.pco" --des-name "IMU" --dsf-path "IMU.dsf" --sdc-path "IMU.sdc" --lib-path "IMU_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 2s.008ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.233ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.037ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in IMU_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.523ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.317ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 9s.086ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 9s.087ms
API generation phase: Elapsed time ==> 3s.048ms
Dependency generation phase: Elapsed time ==> 0s.033ms
Cleanup phase: Elapsed time ==> 0s.000ms
