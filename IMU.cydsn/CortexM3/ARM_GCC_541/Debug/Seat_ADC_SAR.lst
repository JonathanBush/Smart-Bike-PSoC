ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Seat_ADC_SAR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Seat_ADC_SAR_initVar
  20              		.bss
  21              		.type	Seat_ADC_SAR_initVar, %object
  22              		.size	Seat_ADC_SAR_initVar, 1
  23              	Seat_ADC_SAR_initVar:
  24 0000 00       		.space	1
  25              		.comm	Seat_ADC_SAR_offset,2,2
  26              		.comm	Seat_ADC_SAR_countsPerVolt,2,2
  27              		.comm	Seat_ADC_SAR_countsPer10Volt,4,4
  28              		.comm	Seat_ADC_SAR_shift,2,2
  29              		.section	.text.Seat_ADC_SAR_Start,"ax",%progbits
  30              		.align	2
  31              		.global	Seat_ADC_SAR_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	Seat_ADC_SAR_Start, %function
  35              	Seat_ADC_SAR_Start:
  36              	.LFB0:
  37              		.file 1 "Generated_Source\\PSoC5\\Seat_ADC_SAR.c"
   1:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * File Name: Seat_ADC_SAR.c
   3:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Version 3.10
   4:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
   5:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Description:
   6:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
   9:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Note:
  10:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  11:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  18:Generated_Source\PSoC5/Seat_ADC_SAR.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/Seat_ADC_SAR.c **** #include "Seat_ADC_SAR.h"
  20:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 2


  21:Generated_Source\PSoC5/Seat_ADC_SAR.c **** #if(Seat_ADC_SAR_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #include "Seat_ADC_SAR_theACLK.h"
  23:Generated_Source\PSoC5/Seat_ADC_SAR.c **** #endif /* End Seat_ADC_SAR_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  25:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  26:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /***************************************
  27:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Forward function references
  28:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ***************************************/
  29:Generated_Source\PSoC5/Seat_ADC_SAR.c **** static void Seat_ADC_SAR_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  31:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  32:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /***************************************
  33:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global data allocation
  34:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ***************************************/
  35:Generated_Source\PSoC5/Seat_ADC_SAR.c **** uint8 Seat_ADC_SAR_initVar = 0u;
  36:Generated_Source\PSoC5/Seat_ADC_SAR.c **** volatile int16 Seat_ADC_SAR_offset;
  37:Generated_Source\PSoC5/Seat_ADC_SAR.c **** volatile int16 Seat_ADC_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/Seat_ADC_SAR.c **** volatile int32 Seat_ADC_SAR_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/Seat_ADC_SAR.c **** volatile int16 Seat_ADC_SAR_shift;
  40:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  41:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  42:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_Start
  44:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
  45:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  46:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
  47:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Init() function, and then calls the
  50:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Enable() function.
  51:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  52:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
  53:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
  54:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  55:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
  56:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
  57:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  58:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global variables:
  59:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  The Seat_ADC_SAR_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Start() routine.
  64:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  to zero before call of Seat_ADC_SAR_Start() routine, or the user may call
  66:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Init() and Seat_ADC_SAR_Enable() as done in the
  67:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Start() routine.
  68:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  69:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Side Effect:
  70:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Enable() function.
  72:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  73:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_Start(void)
  75:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
  38              		.loc 1 75 0
  39              		.cfi_startproc
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 3


  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  76:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  77:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     if(Seat_ADC_SAR_initVar == 0u)
  48              		.loc 1 78 0
  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  79:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
  80:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_Init();
  53              		.loc 1 80 0
  54 000c FFF7FEFF 		bl	Seat_ADC_SAR_Init
  81:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_initVar = 1u;
  55              		.loc 1 81 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		movs	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  82:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
  83:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_Enable();
  60              		.loc 1 83 0
  61 0016 FFF7FEFF 		bl	Seat_ADC_SAR_Enable
  84:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
  62              		.loc 1 84 0
  63 001a 00BF     		nop
  64 001c 80BD     		pop	{r7, pc}
  65              	.L4:
  66 001e 00BF     		.align	2
  67              	.L3:
  68 0020 00000000 		.word	Seat_ADC_SAR_initVar
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	Seat_ADC_SAR_Start, .-Seat_ADC_SAR_Start
  72              		.section	.text.Seat_ADC_SAR_Init,"ax",%progbits
  73              		.align	2
  74              		.global	Seat_ADC_SAR_Init
  75              		.thumb
  76              		.thumb_func
  77              		.type	Seat_ADC_SAR_Init, %function
  78              	Seat_ADC_SAR_Init:
  79              	.LFB1:
  85:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  86:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
  87:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_Init
  89:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
  90:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  91:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
  92:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 4


  93:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_Start().
  95:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  96:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
  97:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
  98:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
  99:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 100:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 101:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 102:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global variables:
 103:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  The Seat_ADC_SAR_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 105:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_Init(void)
 107:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
  80              		.loc 1 107 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 109:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* End Seat_ADC_SAR_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 114:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         CyIntSetPriority(Seat_ADC_SAR_INTC_NUMBER, Seat_ADC_SAR_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         (void)CyIntSetVector(Seat_ADC_SAR_INTC_NUMBER, &Seat_ADC_SAR_ISR);
 118:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif   /* End Seat_ADC_SAR_IRQ_REMOVE */
 119:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 120:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CSR1_REG |= Seat_ADC_SAR_SAR_IRQ_MASK_EN | Seat_ADC_SAR_SAR_IRQ_MODE_EDGE;
  90              		.loc 1 121 0
  91 0004 074A     		ldr	r2, .L6
  92 0006 074B     		ldr	r3, .L6
  93 0008 1B78     		ldrb	r3, [r3]
  94 000a DBB2     		uxtb	r3, r3
  95 000c 43F00603 		orr	r3, r3, #6
  96 0010 DBB2     		uxtb	r3, r3
  97 0012 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 123:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SetResolution(Seat_ADC_SAR_DEFAULT_RESOLUTION);
  98              		.loc 1 124 0
  99 0014 0C20     		movs	r0, #12
 100 0016 FFF7FEFF 		bl	Seat_ADC_SAR_SetResolution
 125:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_offset = 0;
 101              		.loc 1 125 0
 102 001a 034B     		ldr	r3, .L6+4
 103 001c 0022     		movs	r2, #0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 5


 104 001e 1A80     		strh	r2, [r3]	@ movhi
 126:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 105              		.loc 1 126 0
 106 0020 00BF     		nop
 107 0022 80BD     		pop	{r7, pc}
 108              	.L7:
 109              		.align	2
 110              	.L6:
 111 0024 01590040 		.word	1073764609
 112 0028 00000000 		.word	Seat_ADC_SAR_offset
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	Seat_ADC_SAR_Init, .-Seat_ADC_SAR_Init
 116              		.section	.text.Seat_ADC_SAR_Enable,"ax",%progbits
 117              		.align	2
 118              		.global	Seat_ADC_SAR_Enable
 119              		.thumb
 120              		.thumb_func
 121              		.type	Seat_ADC_SAR_Enable, %function
 122              	Seat_ADC_SAR_Enable:
 123              	.LFB2:
 127:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 128:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 129:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_Enable
 131:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 132:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 133:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 134:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 136:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 137:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 138:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 139:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 140:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 141:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 142:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_Enable(void)
 144:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 124              		.loc 1 144 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 136              		.loc 1 147 0
 137 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 138 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 6


 139 000c FB71     		strb	r3, [r7, #7]
 148:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 149:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_PWRMGR_SAR_REG |= Seat_ADC_SAR_ACT_PWR_SAR_EN;
 140              		.loc 1 150 0
 141 000e 254A     		ldr	r2, .L9
 142 0010 244B     		ldr	r3, .L9
 143 0012 1B78     		ldrb	r3, [r3]
 144 0014 DBB2     		uxtb	r3, r3
 145 0016 43F00103 		orr	r3, r3, #1
 146 001a DBB2     		uxtb	r3, r3
 147 001c 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 152:Generated_Source\PSoC5/Seat_ADC_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_STBY_PWRMGR_SAR_REG |= Seat_ADC_SAR_STBY_PWR_SAR_EN;
 148              		.loc 1 153 0
 149 001e 224A     		ldr	r2, .L9+4
 150 0020 214B     		ldr	r3, .L9+4
 151 0022 1B78     		ldrb	r3, [r3]
 152 0024 DBB2     		uxtb	r3, r3
 153 0026 43F00103 		orr	r3, r3, #1
 154 002a DBB2     		uxtb	r3, r3
 155 002c 1370     		strb	r3, [r2]
 154:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 155:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_PWRMGR_CLK_REG |= Seat_ADC_SAR_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_STBY_PWRMGR_CLK_REG |= Seat_ADC_SAR_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* End Seat_ADC_SAR_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 161:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     tmpReg = Seat_ADC_SAR_SAR_CSR3_REG;
 156              		.loc 1 162 0
 157 002e 1F4B     		ldr	r3, .L9+8
 158 0030 1B78     		ldrb	r3, [r3]
 159 0032 BB71     		strb	r3, [r7, #6]
 163:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     tmpReg |= Seat_ADC_SAR_SAR_EN_BUF_VCM_EN;
 160              		.loc 1 163 0
 161 0034 BB79     		ldrb	r3, [r7, #6]
 162 0036 43F00203 		orr	r3, r3, #2
 163 003a BB71     		strb	r3, [r7, #6]
 164:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if((Seat_ADC_SAR_DEFAULT_REFERENCE == Seat_ADC_SAR__EXT_REF) || \
 166:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         tmpReg &= (uint8)~Seat_ADC_SAR_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         tmpReg |= Seat_ADC_SAR_SAR_EN_BUF_VREF_EN;
 164              		.loc 1 169 0
 165 003c BB79     		ldrb	r3, [r7, #6]
 166 003e 43F00103 		orr	r3, r3, #1
 167 0042 BB71     		strb	r3, [r7, #6]
 170:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* Seat_ADC_SAR_DEFAULT_REFERENCE == Seat_ADC_SAR__EXT_REF */
 171:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CSR3_REG = tmpReg;
 168              		.loc 1 171 0
 169 0044 194A     		ldr	r2, .L9+8
 170 0046 BB79     		ldrb	r3, [r7, #6]
 171 0048 1370     		strb	r3, [r2]
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 7


 172:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 173:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #if(Seat_ADC_SAR_DEFAULT_REFERENCE == Seat_ADC_SAR__EXT_REF)
 176:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             Seat_ADC_SAR_SAR_CSR6_REG = Seat_ADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             Seat_ADC_SAR_SAR_CSR6_REG = Seat_ADC_SAR_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #endif /* Seat_ADC_SAR_DEFAULT_REFERENCE == Seat_ADC_SAR__EXT_REF */
 180:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #if(Seat_ADC_SAR_DEFAULT_REFERENCE == Seat_ADC_SAR__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             Seat_ADC_SAR_SAR_CSR6_REG = Seat_ADC_SAR_INT_VREF;            /* S3 + S4 */
 172              		.loc 1 182 0
 173 004a 194B     		ldr	r3, .L9+12
 174 004c 1822     		movs	r2, #24
 175 004e 1A70     		strb	r2, [r3]
 183:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             Seat_ADC_SAR_SAR_CSR6_REG = Seat_ADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #endif /* Seat_ADC_SAR_DEFAULT_REFERENCE == Seat_ADC_SAR__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 188:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_SAR_CSR5_REG &= (uint8)~Seat_ADC_SAR_SAR_DLY_INC;
 191:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_SAR_CSR5_REG |= Seat_ADC_SAR_SAR_DLY_INC;
 176              		.loc 1 192 0
 177 0050 184A     		ldr	r2, .L9+16
 178 0052 184B     		ldr	r3, .L9+16
 179 0054 1B78     		ldrb	r3, [r3]
 180 0056 DBB2     		uxtb	r3, r3
 181 0058 43F04003 		orr	r3, r3, #64
 182 005c DBB2     		uxtb	r3, r3
 183 005e 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* Seat_ADC_SAR_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 195:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     */
 199:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_SAR_CSR5_REG |= Seat_ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_SAR_CSR5_REG &= (uint8)~Seat_ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 184              		.loc 1 202 0
 185 0060 144A     		ldr	r2, .L9+16
 186 0062 144B     		ldr	r3, .L9+16
 187 0064 1B78     		ldrb	r3, [r3]
 188 0066 DBB2     		uxtb	r3, r3
 189 0068 23F00303 		bic	r3, r3, #3
 190 006c DBB2     		uxtb	r3, r3
 191 006e 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* Seat_ADC_SAR_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 205:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CSR0_REG = (uint8)((uint8)Seat_ADC_SAR_DEFAULT_POWER << Seat_ADC_SAR_SAR_POWER
 192              		.loc 1 206 0
 193 0070 114B     		ldr	r3, .L9+20
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 8


 194 0072 CE22     		movs	r2, #206
 195 0074 1A70     		strb	r2, [r3]
 207:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if ((CY_PSOC5LP) || (Seat_ADC_SAR_DEFAULT_REFERENCE != Seat_ADC_SAR__EXT_REF))
 209:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         | Seat_ADC_SAR_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_DEFAULT_CONV_MODE != Seat_ADC_SAR__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         | Seat_ADC_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         | Seat_ADC_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* Seat_ADC_SAR_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 218:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_TR0_REG = Seat_ADC_SAR_SAR_CAP_TRIM_2;
 196              		.loc 1 218 0
 197 0076 114B     		ldr	r3, .L9+24
 198 0078 0222     		movs	r2, #2
 199 007a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 220:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CLK_REG |= Seat_ADC_SAR_SAR_MX_CLK_EN;
 200              		.loc 1 221 0
 201 007c 104A     		ldr	r2, .L9+28
 202 007e 104B     		ldr	r3, .L9+28
 203 0080 1B78     		ldrb	r3, [r3]
 204 0082 DBB2     		uxtb	r3, r3
 205 0084 43F00803 		orr	r3, r3, #8
 206 0088 DBB2     		uxtb	r3, r3
 207 008a 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 223:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 208              		.loc 1 223 0
 209 008c 0A20     		movs	r0, #10
 210 008e FFF7FEFF 		bl	CyDelayUs
 224:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 225:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         CyIntClearPending(Seat_ADC_SAR_INTC_NUMBER);
 228:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif   /* End Seat_ADC_SAR_IRQ_REMOVE */
 229:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 230:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 230 0
 212 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 0094 1846     		mov	r0, r3
 214 0096 FFF7FEFF 		bl	CyExitCriticalSection
 231:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 215              		.loc 1 231 0
 216 009a 00BF     		nop
 217 009c 0837     		adds	r7, r7, #8
 218              		.cfi_def_cfa_offset 8
 219 009e BD46     		mov	sp, r7
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 00a0 80BD     		pop	{r7, pc}
 223              	.L10:
 224 00a2 00BF     		.align	2
 225              	.L9:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 9


 226 00a4 AB430040 		.word	1073759147
 227 00a8 BB430040 		.word	1073759163
 228 00ac 03590040 		.word	1073764611
 229 00b0 06590040 		.word	1073764614
 230 00b4 05590040 		.word	1073764613
 231 00b8 00590040 		.word	1073764608
 232 00bc 14460040 		.word	1073759764
 233 00c0 275B0040 		.word	1073765159
 234              		.cfi_endproc
 235              	.LFE2:
 236              		.size	Seat_ADC_SAR_Enable, .-Seat_ADC_SAR_Enable
 237              		.section	.text.Seat_ADC_SAR_Stop,"ax",%progbits
 238              		.align	2
 239              		.global	Seat_ADC_SAR_Stop
 240              		.thumb
 241              		.thumb_func
 242              		.type	Seat_ADC_SAR_Stop, %function
 243              	Seat_ADC_SAR_Stop:
 244              	.LFB3:
 232:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 233:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 234:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_Stop
 236:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 237:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 238:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 239:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 241:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 242:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 243:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 244:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 245:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 246:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 247:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_Stop(void)
 249:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 245              		.loc 1 249 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 250:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 257              		.loc 1 251 0
 258 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 259 000a 0346     		mov	r3, r0
 260 000c FB71     		strb	r3, [r7, #7]
 252:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 253:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Stop all conversions */
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 10


 254:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CSR0_REG &= (uint8)~Seat_ADC_SAR_SAR_SOF_START_CONV;
 261              		.loc 1 254 0
 262 000e 104A     		ldr	r2, .L12
 263 0010 0F4B     		ldr	r3, .L12
 264 0012 1B78     		ldrb	r3, [r3]
 265 0014 DBB2     		uxtb	r3, r3
 266 0016 23F00103 		bic	r3, r3, #1
 267 001a DBB2     		uxtb	r3, r3
 268 001c 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_PWRMGR_SAR_REG &= (uint8)~Seat_ADC_SAR_ACT_PWR_SAR_EN;
 269              		.loc 1 256 0
 270 001e 0D4A     		ldr	r2, .L12+4
 271 0020 0C4B     		ldr	r3, .L12+4
 272 0022 1B78     		ldrb	r3, [r3]
 273 0024 DBB2     		uxtb	r3, r3
 274 0026 23F00103 		bic	r3, r3, #1
 275 002a DBB2     		uxtb	r3, r3
 276 002c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~Seat_ADC_SAR_STBY_PWR_SAR_EN;
 277              		.loc 1 258 0
 278 002e 0A4A     		ldr	r2, .L12+8
 279 0030 094B     		ldr	r3, .L12+8
 280 0032 1B78     		ldrb	r3, [r3]
 281 0034 DBB2     		uxtb	r3, r3
 282 0036 23F00103 		bic	r3, r3, #1
 283 003a DBB2     		uxtb	r3, r3
 284 003c 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 260:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(Seat_ADC_SAR_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_PWRMGR_CLK_REG &= (uint8)~Seat_ADC_SAR_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~Seat_ADC_SAR_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* End Seat_ADC_SAR_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 266:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 285              		.loc 1 266 0
 286 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 287 0040 1846     		mov	r0, r3
 288 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 268:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 289              		.loc 1 268 0
 290 0046 00BF     		nop
 291 0048 0837     		adds	r7, r7, #8
 292              		.cfi_def_cfa_offset 8
 293 004a BD46     		mov	sp, r7
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 004c 80BD     		pop	{r7, pc}
 297              	.L13:
 298 004e 00BF     		.align	2
 299              	.L12:
 300 0050 00590040 		.word	1073764608
 301 0054 AB430040 		.word	1073759147
 302 0058 BB430040 		.word	1073759163
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 11


 303              		.cfi_endproc
 304              	.LFE3:
 305              		.size	Seat_ADC_SAR_Stop, .-Seat_ADC_SAR_Stop
 306              		.section	.text.Seat_ADC_SAR_SetPower,"ax",%progbits
 307              		.align	2
 308              		.global	Seat_ADC_SAR_SetPower
 309              		.thumb
 310              		.thumb_func
 311              		.type	Seat_ADC_SAR_SetPower, %function
 312              	Seat_ADC_SAR_SetPower:
 313              	.LFB4:
 269:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 270:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 271:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_SetPower
 273:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 274:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 275:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 276:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 279:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 280:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 286:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 287:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 288:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 289:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_SetPower(uint8 power)
 291:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 314              		.loc 1 291 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 16
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 7, -4
 322 0002 85B0     		sub	sp, sp, #20
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 326 0006 0346     		mov	r3, r0
 327 0008 FB71     		strb	r3, [r7, #7]
 292:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 294:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     power &= Seat_ADC_SAR_SAR_API_POWER_MASK;
 328              		.loc 1 295 0
 329 000a FB79     		ldrb	r3, [r7, #7]
 330 000c 03F00303 		and	r3, r3, #3
 331 0010 FB71     		strb	r3, [r7, #7]
 296:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 12


 297:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     tmpReg = Seat_ADC_SAR_SAR_CSR0_REG & (uint8)~Seat_ADC_SAR_SAR_POWER_MASK;
 332              		.loc 1 298 0
 333 0012 0A4B     		ldr	r3, .L15
 334 0014 1B78     		ldrb	r3, [r3]
 335 0016 DBB2     		uxtb	r3, r3
 336 0018 03F03F03 		and	r3, r3, #63
 337 001c FB73     		strb	r3, [r7, #15]
 299:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     tmpReg |= (uint8)(power << Seat_ADC_SAR_SAR_POWER_SHIFT);
 338              		.loc 1 299 0
 339 001e FB79     		ldrb	r3, [r7, #7]
 340 0020 9B01     		lsls	r3, r3, #6
 341 0022 DAB2     		uxtb	r2, r3
 342 0024 FB7B     		ldrb	r3, [r7, #15]
 343 0026 1343     		orrs	r3, r3, r2
 344 0028 FB73     		strb	r3, [r7, #15]
 300:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CSR0_REG = tmpReg;
 345              		.loc 1 300 0
 346 002a 044A     		ldr	r2, .L15
 347 002c FB7B     		ldrb	r3, [r7, #15]
 348 002e 1370     		strb	r3, [r2]
 301:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 349              		.loc 1 301 0
 350 0030 00BF     		nop
 351 0032 1437     		adds	r7, r7, #20
 352              		.cfi_def_cfa_offset 4
 353 0034 BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 0036 80BC     		pop	{r7}
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0038 7047     		bx	lr
 360              	.L16:
 361 003a 00BF     		.align	2
 362              	.L15:
 363 003c 00590040 		.word	1073764608
 364              		.cfi_endproc
 365              	.LFE4:
 366              		.size	Seat_ADC_SAR_SetPower, .-Seat_ADC_SAR_SetPower
 367              		.section	.text.Seat_ADC_SAR_SetResolution,"ax",%progbits
 368              		.align	2
 369              		.global	Seat_ADC_SAR_SetResolution
 370              		.thumb
 371              		.thumb_func
 372              		.type	Seat_ADC_SAR_SetResolution, %function
 373              	Seat_ADC_SAR_SetResolution:
 374              	.LFB5:
 302:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 303:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 304:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_SetResolution
 306:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 307:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 308:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 309:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 13


 311:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 312:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  resolution:
 313:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 317:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 318:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 319:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 320:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Side Effects:
 321:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  clock cycles.
 332:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 339:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 375              		.loc 1 341 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 16
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 80B5     		push	{r7, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 84B0     		sub	sp, sp, #16
 384              		.cfi_def_cfa_offset 24
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 387 0006 0346     		mov	r3, r0
 388 0008 FB71     		strb	r3, [r7, #7]
 342:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 344:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     switch (resolution)
 389              		.loc 1 345 0
 390 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 391 000c 0A2B     		cmp	r3, #10
 392 000e 07D0     		beq	.L19
 393 0010 0C2B     		cmp	r3, #12
 394 0012 02D0     		beq	.L20
 395 0014 082B     		cmp	r3, #8
 396 0016 06D0     		beq	.L21
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 14


 397 0018 08E0     		b	.L23
 398              	.L20:
 346:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 347:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         case (uint8)Seat_ADC_SAR__BITS_12:
 348:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             tmpReg = Seat_ADC_SAR_SAR_RESOLUTION_12BIT | Seat_ADC_SAR_SAR_SAMPLE_WIDTH;
 399              		.loc 1 348 0
 400 001a C223     		movs	r3, #194
 401 001c FB73     		strb	r3, [r7, #15]
 349:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 402              		.loc 1 349 0
 403 001e 0BE0     		b	.L22
 404              	.L19:
 350:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         case (uint8)Seat_ADC_SAR__BITS_10:
 351:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             tmpReg = Seat_ADC_SAR_SAR_RESOLUTION_10BIT | Seat_ADC_SAR_SAR_SAMPLE_WIDTH;
 405              		.loc 1 351 0
 406 0020 8223     		movs	r3, #130
 407 0022 FB73     		strb	r3, [r7, #15]
 352:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 408              		.loc 1 352 0
 409 0024 08E0     		b	.L22
 410              	.L21:
 353:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         case (uint8)Seat_ADC_SAR__BITS_8:
 354:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             tmpReg = Seat_ADC_SAR_SAR_RESOLUTION_8BIT | Seat_ADC_SAR_SAR_SAMPLE_WIDTH;
 411              		.loc 1 354 0
 412 0026 4223     		movs	r3, #66
 413 0028 FB73     		strb	r3, [r7, #15]
 355:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 414              		.loc 1 355 0
 415 002a 05E0     		b	.L22
 416              	.L23:
 356:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         default:
 357:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             tmpReg = Seat_ADC_SAR_SAR_RESOLUTION_12BIT | Seat_ADC_SAR_SAR_SAMPLE_WIDTH;
 417              		.loc 1 357 0
 418 002c C223     		movs	r3, #194
 419 002e FB73     		strb	r3, [r7, #15]
 358:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             CYASSERT(0u != 0u);
 420              		.loc 1 359 0
 421 0030 0020     		movs	r0, #0
 422 0032 FFF7FEFF 		bl	CyHalt
 360:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 423              		.loc 1 360 0
 424 0036 00BF     		nop
 425              	.L22:
 361:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 362:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_SAR_CSR2_REG = tmpReg;
 426              		.loc 1 362 0
 427 0038 054A     		ldr	r2, .L24
 428 003a FB7B     		ldrb	r3, [r7, #15]
 429 003c 1370     		strb	r3, [r2]
 363:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 364:Generated_Source\PSoC5/Seat_ADC_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_CalcGain(resolution);
 430              		.loc 1 365 0
 431 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 432 0040 1846     		mov	r0, r3
 433 0042 FFF7FEFF 		bl	Seat_ADC_SAR_CalcGain
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 15


 366:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 434              		.loc 1 366 0
 435 0046 00BF     		nop
 436 0048 1037     		adds	r7, r7, #16
 437              		.cfi_def_cfa_offset 8
 438 004a BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 004c 80BD     		pop	{r7, pc}
 442              	.L25:
 443 004e 00BF     		.align	2
 444              	.L24:
 445 0050 02590040 		.word	1073764610
 446              		.cfi_endproc
 447              	.LFE5:
 448              		.size	Seat_ADC_SAR_SetResolution, .-Seat_ADC_SAR_SetResolution
 449              		.section	.text.Seat_ADC_SAR_StartConvert,"ax",%progbits
 450              		.align	2
 451              		.global	Seat_ADC_SAR_StartConvert
 452              		.thumb
 453              		.thumb_func
 454              		.type	Seat_ADC_SAR_StartConvert, %function
 455              	Seat_ADC_SAR_StartConvert:
 456              	.LFB6:
 367:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 368:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 369:Generated_Source\PSoC5/Seat_ADC_SAR.c **** #if(Seat_ADC_SAR_DEFAULT_CONV_MODE != Seat_ADC_SAR__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 371:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 372:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Function Name: Seat_ADC_SAR_StartConvert
 374:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 376:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Summary:
 377:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Seat_ADC_SAR_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 383:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Parameters:
 384:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  None.
 385:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 386:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Return:
 387:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  None.
 388:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 389:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Theory:
 390:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 395:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Side Effects:
 396:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 16


 400:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     void Seat_ADC_SAR_StartConvert(void)
 402:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 457              		.loc 1 402 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #if(Seat_ADC_SAR_DEFAULT_CONV_MODE != Seat_ADC_SAR__FREE_RUNNING)  /* If software triggered
 404:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             Seat_ADC_SAR_SAR_CSR0_REG &= (uint8)~Seat_ADC_SAR_SAR_MX_SOF_UDB;   /* source: SOF bit 
 467              		.loc 1 404 0
 468 0004 094A     		ldr	r2, .L27
 469 0006 094B     		ldr	r3, .L27
 470 0008 1B78     		ldrb	r3, [r3]
 471 000a DBB2     		uxtb	r3, r3
 472 000c 23F00403 		bic	r3, r3, #4
 473 0010 DBB2     		uxtb	r3, r3
 474 0012 1370     		strb	r3, [r2]
 405:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #endif /* End Seat_ADC_SAR_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 407:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_SAR_CSR0_REG |= Seat_ADC_SAR_SAR_SOF_START_CONV;
 475              		.loc 1 408 0
 476 0014 054A     		ldr	r2, .L27
 477 0016 054B     		ldr	r3, .L27
 478 0018 1B78     		ldrb	r3, [r3]
 479 001a DBB2     		uxtb	r3, r3
 480 001c 43F00103 		orr	r3, r3, #1
 481 0020 DBB2     		uxtb	r3, r3
 482 0022 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 483              		.loc 1 409 0
 484 0024 00BF     		nop
 485 0026 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0028 80BC     		pop	{r7}
 489              		.cfi_restore 7
 490              		.cfi_def_cfa_offset 0
 491 002a 7047     		bx	lr
 492              	.L28:
 493              		.align	2
 494              	.L27:
 495 002c 00590040 		.word	1073764608
 496              		.cfi_endproc
 497              	.LFE6:
 498              		.size	Seat_ADC_SAR_StartConvert, .-Seat_ADC_SAR_StartConvert
 499              		.section	.text.Seat_ADC_SAR_StopConvert,"ax",%progbits
 500              		.align	2
 501              		.global	Seat_ADC_SAR_StopConvert
 502              		.thumb
 503              		.thumb_func
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 17


 504              		.type	Seat_ADC_SAR_StopConvert, %function
 505              	Seat_ADC_SAR_StopConvert:
 506              	.LFB7:
 410:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 411:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 412:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Function Name: Seat_ADC_SAR_StopConvert
 414:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 416:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Summary:
 417:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 421:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Parameters:
 422:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  None.
 423:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 424:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Return:
 425:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  None.
 426:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 427:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Theory:
 428:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 430:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     * Side Effects:
 431:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *
 434:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     void Seat_ADC_SAR_StopConvert(void)
 436:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 507              		.loc 1 436 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512 0000 80B4     		push	{r7}
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 7, -4
 515 0002 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 437:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_SAR_CSR0_REG &= (uint8)~Seat_ADC_SAR_SAR_SOF_START_CONV;
 517              		.loc 1 438 0
 518 0004 094A     		ldr	r2, .L30
 519 0006 094B     		ldr	r3, .L30
 520 0008 1B78     		ldrb	r3, [r3]
 521 000a DBB2     		uxtb	r3, r3
 522 000c 23F00103 		bic	r3, r3, #1
 523 0010 DBB2     		uxtb	r3, r3
 524 0012 1370     		strb	r3, [r2]
 439:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 440:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #if(Seat_ADC_SAR_DEFAULT_CONV_MODE != Seat_ADC_SAR__FREE_RUNNING)  /* If software triggered
 441:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             Seat_ADC_SAR_SAR_CSR0_REG |= Seat_ADC_SAR_SAR_MX_SOF_UDB;    /* source: UDB */
 525              		.loc 1 442 0
 526 0014 054A     		ldr	r2, .L30
 527 0016 054B     		ldr	r3, .L30
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 18


 528 0018 1B78     		ldrb	r3, [r3]
 529 001a DBB2     		uxtb	r3, r3
 530 001c 43F00403 		orr	r3, r3, #4
 531 0020 DBB2     		uxtb	r3, r3
 532 0022 1370     		strb	r3, [r2]
 443:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         #endif /* End Seat_ADC_SAR_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 445:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 533              		.loc 1 445 0
 534 0024 00BF     		nop
 535 0026 BD46     		mov	sp, r7
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 0028 80BC     		pop	{r7}
 539              		.cfi_restore 7
 540              		.cfi_def_cfa_offset 0
 541 002a 7047     		bx	lr
 542              	.L31:
 543              		.align	2
 544              	.L30:
 545 002c 00590040 		.word	1073764608
 546              		.cfi_endproc
 547              	.LFE7:
 548              		.size	Seat_ADC_SAR_StopConvert, .-Seat_ADC_SAR_StopConvert
 549              		.section	.text.Seat_ADC_SAR_IsEndConversion,"ax",%progbits
 550              		.align	2
 551              		.global	Seat_ADC_SAR_IsEndConversion
 552              		.thumb
 553              		.thumb_func
 554              		.type	Seat_ADC_SAR_IsEndConversion, %function
 555              	Seat_ADC_SAR_IsEndConversion:
 556              	.LFB8:
 446:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 447:Generated_Source\PSoC5/Seat_ADC_SAR.c **** #endif /* End Seat_ADC_SAR_DEFAULT_CONV_MODE != Seat_ADC_SAR__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 449:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 450:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_IsEndConversion
 452:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 453:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 454:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 455:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  parameter.
 458:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 459:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 460:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *   Seat_ADC_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *   Seat_ADC_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 467:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 468:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 19


 471:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Side Effects:
 472:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 474:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/Seat_ADC_SAR.c **** uint8 Seat_ADC_SAR_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 557              		.loc 1 476 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 16
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 84B0     		sub	sp, sp, #16
 566              		.cfi_def_cfa_offset 24
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0006 0346     		mov	r3, r0
 570 0008 FB71     		strb	r3, [r7, #7]
 571              	.L34:
 477:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint8 status;
 478:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 479:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     do
 480:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 481:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         status = Seat_ADC_SAR_SAR_CSR1_REG & Seat_ADC_SAR_SAR_EOF_1;
 572              		.loc 1 481 0 discriminator 2
 573 000a 0C4B     		ldr	r3, .L37
 574 000c 1B78     		ldrb	r3, [r3]
 575 000e DBB2     		uxtb	r3, r3
 576 0010 03F00103 		and	r3, r3, #1
 577 0014 FB73     		strb	r3, [r7, #15]
 482:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     } while ((status != Seat_ADC_SAR_SAR_EOF_1) && (retMode == Seat_ADC_SAR_WAIT_FOR_RESULT));
 578              		.loc 1 482 0 discriminator 2
 579 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 580 0018 012B     		cmp	r3, #1
 581 001a 02D0     		beq	.L33
 582              		.loc 1 482 0 is_stmt 0 discriminator 1
 583 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 584 001e 002B     		cmp	r3, #0
 585 0020 F3D0     		beq	.L34
 586              	.L33:
 483:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     if(status == Seat_ADC_SAR_SAR_EOF_1)
 587              		.loc 1 484 0 is_stmt 1
 588 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 589 0024 012B     		cmp	r3, #1
 590 0026 04D1     		bne	.L35
 485:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 486:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         CyDelayUs(1u);
 591              		.loc 1 487 0
 592 0028 0120     		movs	r0, #1
 593 002a FFF7FEFF 		bl	CyDelayUs
 488:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         CY_GET_REG8(Seat_ADC_SAR_SAR_CSR1_PTR);
 594              		.loc 1 489 0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 20


 595 002e 034B     		ldr	r3, .L37
 596 0030 1B78     		ldrb	r3, [r3]
 597              	.L35:
 490:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 491:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 492:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     return(status);
 598              		.loc 1 492 0
 599 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 600              		.loc 1 493 0
 601 0034 1846     		mov	r0, r3
 602 0036 1037     		adds	r7, r7, #16
 603              		.cfi_def_cfa_offset 8
 604 0038 BD46     		mov	sp, r7
 605              		.cfi_def_cfa_register 13
 606              		@ sp needed
 607 003a 80BD     		pop	{r7, pc}
 608              	.L38:
 609              		.align	2
 610              	.L37:
 611 003c 01590040 		.word	1073764609
 612              		.cfi_endproc
 613              	.LFE8:
 614              		.size	Seat_ADC_SAR_IsEndConversion, .-Seat_ADC_SAR_IsEndConversion
 615              		.section	.text.Seat_ADC_SAR_GetResult8,"ax",%progbits
 616              		.align	2
 617              		.global	Seat_ADC_SAR_GetResult8
 618              		.thumb
 619              		.thumb_func
 620              		.type	Seat_ADC_SAR_GetResult8, %function
 621              	Seat_ADC_SAR_GetResult8:
 622              	.LFB9:
 494:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 495:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 496:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_GetResult8
 498:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 499:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 500:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 501:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *   sample is ready.
 505:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 506:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 507:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 508:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 509:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 510:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 512:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 513:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  compliment form.
 515:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 516:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Side Effects:
 517:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 21


 519:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/Seat_ADC_SAR.c **** int8 Seat_ADC_SAR_GetResult8( void )
 521:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 623              		.loc 1 521 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     return( (int8)Seat_ADC_SAR_SAR_WRK0_REG - (int8)Seat_ADC_SAR_shift);
 633              		.loc 1 522 0
 634 0004 064B     		ldr	r3, .L41
 635 0006 1B78     		ldrb	r3, [r3]
 636 0008 DAB2     		uxtb	r2, r3
 637 000a 064B     		ldr	r3, .L41+4
 638 000c 1B88     		ldrh	r3, [r3]	@ movhi
 639 000e 1BB2     		sxth	r3, r3
 640 0010 DBB2     		uxtb	r3, r3
 641 0012 D31A     		subs	r3, r2, r3
 642 0014 DBB2     		uxtb	r3, r3
 643 0016 5BB2     		sxtb	r3, r3
 523:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 644              		.loc 1 523 0
 645 0018 1846     		mov	r0, r3
 646 001a BD46     		mov	sp, r7
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 001c 80BC     		pop	{r7}
 650              		.cfi_restore 7
 651              		.cfi_def_cfa_offset 0
 652 001e 7047     		bx	lr
 653              	.L42:
 654              		.align	2
 655              	.L41:
 656 0020 A05B0040 		.word	1073765280
 657 0024 00000000 		.word	Seat_ADC_SAR_shift
 658              		.cfi_endproc
 659              	.LFE9:
 660              		.size	Seat_ADC_SAR_GetResult8, .-Seat_ADC_SAR_GetResult8
 661              		.section	.text.Seat_ADC_SAR_GetResult16,"ax",%progbits
 662              		.align	2
 663              		.global	Seat_ADC_SAR_GetResult16
 664              		.thumb
 665              		.thumb_func
 666              		.type	Seat_ADC_SAR_GetResult16, %function
 667              	Seat_ADC_SAR_GetResult16:
 668              	.LFB10:
 524:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 525:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 526:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_GetResult16
 528:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 529:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 22


 530:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 531:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *   sample is ready
 535:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 536:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 537:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 538:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 539:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 540:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 542:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 543:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  compliment form.
 545:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 546:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Side Effects:
 547:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 549:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/Seat_ADC_SAR.c **** int16 Seat_ADC_SAR_GetResult16( void )
 551:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 669              		.loc 1 551 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 8
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 0002 83B0     		sub	sp, sp, #12
 678              		.cfi_def_cfa_offset 16
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 552:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uint16 res;
 553:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 554:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     res = CY_GET_REG16(Seat_ADC_SAR_SAR_WRK_PTR);
 681              		.loc 1 554 0
 682 0006 084B     		ldr	r3, .L45
 683 0008 1B88     		ldrh	r3, [r3]	@ movhi
 684 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 556:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     return( (int16)res - Seat_ADC_SAR_shift );
 685              		.loc 1 556 0
 686 000c 074B     		ldr	r3, .L45+4
 687 000e 1B88     		ldrh	r3, [r3]	@ movhi
 688 0010 1BB2     		sxth	r3, r3
 689 0012 9BB2     		uxth	r3, r3
 690 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 691 0016 D31A     		subs	r3, r2, r3
 692 0018 9BB2     		uxth	r3, r3
 693 001a 1BB2     		sxth	r3, r3
 557:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 694              		.loc 1 557 0
 695 001c 1846     		mov	r0, r3
 696 001e 0C37     		adds	r7, r7, #12
 697              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 23


 698 0020 BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 0022 80BC     		pop	{r7}
 702              		.cfi_restore 7
 703              		.cfi_def_cfa_offset 0
 704 0024 7047     		bx	lr
 705              	.L46:
 706 0026 00BF     		.align	2
 707              	.L45:
 708 0028 A05B0040 		.word	1073765280
 709 002c 00000000 		.word	Seat_ADC_SAR_shift
 710              		.cfi_endproc
 711              	.LFE10:
 712              		.size	Seat_ADC_SAR_GetResult16, .-Seat_ADC_SAR_GetResult16
 713              		.section	.text.Seat_ADC_SAR_SetOffset,"ax",%progbits
 714              		.align	2
 715              		.global	Seat_ADC_SAR_SetOffset
 716              		.thumb
 717              		.thumb_func
 718              		.type	Seat_ADC_SAR_SetOffset, %function
 719              	Seat_ADC_SAR_SetOffset:
 720              	.LFB11:
 558:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 559:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 560:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_SetOffset
 562:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 563:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 564:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 565:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Sets the ADC offset, which is used by Seat_ADC_SAR_CountsTo_Volts(),
 566:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_CountsTo_mVolts(), and Seat_ADC_SAR_CountsTo_uVolts()
 567:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  conversion.
 569:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 570:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 571:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/Seat_ADC_SAR.c ****    the same input voltage.
 573:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 574:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 575:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 576:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 577:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 578:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  The Seat_ADC_SAR_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Affects the Seat_ADC_SAR_CountsTo_Volts,
 581:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_CountsTo_mVolts, Seat_ADC_SAR_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 584:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 721              		.loc 1 586 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 8
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725              		@ link register save eliminated.
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 24


 726 0000 80B4     		push	{r7}
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 7, -4
 729 0002 83B0     		sub	sp, sp, #12
 730              		.cfi_def_cfa_offset 16
 731 0004 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 733 0006 0346     		mov	r3, r0
 734 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_offset = offset;
 735              		.loc 1 587 0
 736 000a 044A     		ldr	r2, .L48
 737 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 738 000e 1380     		strh	r3, [r2]	@ movhi
 588:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 739              		.loc 1 588 0
 740 0010 00BF     		nop
 741 0012 0C37     		adds	r7, r7, #12
 742              		.cfi_def_cfa_offset 4
 743 0014 BD46     		mov	sp, r7
 744              		.cfi_def_cfa_register 13
 745              		@ sp needed
 746 0016 80BC     		pop	{r7}
 747              		.cfi_restore 7
 748              		.cfi_def_cfa_offset 0
 749 0018 7047     		bx	lr
 750              	.L49:
 751 001a 00BF     		.align	2
 752              	.L48:
 753 001c 00000000 		.word	Seat_ADC_SAR_offset
 754              		.cfi_endproc
 755              	.LFE11:
 756              		.size	Seat_ADC_SAR_SetOffset, .-Seat_ADC_SAR_SetOffset
 757              		.section	.text.Seat_ADC_SAR_CalcGain,"ax",%progbits
 758              		.align	2
 759              		.thumb
 760              		.thumb_func
 761              		.type	Seat_ADC_SAR_CalcGain, %function
 762              	Seat_ADC_SAR_CalcGain:
 763              	.LFB12:
 589:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 590:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 591:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_CalcGain
 593:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 594:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 595:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 596:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 598:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 599:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 601:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 602:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 603:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 604:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 605:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_shift variable initialized. This variable is used to
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 25


 606:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 610:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/Seat_ADC_SAR.c **** static void Seat_ADC_SAR_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 764              		.loc 1 612 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 16
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 84B0     		sub	sp, sp, #16
 773              		.cfi_def_cfa_offset 24
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 0006 0346     		mov	r3, r0
 777 0008 FB71     		strb	r3, [r7, #7]
 613:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     int32 counts;
 614:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if(!((Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/Seat_ADC_SAR.c ****          (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/Seat_ADC_SAR.c ****          (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* End Seat_ADC_SAR_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 620:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     switch (resolution)
 778              		.loc 1 620 0
 779 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 780 000c 0A2B     		cmp	r3, #10
 781 000e 0BD0     		beq	.L52
 782 0010 0C2B     		cmp	r3, #12
 783 0012 02D0     		beq	.L53
 784 0014 082B     		cmp	r3, #8
 785 0016 0ED0     		beq	.L54
 786 0018 13E0     		b	.L57
 787              	.L53:
 621:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 622:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         case (uint8)Seat_ADC_SAR__BITS_12:
 623:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             counts = (int32)Seat_ADC_SAR_SAR_WRK_MAX_12BIT;
 788              		.loc 1 623 0
 789 001a 4FF48053 		mov	r3, #4096
 790 001e FB60     		str	r3, [r7, #12]
 624:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #if(!((Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                 diff_zero = Seat_ADC_SAR_SAR_DIFF_SHIFT;
 791              		.loc 1 627 0
 792 0020 4FF40063 		mov	r3, #2048
 793 0024 7B81     		strh	r3, [r7, #10]	@ movhi
 628:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #endif /* End Seat_ADC_SAR_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 794              		.loc 1 629 0
 795 0026 14E0     		b	.L55
 796              	.L52:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 26


 630:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         case (uint8)Seat_ADC_SAR__BITS_10:
 631:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             counts = (int32)Seat_ADC_SAR_SAR_WRK_MAX_10BIT;
 797              		.loc 1 631 0
 798 0028 4FF48063 		mov	r3, #1024
 799 002c FB60     		str	r3, [r7, #12]
 632:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #if(!((Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                 diff_zero = Seat_ADC_SAR_SAR_DIFF_SHIFT >> 2u;
 800              		.loc 1 635 0
 801 002e 4FF40073 		mov	r3, #512
 802 0032 7B81     		strh	r3, [r7, #10]	@ movhi
 636:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #endif /* End Seat_ADC_SAR_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 803              		.loc 1 637 0
 804 0034 0DE0     		b	.L55
 805              	.L54:
 638:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         case (uint8)Seat_ADC_SAR__BITS_8:
 639:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             counts = (int32)Seat_ADC_SAR_SAR_WRK_MAX_8BIT;
 806              		.loc 1 639 0
 807 0036 4FF48073 		mov	r3, #256
 808 003a FB60     		str	r3, [r7, #12]
 640:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #if(!((Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                 diff_zero = Seat_ADC_SAR_SAR_DIFF_SHIFT >> 4u;
 809              		.loc 1 643 0
 810 003c 8023     		movs	r3, #128
 811 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 644:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #endif /* End Seat_ADC_SAR_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 812              		.loc 1 645 0
 813 0040 07E0     		b	.L55
 814              	.L57:
 646:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             counts = 0;
 815              		.loc 1 647 0
 816 0042 0023     		movs	r3, #0
 817 0044 FB60     		str	r3, [r7, #12]
 648:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #if(!((Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                  (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                 diff_zero = 0u;
 818              		.loc 1 651 0
 819 0046 0023     		movs	r3, #0
 820 0048 7B81     		strh	r3, [r7, #10]	@ movhi
 652:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             #endif /* End Seat_ADC_SAR_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             CYASSERT(0u != 0u);
 821              		.loc 1 653 0
 822 004a 0020     		movs	r0, #0
 823 004c FFF7FEFF 		bl	CyHalt
 654:Generated_Source\PSoC5/Seat_ADC_SAR.c ****             break;
 824              		.loc 1 654 0
 825 0050 00BF     		nop
 826              	.L55:
 655:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 656:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_countsPerVolt = 0; /* Clear obsolete variable */
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 27


 827              		.loc 1 656 0
 828 0052 0D4B     		ldr	r3, .L58
 829 0054 0022     		movs	r2, #0
 830 0056 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_countsPer10Volt = (((counts * Seat_ADC_SAR_10MV_COUNTS) +
 831              		.loc 1 658 0
 832 0058 FB68     		ldr	r3, [r7, #12]
 833 005a 42F21072 		movw	r2, #10000
 834 005e 02FB03F3 		mul	r3, r2, r3
 835 0062 03F58063 		add	r3, r3, #1024
 659:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                         Seat_ADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (Seat_ADC_SAR_DEFAULT_REF_VOLTAGE_MV
 836              		.loc 1 659 0
 837 0066 002B     		cmp	r3, #0
 838 0068 01DA     		bge	.L56
 839 006a 03F2FF73 		addw	r3, r3, #2047
 840              	.L56:
 841 006e DB12     		asrs	r3, r3, #11
 842 0070 1A46     		mov	r2, r3
 658:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                         Seat_ADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (Seat_ADC_SAR_DEFAULT_REF_VOLTAGE_MV
 843              		.loc 1 658 0
 844 0072 064B     		ldr	r3, .L58+4
 845 0074 1A60     		str	r2, [r3]
 660:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 661:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #if( (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/Seat_ADC_SAR.c ****          (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/Seat_ADC_SAR.c ****          (Seat_ADC_SAR_DEFAULT_RANGE == Seat_ADC_SAR__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_shift = 0;
 665:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #else
 666:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         Seat_ADC_SAR_shift = diff_zero;
 846              		.loc 1 666 0
 847 0076 B7F90A20 		ldrsh	r2, [r7, #10]
 848 007a 054B     		ldr	r3, .L58+8
 849 007c 1A80     		strh	r2, [r3]	@ movhi
 667:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     #endif /* End Seat_ADC_SAR_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 850              		.loc 1 668 0
 851 007e 00BF     		nop
 852 0080 1037     		adds	r7, r7, #16
 853              		.cfi_def_cfa_offset 8
 854 0082 BD46     		mov	sp, r7
 855              		.cfi_def_cfa_register 13
 856              		@ sp needed
 857 0084 80BD     		pop	{r7, pc}
 858              	.L59:
 859 0086 00BF     		.align	2
 860              	.L58:
 861 0088 00000000 		.word	Seat_ADC_SAR_countsPerVolt
 862 008c 00000000 		.word	Seat_ADC_SAR_countsPer10Volt
 863 0090 00000000 		.word	Seat_ADC_SAR_shift
 864              		.cfi_endproc
 865              	.LFE12:
 866              		.size	Seat_ADC_SAR_CalcGain, .-Seat_ADC_SAR_CalcGain
 867              		.section	.text.Seat_ADC_SAR_SetGain,"ax",%progbits
 868              		.align	2
 869              		.global	Seat_ADC_SAR_SetGain
 870              		.thumb
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 28


 871              		.thumb_func
 872              		.type	Seat_ADC_SAR_SetGain, %function
 873              	Seat_ADC_SAR_SetGain:
 874              	.LFB13:
 669:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 670:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 671:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_SetGain
 673:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 675:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 676:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 681:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 682:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 684:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 685:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 686:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 687:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 688:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 691:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 875              		.loc 1 693 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 8
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880 0000 80B4     		push	{r7}
 881              		.cfi_def_cfa_offset 4
 882              		.cfi_offset 7, -4
 883 0002 83B0     		sub	sp, sp, #12
 884              		.cfi_def_cfa_offset 16
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
 887 0006 0346     		mov	r3, r0
 888 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_countsPer10Volt = (int32)adcGain * 10;
 889              		.loc 1 694 0
 890 000a B7F90620 		ldrsh	r2, [r7, #6]
 891 000e 1346     		mov	r3, r2
 892 0010 9B00     		lsls	r3, r3, #2
 893 0012 1344     		add	r3, r3, r2
 894 0014 5B00     		lsls	r3, r3, #1
 895 0016 1A46     		mov	r2, r3
 896 0018 034B     		ldr	r3, .L61
 897 001a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 898              		.loc 1 695 0
 899 001c 00BF     		nop
 900 001e 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 29


 901              		.cfi_def_cfa_offset 4
 902 0020 BD46     		mov	sp, r7
 903              		.cfi_def_cfa_register 13
 904              		@ sp needed
 905 0022 80BC     		pop	{r7}
 906              		.cfi_restore 7
 907              		.cfi_def_cfa_offset 0
 908 0024 7047     		bx	lr
 909              	.L62:
 910 0026 00BF     		.align	2
 911              	.L61:
 912 0028 00000000 		.word	Seat_ADC_SAR_countsPer10Volt
 913              		.cfi_endproc
 914              	.LFE13:
 915              		.size	Seat_ADC_SAR_SetGain, .-Seat_ADC_SAR_SetGain
 916              		.section	.text.Seat_ADC_SAR_SetScaledGain,"ax",%progbits
 917              		.align	2
 918              		.global	Seat_ADC_SAR_SetScaledGain
 919              		.thumb
 920              		.thumb_func
 921              		.type	Seat_ADC_SAR_SetScaledGain, %function
 922              	Seat_ADC_SAR_SetScaledGain:
 923              	.LFB14:
 696:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 697:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 698:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_SetScaledGain
 700:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 701:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 702:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 703:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 708:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 709:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 711:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 712:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  None.
 713:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 714:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 715:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 718:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/Seat_ADC_SAR.c **** void Seat_ADC_SAR_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 924              		.loc 1 720 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 8
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 929 0000 80B4     		push	{r7}
 930              		.cfi_def_cfa_offset 4
 931              		.cfi_offset 7, -4
 932 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 30


 933              		.cfi_def_cfa_offset 16
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 721:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     Seat_ADC_SAR_countsPer10Volt = adcGain;
 937              		.loc 1 721 0
 938 0008 034A     		ldr	r2, .L64
 939 000a 7B68     		ldr	r3, [r7, #4]
 940 000c 1360     		str	r3, [r2]
 722:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 941              		.loc 1 722 0
 942 000e 00BF     		nop
 943 0010 0C37     		adds	r7, r7, #12
 944              		.cfi_def_cfa_offset 4
 945 0012 BD46     		mov	sp, r7
 946              		.cfi_def_cfa_register 13
 947              		@ sp needed
 948 0014 80BC     		pop	{r7}
 949              		.cfi_restore 7
 950              		.cfi_def_cfa_offset 0
 951 0016 7047     		bx	lr
 952              	.L65:
 953              		.align	2
 954              	.L64:
 955 0018 00000000 		.word	Seat_ADC_SAR_countsPer10Volt
 956              		.cfi_endproc
 957              	.LFE14:
 958              		.size	Seat_ADC_SAR_SetScaledGain, .-Seat_ADC_SAR_SetScaledGain
 959              		.section	.text.Seat_ADC_SAR_CountsTo_mVolts,"ax",%progbits
 960              		.align	2
 961              		.global	Seat_ADC_SAR_CountsTo_mVolts
 962              		.thumb
 963              		.thumb_func
 964              		.type	Seat_ADC_SAR_CountsTo_mVolts, %function
 965              	Seat_ADC_SAR_CountsTo_mVolts:
 966              	.LFB15:
 723:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 724:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 725:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_CountsTo_mVolts
 727:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 728:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 729:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 730:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 732:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 733:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 735:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 736:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 738:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 739:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_offset variable used.
 740:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 742:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/Seat_ADC_SAR.c **** int16 Seat_ADC_SAR_CountsTo_mVolts(int16 adcCounts)
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 31


 744:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 967              		.loc 1 744 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 16
 970              		@ frame_needed = 1, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 972 0000 80B4     		push	{r7}
 973              		.cfi_def_cfa_offset 4
 974              		.cfi_offset 7, -4
 975 0002 85B0     		sub	sp, sp, #20
 976              		.cfi_def_cfa_offset 24
 977 0004 00AF     		add	r7, sp, #0
 978              		.cfi_def_cfa_register 7
 979 0006 0346     		mov	r3, r0
 980 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 748:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     if(Seat_ADC_SAR_countsPerVolt != 0)
 981              		.loc 1 748 0
 982 000a 1D4B     		ldr	r3, .L72
 983 000c 1B88     		ldrh	r3, [r3]	@ movhi
 984 000e 1BB2     		sxth	r3, r3
 985 0010 002B     		cmp	r3, #0
 986 0012 09D0     		beq	.L67
 749:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         countsPer10Volt = (int32)Seat_ADC_SAR_countsPerVolt * 10;
 987              		.loc 1 750 0
 988 0014 1A4B     		ldr	r3, .L72
 989 0016 1B88     		ldrh	r3, [r3]	@ movhi
 990 0018 1BB2     		sxth	r3, r3
 991 001a 1A46     		mov	r2, r3
 992 001c 1346     		mov	r3, r2
 993 001e 9B00     		lsls	r3, r3, #2
 994 0020 1344     		add	r3, r3, r2
 995 0022 5B00     		lsls	r3, r3, #1
 996 0024 FB60     		str	r3, [r7, #12]
 997 0026 02E0     		b	.L68
 998              	.L67:
 751:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 752:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     else
 753:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 754:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         countsPer10Volt = Seat_ADC_SAR_countsPer10Volt;
 999              		.loc 1 754 0
 1000 0028 164B     		ldr	r3, .L72+4
 1001 002a 1B68     		ldr	r3, [r3]
 1002 002c FB60     		str	r3, [r7, #12]
 1003              	.L68:
 755:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 756:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 757:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     adcCounts -= Seat_ADC_SAR_offset;
 1004              		.loc 1 758 0
 1005 002e 164B     		ldr	r3, .L72+8
 1006 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1007 0032 1BB2     		sxth	r3, r3
 1008 0034 FA88     		ldrh	r2, [r7, #6]
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 32


 1009 0036 9BB2     		uxth	r3, r3
 1010 0038 D31A     		subs	r3, r2, r3
 1011 003a 9BB2     		uxth	r3, r3
 1012 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * Seat_ADC_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 1013              		.loc 1 760 0
 1014 003e B7F90630 		ldrsh	r3, [r7, #6]
 1015 0042 42F21072 		movw	r2, #10000
 1016 0046 02FB03F2 		mul	r2, r2, r3
 761:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1017              		.loc 1 761 0
 1018 004a B7F90630 		ldrsh	r3, [r7, #6]
 1019 004e 002B     		cmp	r3, #0
 1020 0050 04DD     		ble	.L69
 1021              		.loc 1 761 0 is_stmt 0 discriminator 1
 1022 0052 FB68     		ldr	r3, [r7, #12]
 1023 0054 D90F     		lsrs	r1, r3, #31
 1024 0056 0B44     		add	r3, r3, r1
 1025 0058 5B10     		asrs	r3, r3, #1
 1026 005a 04E0     		b	.L70
 1027              	.L69:
 1028              		.loc 1 761 0 discriminator 2
 1029 005c FB68     		ldr	r3, [r7, #12]
 1030 005e D90F     		lsrs	r1, r3, #31
 1031 0060 0B44     		add	r3, r3, r1
 1032 0062 5B10     		asrs	r3, r3, #1
 1033 0064 5B42     		negs	r3, r3
 1034              	.L70:
 760:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1035              		.loc 1 760 0 is_stmt 1
 1036 0066 1A44     		add	r2, r2, r3
 1037              		.loc 1 761 0
 1038 0068 FB68     		ldr	r3, [r7, #12]
 1039 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:Generated_Source\PSoC5/Seat_ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1040              		.loc 1 760 0
 1041 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 763:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     return( mVolts );
 1042              		.loc 1 763 0
 1043 0070 B7F90A30 		ldrsh	r3, [r7, #10]
 764:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 1044              		.loc 1 764 0
 1045 0074 1846     		mov	r0, r3
 1046 0076 1437     		adds	r7, r7, #20
 1047              		.cfi_def_cfa_offset 4
 1048 0078 BD46     		mov	sp, r7
 1049              		.cfi_def_cfa_register 13
 1050              		@ sp needed
 1051 007a 80BC     		pop	{r7}
 1052              		.cfi_restore 7
 1053              		.cfi_def_cfa_offset 0
 1054 007c 7047     		bx	lr
 1055              	.L73:
 1056 007e 00BF     		.align	2
 1057              	.L72:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 33


 1058 0080 00000000 		.word	Seat_ADC_SAR_countsPerVolt
 1059 0084 00000000 		.word	Seat_ADC_SAR_countsPer10Volt
 1060 0088 00000000 		.word	Seat_ADC_SAR_offset
 1061              		.cfi_endproc
 1062              	.LFE15:
 1063              		.size	Seat_ADC_SAR_CountsTo_mVolts, .-Seat_ADC_SAR_CountsTo_mVolts
 1064              		.global	__aeabi_ldivmod
 1065              		.section	.text.Seat_ADC_SAR_CountsTo_uVolts,"ax",%progbits
 1066              		.align	2
 1067              		.global	Seat_ADC_SAR_CountsTo_uVolts
 1068              		.thumb
 1069              		.thumb_func
 1070              		.type	Seat_ADC_SAR_CountsTo_uVolts, %function
 1071              	Seat_ADC_SAR_CountsTo_uVolts:
 1072              	.LFB16:
 765:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 766:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 767:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_CountsTo_uVolts
 769:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 770:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 771:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 772:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 774:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 775:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 777:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 778:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 780:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 781:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_offset variable used.
 782:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 784:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/Seat_ADC_SAR.c **** int32 Seat_ADC_SAR_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 1073              		.loc 1 786 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 24
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 90B5     		push	{r4, r7, lr}
 1078              		.cfi_def_cfa_offset 12
 1079              		.cfi_offset 4, -12
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 87B0     		sub	sp, sp, #28
 1083              		.cfi_def_cfa_offset 40
 1084 0004 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 1086 0006 0346     		mov	r3, r0
 1087 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 788:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 791:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     if(Seat_ADC_SAR_countsPerVolt != 0)
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 34


 1088              		.loc 1 791 0
 1089 000a 1D4B     		ldr	r3, .L78
 1090 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1091 000e 1BB2     		sxth	r3, r3
 1092 0010 002B     		cmp	r3, #0
 1093 0012 09D0     		beq	.L75
 792:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         countsPer10Volt = (int32)Seat_ADC_SAR_countsPerVolt * 10;
 1094              		.loc 1 793 0
 1095 0014 1A4B     		ldr	r3, .L78
 1096 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1097 0018 1BB2     		sxth	r3, r3
 1098 001a 1A46     		mov	r2, r3
 1099 001c 1346     		mov	r3, r2
 1100 001e 9B00     		lsls	r3, r3, #2
 1101 0020 1344     		add	r3, r3, r2
 1102 0022 5B00     		lsls	r3, r3, #1
 1103 0024 7B61     		str	r3, [r7, #20]
 1104 0026 02E0     		b	.L76
 1105              	.L75:
 794:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 795:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     else
 796:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 797:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         countsPer10Volt = Seat_ADC_SAR_countsPer10Volt;
 1106              		.loc 1 797 0
 1107 0028 164B     		ldr	r3, .L78+4
 1108 002a 1B68     		ldr	r3, [r3]
 1109 002c 7B61     		str	r3, [r7, #20]
 1110              	.L76:
 798:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 799:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 800:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     adcCounts -= Seat_ADC_SAR_offset;
 1111              		.loc 1 801 0
 1112 002e 164B     		ldr	r3, .L78+8
 1113 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1114 0032 1BB2     		sxth	r3, r3
 1115 0034 FA88     		ldrh	r2, [r7, #6]
 1116 0036 9BB2     		uxth	r3, r3
 1117 0038 D31A     		subs	r3, r2, r3
 1118 003a 9BB2     		uxth	r3, r3
 1119 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     */
 805:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     uVolts = (( (int64)adcCounts * Seat_ADC_SAR_10UV_COUNTS ) / countsPer10Volt);
 1120              		.loc 1 805 0
 1121 003e B7F90630 		ldrsh	r3, [r7, #6]
 1122 0042 4FEAE374 		asr	r4, r3, #31
 1123 0046 114A     		ldr	r2, .L78+12
 1124 0048 02FB04F1 		mul	r1, r2, r4
 1125 004c 0022     		movs	r2, #0
 1126 004e 02FB03F2 		mul	r2, r2, r3
 1127 0052 0A44     		add	r2, r2, r1
 1128 0054 0D49     		ldr	r1, .L78+12
 1129 0056 A3FB0101 		umull	r0, r1, r3, r1
 1130 005a 5318     		adds	r3, r2, r1
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 35


 1131 005c 1946     		mov	r1, r3
 1132 005e 7B69     		ldr	r3, [r7, #20]
 1133 0060 4FEAE374 		asr	r4, r3, #31
 1134 0064 1A46     		mov	r2, r3
 1135 0066 2346     		mov	r3, r4
 1136 0068 FFF7FEFF 		bl	__aeabi_ldivmod
 1137 006c 0346     		mov	r3, r0
 1138 006e 0C46     		mov	r4, r1
 1139 0070 C7E90234 		strd	r3, [r7, #8]
 806:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 807:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     return((int32) uVolts );
 1140              		.loc 1 807 0
 1141 0074 BB68     		ldr	r3, [r7, #8]
 808:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 1142              		.loc 1 808 0
 1143 0076 1846     		mov	r0, r3
 1144 0078 1C37     		adds	r7, r7, #28
 1145              		.cfi_def_cfa_offset 12
 1146 007a BD46     		mov	sp, r7
 1147              		.cfi_def_cfa_register 13
 1148              		@ sp needed
 1149 007c 90BD     		pop	{r4, r7, pc}
 1150              	.L79:
 1151 007e 00BF     		.align	2
 1152              	.L78:
 1153 0080 00000000 		.word	Seat_ADC_SAR_countsPerVolt
 1154 0084 00000000 		.word	Seat_ADC_SAR_countsPer10Volt
 1155 0088 00000000 		.word	Seat_ADC_SAR_offset
 1156 008c 80969800 		.word	10000000
 1157              		.cfi_endproc
 1158              	.LFE16:
 1159              		.size	Seat_ADC_SAR_CountsTo_uVolts, .-Seat_ADC_SAR_CountsTo_uVolts
 1160              		.global	__aeabi_i2f
 1161              		.global	__aeabi_fmul
 1162              		.global	__aeabi_fdiv
 1163              		.section	.text.Seat_ADC_SAR_CountsTo_Volts,"ax",%progbits
 1164              		.align	2
 1165              		.global	Seat_ADC_SAR_CountsTo_Volts
 1166              		.thumb
 1167              		.thumb_func
 1168              		.type	Seat_ADC_SAR_CountsTo_Volts, %function
 1169              	Seat_ADC_SAR_CountsTo_Volts:
 1170              	.LFB17:
 809:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 810:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 811:Generated_Source\PSoC5/Seat_ADC_SAR.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Function Name: Seat_ADC_SAR_CountsTo_Volts
 813:Generated_Source\PSoC5/Seat_ADC_SAR.c **** ********************************************************************************
 814:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 815:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Summary:
 816:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 818:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Parameters:
 819:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 821:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Return:
 822:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  float Result in Volts
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 36


 823:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 824:Generated_Source\PSoC5/Seat_ADC_SAR.c **** * Global Variables:
 825:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_offset variable used.
 826:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *  Seat_ADC_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *
 828:Generated_Source\PSoC5/Seat_ADC_SAR.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/Seat_ADC_SAR.c **** float32 Seat_ADC_SAR_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/Seat_ADC_SAR.c **** {
 1171              		.loc 1 830 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 16
 1174              		@ frame_needed = 1, uses_anonymous_args = 0
 1175 0000 90B5     		push	{r4, r7, lr}
 1176              		.cfi_def_cfa_offset 12
 1177              		.cfi_offset 4, -12
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 1180 0002 85B0     		sub	sp, sp, #20
 1181              		.cfi_def_cfa_offset 32
 1182 0004 00AF     		add	r7, sp, #0
 1183              		.cfi_def_cfa_register 7
 1184 0006 0346     		mov	r3, r0
 1185 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     float32 volts;
 832:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 834:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     if(Seat_ADC_SAR_countsPerVolt != 0)
 1186              		.loc 1 834 0
 1187 000a 1A4B     		ldr	r3, .L84
 1188 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1189 000e 1BB2     		sxth	r3, r3
 1190 0010 002B     		cmp	r3, #0
 1191 0012 09D0     		beq	.L81
 835:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         countsPer10Volt = (int32)Seat_ADC_SAR_countsPerVolt * 10;
 1192              		.loc 1 836 0
 1193 0014 174B     		ldr	r3, .L84
 1194 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1195 0018 1BB2     		sxth	r3, r3
 1196 001a 1A46     		mov	r2, r3
 1197 001c 1346     		mov	r3, r2
 1198 001e 9B00     		lsls	r3, r3, #2
 1199 0020 1344     		add	r3, r3, r2
 1200 0022 5B00     		lsls	r3, r3, #1
 1201 0024 FB60     		str	r3, [r7, #12]
 1202 0026 02E0     		b	.L82
 1203              	.L81:
 837:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
 838:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     else
 839:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     {
 840:Generated_Source\PSoC5/Seat_ADC_SAR.c ****         countsPer10Volt = Seat_ADC_SAR_countsPer10Volt;
 1204              		.loc 1 840 0
 1205 0028 134B     		ldr	r3, .L84+4
 1206 002a 1B68     		ldr	r3, [r3]
 1207 002c FB60     		str	r3, [r7, #12]
 1208              	.L82:
 841:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     }
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 37


 842:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 843:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     adcCounts -= Seat_ADC_SAR_offset;
 1209              		.loc 1 844 0
 1210 002e 134B     		ldr	r3, .L84+8
 1211 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1212 0032 1BB2     		sxth	r3, r3
 1213 0034 FA88     		ldrh	r2, [r7, #6]
 1214 0036 9BB2     		uxth	r3, r3
 1215 0038 D31A     		subs	r3, r2, r3
 1216 003a 9BB2     		uxth	r3, r3
 1217 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 846:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     volts = ((float32)adcCounts * Seat_ADC_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 1218              		.loc 1 846 0
 1219 003e B7F90630 		ldrsh	r3, [r7, #6]
 1220 0042 1846     		mov	r0, r3
 1221 0044 FFF7FEFF 		bl	__aeabi_i2f
 1222 0048 0346     		mov	r3, r0
 1223 004a 0D49     		ldr	r1, .L84+12
 1224 004c 1846     		mov	r0, r3
 1225 004e FFF7FEFF 		bl	__aeabi_fmul
 1226 0052 0346     		mov	r3, r0
 1227 0054 1C46     		mov	r4, r3
 1228 0056 F868     		ldr	r0, [r7, #12]
 1229 0058 FFF7FEFF 		bl	__aeabi_i2f
 1230 005c 0346     		mov	r3, r0
 1231 005e 1946     		mov	r1, r3
 1232 0060 2046     		mov	r0, r4
 1233 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1234 0066 0346     		mov	r3, r0
 1235 0068 BB60     		str	r3, [r7, #8]	@ float
 847:Generated_Source\PSoC5/Seat_ADC_SAR.c **** 
 848:Generated_Source\PSoC5/Seat_ADC_SAR.c ****     return( volts );
 1236              		.loc 1 848 0
 1237 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:Generated_Source\PSoC5/Seat_ADC_SAR.c **** }
 1238              		.loc 1 849 0
 1239 006c 1846     		mov	r0, r3
 1240 006e 1437     		adds	r7, r7, #20
 1241              		.cfi_def_cfa_offset 12
 1242 0070 BD46     		mov	sp, r7
 1243              		.cfi_def_cfa_register 13
 1244              		@ sp needed
 1245 0072 90BD     		pop	{r4, r7, pc}
 1246              	.L85:
 1247              		.align	2
 1248              	.L84:
 1249 0074 00000000 		.word	Seat_ADC_SAR_countsPerVolt
 1250 0078 00000000 		.word	Seat_ADC_SAR_countsPer10Volt
 1251 007c 00000000 		.word	Seat_ADC_SAR_offset
 1252 0080 00002041 		.word	1092616192
 1253              		.cfi_endproc
 1254              	.LFE17:
 1255              		.size	Seat_ADC_SAR_CountsTo_Volts, .-Seat_ADC_SAR_CountsTo_Volts
 1256              		.text
 1257              	.Letext0:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 38


 1258              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1259              		.section	.debug_info,"",%progbits
 1260              	.Ldebug_info0:
 1261 0000 6D040000 		.4byte	0x46d
 1262 0004 0400     		.2byte	0x4
 1263 0006 00000000 		.4byte	.Ldebug_abbrev0
 1264 000a 04       		.byte	0x4
 1265 000b 01       		.uleb128 0x1
 1266 000c 30000000 		.4byte	.LASF59
 1267 0010 0C       		.byte	0xc
 1268 0011 2A040000 		.4byte	.LASF60
 1269 0015 74030000 		.4byte	.LASF61
 1270 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1271 001d 00000000 		.4byte	0
 1272 0021 00000000 		.4byte	.Ldebug_line0
 1273 0025 02       		.uleb128 0x2
 1274 0026 04       		.byte	0x4
 1275 0027 05       		.byte	0x5
 1276 0028 696E7400 		.ascii	"int\000"
 1277 002c 03       		.uleb128 0x3
 1278 002d 04       		.byte	0x4
 1279 002e 07       		.byte	0x7
 1280 002f A0010000 		.4byte	.LASF0
 1281 0033 03       		.uleb128 0x3
 1282 0034 08       		.byte	0x8
 1283 0035 05       		.byte	0x5
 1284 0036 07010000 		.4byte	.LASF1
 1285 003a 03       		.uleb128 0x3
 1286 003b 08       		.byte	0x8
 1287 003c 04       		.byte	0x4
 1288 003d 76020000 		.4byte	.LASF2
 1289 0041 03       		.uleb128 0x3
 1290 0042 01       		.byte	0x1
 1291 0043 06       		.byte	0x6
 1292 0044 15010000 		.4byte	.LASF3
 1293 0048 03       		.uleb128 0x3
 1294 0049 01       		.byte	0x1
 1295 004a 08       		.byte	0x8
 1296 004b 16030000 		.4byte	.LASF4
 1297 004f 03       		.uleb128 0x3
 1298 0050 02       		.byte	0x2
 1299 0051 05       		.byte	0x5
 1300 0052 49030000 		.4byte	.LASF5
 1301 0056 03       		.uleb128 0x3
 1302 0057 02       		.byte	0x2
 1303 0058 07       		.byte	0x7
 1304 0059 CC010000 		.4byte	.LASF6
 1305 005d 03       		.uleb128 0x3
 1306 005e 04       		.byte	0x4
 1307 005f 05       		.byte	0x5
 1308 0060 27010000 		.4byte	.LASF7
 1309 0064 03       		.uleb128 0x3
 1310 0065 04       		.byte	0x4
 1311 0066 07       		.byte	0x7
 1312 0067 B4010000 		.4byte	.LASF8
 1313 006b 03       		.uleb128 0x3
 1314 006c 08       		.byte	0x8
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 39


 1315 006d 07       		.byte	0x7
 1316 006e BE000000 		.4byte	.LASF9
 1317 0072 03       		.uleb128 0x3
 1318 0073 04       		.byte	0x4
 1319 0074 07       		.byte	0x7
 1320 0075 6D020000 		.4byte	.LASF10
 1321 0079 03       		.uleb128 0x3
 1322 007a 01       		.byte	0x1
 1323 007b 08       		.byte	0x8
 1324 007c CA030000 		.4byte	.LASF11
 1325 0080 04       		.uleb128 0x4
 1326 0081 4F010000 		.4byte	.LASF12
 1327 0085 02       		.byte	0x2
 1328 0086 E401     		.2byte	0x1e4
 1329 0088 48000000 		.4byte	0x48
 1330 008c 04       		.uleb128 0x4
 1331 008d 00000000 		.4byte	.LASF13
 1332 0091 02       		.byte	0x2
 1333 0092 E501     		.2byte	0x1e5
 1334 0094 56000000 		.4byte	0x56
 1335 0098 04       		.uleb128 0x4
 1336 0099 0E020000 		.4byte	.LASF14
 1337 009d 02       		.byte	0x2
 1338 009e E701     		.2byte	0x1e7
 1339 00a0 41000000 		.4byte	0x41
 1340 00a4 04       		.uleb128 0x4
 1341 00a5 63040000 		.4byte	.LASF15
 1342 00a9 02       		.byte	0x2
 1343 00aa E801     		.2byte	0x1e8
 1344 00ac 4F000000 		.4byte	0x4f
 1345 00b0 04       		.uleb128 0x4
 1346 00b1 21010000 		.4byte	.LASF16
 1347 00b5 02       		.byte	0x2
 1348 00b6 E901     		.2byte	0x1e9
 1349 00b8 5D000000 		.4byte	0x5d
 1350 00bc 04       		.uleb128 0x4
 1351 00bd 65020000 		.4byte	.LASF17
 1352 00c1 02       		.byte	0x2
 1353 00c2 EA01     		.2byte	0x1ea
 1354 00c4 C8000000 		.4byte	0xc8
 1355 00c8 03       		.uleb128 0x3
 1356 00c9 04       		.byte	0x4
 1357 00ca 04       		.byte	0x4
 1358 00cb EC020000 		.4byte	.LASF18
 1359 00cf 03       		.uleb128 0x3
 1360 00d0 08       		.byte	0x8
 1361 00d1 04       		.byte	0x4
 1362 00d2 6D010000 		.4byte	.LASF19
 1363 00d6 04       		.uleb128 0x4
 1364 00d7 C9020000 		.4byte	.LASF20
 1365 00db 02       		.byte	0x2
 1366 00dc EF01     		.2byte	0x1ef
 1367 00de 33000000 		.4byte	0x33
 1368 00e2 04       		.uleb128 0x4
 1369 00e3 11030000 		.4byte	.LASF21
 1370 00e7 02       		.byte	0x2
 1371 00e8 8E02     		.2byte	0x28e
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 40


 1372 00ea EE000000 		.4byte	0xee
 1373 00ee 05       		.uleb128 0x5
 1374 00ef 80000000 		.4byte	0x80
 1375 00f3 04       		.uleb128 0x4
 1376 00f4 49010000 		.4byte	.LASF22
 1377 00f8 02       		.byte	0x2
 1378 00f9 8F02     		.2byte	0x28f
 1379 00fb FF000000 		.4byte	0xff
 1380 00ff 05       		.uleb128 0x5
 1381 0100 8C000000 		.4byte	0x8c
 1382 0104 06       		.uleb128 0x6
 1383 0105 52020000 		.4byte	.LASF23
 1384 0109 01       		.byte	0x1
 1385 010a 4A       		.byte	0x4a
 1386 010b 00000000 		.4byte	.LFB0
 1387 010f 24000000 		.4byte	.LFE0-.LFB0
 1388 0113 01       		.uleb128 0x1
 1389 0114 9C       		.byte	0x9c
 1390 0115 06       		.uleb128 0x6
 1391 0116 FC010000 		.4byte	.LASF24
 1392 011a 01       		.byte	0x1
 1393 011b 6A       		.byte	0x6a
 1394 011c 00000000 		.4byte	.LFB1
 1395 0120 2C000000 		.4byte	.LFE1-.LFB1
 1396 0124 01       		.uleb128 0x1
 1397 0125 9C       		.byte	0x9c
 1398 0126 07       		.uleb128 0x7
 1399 0127 74010000 		.4byte	.LASF27
 1400 012b 01       		.byte	0x1
 1401 012c 8F       		.byte	0x8f
 1402 012d 00000000 		.4byte	.LFB2
 1403 0131 C4000000 		.4byte	.LFE2-.LFB2
 1404 0135 01       		.uleb128 0x1
 1405 0136 9C       		.byte	0x9c
 1406 0137 58010000 		.4byte	0x158
 1407 013b 08       		.uleb128 0x8
 1408 013c 69040000 		.4byte	.LASF25
 1409 0140 01       		.byte	0x1
 1410 0141 91       		.byte	0x91
 1411 0142 80000000 		.4byte	0x80
 1412 0146 02       		.uleb128 0x2
 1413 0147 91       		.byte	0x91
 1414 0148 76       		.sleb128 -10
 1415 0149 08       		.uleb128 0x8
 1416 014a 12040000 		.4byte	.LASF26
 1417 014e 01       		.byte	0x1
 1418 014f 92       		.byte	0x92
 1419 0150 80000000 		.4byte	0x80
 1420 0154 02       		.uleb128 0x2
 1421 0155 91       		.byte	0x91
 1422 0156 77       		.sleb128 -9
 1423 0157 00       		.byte	0
 1424 0158 07       		.uleb128 0x7
 1425 0159 70040000 		.4byte	.LASF28
 1426 015d 01       		.byte	0x1
 1427 015e F8       		.byte	0xf8
 1428 015f 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 41


 1429 0163 5C000000 		.4byte	.LFE3-.LFB3
 1430 0167 01       		.uleb128 0x1
 1431 0168 9C       		.byte	0x9c
 1432 0169 7C010000 		.4byte	0x17c
 1433 016d 08       		.uleb128 0x8
 1434 016e 12040000 		.4byte	.LASF26
 1435 0172 01       		.byte	0x1
 1436 0173 FA       		.byte	0xfa
 1437 0174 80000000 		.4byte	0x80
 1438 0178 02       		.uleb128 0x2
 1439 0179 91       		.byte	0x91
 1440 017a 77       		.sleb128 -9
 1441 017b 00       		.byte	0
 1442 017c 09       		.uleb128 0x9
 1443 017d B3020000 		.4byte	.LASF29
 1444 0181 01       		.byte	0x1
 1445 0182 2201     		.2byte	0x122
 1446 0184 00000000 		.4byte	.LFB4
 1447 0188 40000000 		.4byte	.LFE4-.LFB4
 1448 018c 01       		.uleb128 0x1
 1449 018d 9C       		.byte	0x9c
 1450 018e B1010000 		.4byte	0x1b1
 1451 0192 0A       		.uleb128 0xa
 1452 0193 0B030000 		.4byte	.LASF31
 1453 0197 01       		.byte	0x1
 1454 0198 2201     		.2byte	0x122
 1455 019a 80000000 		.4byte	0x80
 1456 019e 02       		.uleb128 0x2
 1457 019f 91       		.byte	0x91
 1458 01a0 6F       		.sleb128 -17
 1459 01a1 0B       		.uleb128 0xb
 1460 01a2 69040000 		.4byte	.LASF25
 1461 01a6 01       		.byte	0x1
 1462 01a7 2401     		.2byte	0x124
 1463 01a9 80000000 		.4byte	0x80
 1464 01ad 02       		.uleb128 0x2
 1465 01ae 91       		.byte	0x91
 1466 01af 77       		.sleb128 -9
 1467 01b0 00       		.byte	0
 1468 01b1 0C       		.uleb128 0xc
 1469 01b2 37020000 		.4byte	.LASF30
 1470 01b6 01       		.byte	0x1
 1471 01b7 5401     		.2byte	0x154
 1472 01b9 00000000 		.4byte	.LFB5
 1473 01bd 54000000 		.4byte	.LFE5-.LFB5
 1474 01c1 01       		.uleb128 0x1
 1475 01c2 9C       		.byte	0x9c
 1476 01c3 E6010000 		.4byte	0x1e6
 1477 01c7 0A       		.uleb128 0xa
 1478 01c8 69030000 		.4byte	.LASF32
 1479 01cc 01       		.byte	0x1
 1480 01cd 5401     		.2byte	0x154
 1481 01cf 80000000 		.4byte	0x80
 1482 01d3 02       		.uleb128 0x2
 1483 01d4 91       		.byte	0x91
 1484 01d5 6F       		.sleb128 -17
 1485 01d6 0B       		.uleb128 0xb
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 42


 1486 01d7 69040000 		.4byte	.LASF25
 1487 01db 01       		.byte	0x1
 1488 01dc 5601     		.2byte	0x156
 1489 01de 80000000 		.4byte	0x80
 1490 01e2 02       		.uleb128 0x2
 1491 01e3 91       		.byte	0x91
 1492 01e4 77       		.sleb128 -9
 1493 01e5 00       		.byte	0
 1494 01e6 0D       		.uleb128 0xd
 1495 01e7 16000000 		.4byte	.LASF33
 1496 01eb 01       		.byte	0x1
 1497 01ec 9101     		.2byte	0x191
 1498 01ee 00000000 		.4byte	.LFB6
 1499 01f2 30000000 		.4byte	.LFE6-.LFB6
 1500 01f6 01       		.uleb128 0x1
 1501 01f7 9C       		.byte	0x9c
 1502 01f8 0D       		.uleb128 0xd
 1503 01f9 F2020000 		.4byte	.LASF34
 1504 01fd 01       		.byte	0x1
 1505 01fe B301     		.2byte	0x1b3
 1506 0200 00000000 		.4byte	.LFB7
 1507 0204 30000000 		.4byte	.LFE7-.LFB7
 1508 0208 01       		.uleb128 0x1
 1509 0209 9C       		.byte	0x9c
 1510 020a 0E       		.uleb128 0xe
 1511 020b CF030000 		.4byte	.LASF37
 1512 020f 01       		.byte	0x1
 1513 0210 DB01     		.2byte	0x1db
 1514 0212 80000000 		.4byte	0x80
 1515 0216 00000000 		.4byte	.LFB8
 1516 021a 40000000 		.4byte	.LFE8-.LFB8
 1517 021e 01       		.uleb128 0x1
 1518 021f 9C       		.byte	0x9c
 1519 0220 43020000 		.4byte	0x243
 1520 0224 0A       		.uleb128 0xa
 1521 0225 98010000 		.4byte	.LASF35
 1522 0229 01       		.byte	0x1
 1523 022a DB01     		.2byte	0x1db
 1524 022c 80000000 		.4byte	0x80
 1525 0230 02       		.uleb128 0x2
 1526 0231 91       		.byte	0x91
 1527 0232 6F       		.sleb128 -17
 1528 0233 0B       		.uleb128 0xb
 1529 0234 23040000 		.4byte	.LASF36
 1530 0238 01       		.byte	0x1
 1531 0239 DD01     		.2byte	0x1dd
 1532 023b 80000000 		.4byte	0x80
 1533 023f 02       		.uleb128 0x2
 1534 0240 91       		.byte	0x91
 1535 0241 77       		.sleb128 -9
 1536 0242 00       		.byte	0
 1537 0243 0F       		.uleb128 0xf
 1538 0244 55010000 		.4byte	.LASF62
 1539 0248 01       		.byte	0x1
 1540 0249 0802     		.2byte	0x208
 1541 024b 98000000 		.4byte	0x98
 1542 024f 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 43


 1543 0253 28000000 		.4byte	.LFE9-.LFB9
 1544 0257 01       		.uleb128 0x1
 1545 0258 9C       		.byte	0x9c
 1546 0259 10       		.uleb128 0x10
 1547 025a 30010000 		.4byte	.LASF38
 1548 025e 01       		.byte	0x1
 1549 025f 2602     		.2byte	0x226
 1550 0261 A4000000 		.4byte	0xa4
 1551 0265 00000000 		.4byte	.LFB10
 1552 0269 30000000 		.4byte	.LFE10-.LFB10
 1553 026d 01       		.uleb128 0x1
 1554 026e 9C       		.byte	0x9c
 1555 026f 83020000 		.4byte	0x283
 1556 0273 11       		.uleb128 0x11
 1557 0274 72657300 		.ascii	"res\000"
 1558 0278 01       		.byte	0x1
 1559 0279 2802     		.2byte	0x228
 1560 027b 8C000000 		.4byte	0x8c
 1561 027f 02       		.uleb128 0x2
 1562 0280 91       		.byte	0x91
 1563 0281 76       		.sleb128 -10
 1564 0282 00       		.byte	0
 1565 0283 09       		.uleb128 0x9
 1566 0284 D5000000 		.4byte	.LASF39
 1567 0288 01       		.byte	0x1
 1568 0289 4902     		.2byte	0x249
 1569 028b 00000000 		.4byte	.LFB11
 1570 028f 20000000 		.4byte	.LFE11-.LFB11
 1571 0293 01       		.uleb128 0x1
 1572 0294 9C       		.byte	0x9c
 1573 0295 A9020000 		.4byte	0x2a9
 1574 0299 0A       		.uleb128 0xa
 1575 029a EC030000 		.4byte	.LASF40
 1576 029e 01       		.byte	0x1
 1577 029f 4902     		.2byte	0x249
 1578 02a1 A4000000 		.4byte	0xa4
 1579 02a5 02       		.uleb128 0x2
 1580 02a6 91       		.byte	0x91
 1581 02a7 76       		.sleb128 -10
 1582 02a8 00       		.byte	0
 1583 02a9 12       		.uleb128 0x12
 1584 02aa 53030000 		.4byte	.LASF63
 1585 02ae 01       		.byte	0x1
 1586 02af 6302     		.2byte	0x263
 1587 02b1 00000000 		.4byte	.LFB12
 1588 02b5 94000000 		.4byte	.LFE12-.LFB12
 1589 02b9 01       		.uleb128 0x1
 1590 02ba 9C       		.byte	0x9c
 1591 02bb ED020000 		.4byte	0x2ed
 1592 02bf 0A       		.uleb128 0xa
 1593 02c0 69030000 		.4byte	.LASF32
 1594 02c4 01       		.byte	0x1
 1595 02c5 6302     		.2byte	0x263
 1596 02c7 80000000 		.4byte	0x80
 1597 02cb 02       		.uleb128 0x2
 1598 02cc 91       		.byte	0x91
 1599 02cd 6F       		.sleb128 -17
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 44


 1600 02ce 0B       		.uleb128 0xb
 1601 02cf 0F000000 		.4byte	.LASF41
 1602 02d3 01       		.byte	0x1
 1603 02d4 6502     		.2byte	0x265
 1604 02d6 B0000000 		.4byte	0xb0
 1605 02da 02       		.uleb128 0x2
 1606 02db 91       		.byte	0x91
 1607 02dc 74       		.sleb128 -12
 1608 02dd 0B       		.uleb128 0xb
 1609 02de 3F030000 		.4byte	.LASF42
 1610 02e2 01       		.byte	0x1
 1611 02e3 6902     		.2byte	0x269
 1612 02e5 8C000000 		.4byte	0x8c
 1613 02e9 02       		.uleb128 0x2
 1614 02ea 91       		.byte	0x91
 1615 02eb 72       		.sleb128 -14
 1616 02ec 00       		.byte	0
 1617 02ed 09       		.uleb128 0x9
 1618 02ee FD030000 		.4byte	.LASF43
 1619 02f2 01       		.byte	0x1
 1620 02f3 B402     		.2byte	0x2b4
 1621 02f5 00000000 		.4byte	.LFB13
 1622 02f9 2C000000 		.4byte	.LFE13-.LFB13
 1623 02fd 01       		.uleb128 0x1
 1624 02fe 9C       		.byte	0x9c
 1625 02ff 13030000 		.4byte	0x313
 1626 0303 0A       		.uleb128 0xa
 1627 0304 07000000 		.4byte	.LASF44
 1628 0308 01       		.byte	0x1
 1629 0309 B402     		.2byte	0x2b4
 1630 030b A4000000 		.4byte	0xa4
 1631 030f 02       		.uleb128 0x2
 1632 0310 91       		.byte	0x91
 1633 0311 76       		.sleb128 -10
 1634 0312 00       		.byte	0
 1635 0313 09       		.uleb128 0x9
 1636 0314 24030000 		.4byte	.LASF45
 1637 0318 01       		.byte	0x1
 1638 0319 CF02     		.2byte	0x2cf
 1639 031b 00000000 		.4byte	.LFB14
 1640 031f 1C000000 		.4byte	.LFE14-.LFB14
 1641 0323 01       		.uleb128 0x1
 1642 0324 9C       		.byte	0x9c
 1643 0325 39030000 		.4byte	0x339
 1644 0329 0A       		.uleb128 0xa
 1645 032a 07000000 		.4byte	.LASF44
 1646 032e 01       		.byte	0x1
 1647 032f CF02     		.2byte	0x2cf
 1648 0331 B0000000 		.4byte	0xb0
 1649 0335 02       		.uleb128 0x2
 1650 0336 91       		.byte	0x91
 1651 0337 74       		.sleb128 -12
 1652 0338 00       		.byte	0
 1653 0339 10       		.uleb128 0x10
 1654 033a CF020000 		.4byte	.LASF46
 1655 033e 01       		.byte	0x1
 1656 033f E702     		.2byte	0x2e7
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 45


 1657 0341 A4000000 		.4byte	0xa4
 1658 0345 00000000 		.4byte	.LFB15
 1659 0349 8C000000 		.4byte	.LFE15-.LFB15
 1660 034d 01       		.uleb128 0x1
 1661 034e 9C       		.byte	0x9c
 1662 034f 81030000 		.4byte	0x381
 1663 0353 0A       		.uleb128 0xa
 1664 0354 F3030000 		.4byte	.LASF47
 1665 0358 01       		.byte	0x1
 1666 0359 E702     		.2byte	0x2e7
 1667 035b A4000000 		.4byte	0xa4
 1668 035f 02       		.uleb128 0x2
 1669 0360 91       		.byte	0x91
 1670 0361 6E       		.sleb128 -18
 1671 0362 0B       		.uleb128 0xb
 1672 0363 13020000 		.4byte	.LASF48
 1673 0367 01       		.byte	0x1
 1674 0368 E902     		.2byte	0x2e9
 1675 036a A4000000 		.4byte	0xa4
 1676 036e 02       		.uleb128 0x2
 1677 036f 91       		.byte	0x91
 1678 0370 72       		.sleb128 -14
 1679 0371 0B       		.uleb128 0xb
 1680 0372 88010000 		.4byte	.LASF49
 1681 0376 01       		.byte	0x1
 1682 0377 EA02     		.2byte	0x2ea
 1683 0379 B0000000 		.4byte	0xb0
 1684 037d 02       		.uleb128 0x2
 1685 037e 91       		.byte	0x91
 1686 037f 74       		.sleb128 -12
 1687 0380 00       		.byte	0
 1688 0381 0E       		.uleb128 0xe
 1689 0382 1A020000 		.4byte	.LASF50
 1690 0386 01       		.byte	0x1
 1691 0387 1103     		.2byte	0x311
 1692 0389 B0000000 		.4byte	0xb0
 1693 038d 00000000 		.4byte	.LFB16
 1694 0391 90000000 		.4byte	.LFE16-.LFB16
 1695 0395 01       		.uleb128 0x1
 1696 0396 9C       		.byte	0x9c
 1697 0397 C9030000 		.4byte	0x3c9
 1698 039b 0A       		.uleb128 0xa
 1699 039c F3030000 		.4byte	.LASF47
 1700 03a0 01       		.byte	0x1
 1701 03a1 1103     		.2byte	0x311
 1702 03a3 A4000000 		.4byte	0xa4
 1703 03a7 02       		.uleb128 0x2
 1704 03a8 91       		.byte	0x91
 1705 03a9 5E       		.sleb128 -34
 1706 03aa 0B       		.uleb128 0xb
 1707 03ab AD010000 		.4byte	.LASF51
 1708 03af 01       		.byte	0x1
 1709 03b0 1403     		.2byte	0x314
 1710 03b2 D6000000 		.4byte	0xd6
 1711 03b6 02       		.uleb128 0x2
 1712 03b7 91       		.byte	0x91
 1713 03b8 60       		.sleb128 -32
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 46


 1714 03b9 0B       		.uleb128 0xb
 1715 03ba 88010000 		.4byte	.LASF49
 1716 03be 01       		.byte	0x1
 1717 03bf 1503     		.2byte	0x315
 1718 03c1 B0000000 		.4byte	0xb0
 1719 03c5 02       		.uleb128 0x2
 1720 03c6 91       		.byte	0x91
 1721 03c7 6C       		.sleb128 -20
 1722 03c8 00       		.byte	0
 1723 03c9 0E       		.uleb128 0xe
 1724 03ca 82020000 		.4byte	.LASF52
 1725 03ce 01       		.byte	0x1
 1726 03cf 3D03     		.2byte	0x33d
 1727 03d1 BC000000 		.4byte	0xbc
 1728 03d5 00000000 		.4byte	.LFB17
 1729 03d9 84000000 		.4byte	.LFE17-.LFB17
 1730 03dd 01       		.uleb128 0x1
 1731 03de 9C       		.byte	0x9c
 1732 03df 11040000 		.4byte	0x411
 1733 03e3 0A       		.uleb128 0xa
 1734 03e4 F3030000 		.4byte	.LASF47
 1735 03e8 01       		.byte	0x1
 1736 03e9 3D03     		.2byte	0x33d
 1737 03eb A4000000 		.4byte	0xa4
 1738 03ef 02       		.uleb128 0x2
 1739 03f0 91       		.byte	0x91
 1740 03f1 66       		.sleb128 -26
 1741 03f2 0B       		.uleb128 0xb
 1742 03f3 C6010000 		.4byte	.LASF53
 1743 03f7 01       		.byte	0x1
 1744 03f8 3F03     		.2byte	0x33f
 1745 03fa BC000000 		.4byte	0xbc
 1746 03fe 02       		.uleb128 0x2
 1747 03ff 91       		.byte	0x91
 1748 0400 68       		.sleb128 -24
 1749 0401 0B       		.uleb128 0xb
 1750 0402 88010000 		.4byte	.LASF49
 1751 0406 01       		.byte	0x1
 1752 0407 4003     		.2byte	0x340
 1753 0409 B0000000 		.4byte	0xb0
 1754 040d 02       		.uleb128 0x2
 1755 040e 91       		.byte	0x91
 1756 040f 6C       		.sleb128 -20
 1757 0410 00       		.byte	0
 1758 0411 13       		.uleb128 0x13
 1759 0412 9E020000 		.4byte	.LASF54
 1760 0416 01       		.byte	0x1
 1761 0417 23       		.byte	0x23
 1762 0418 80000000 		.4byte	0x80
 1763 041c 05       		.uleb128 0x5
 1764 041d 03       		.byte	0x3
 1765 041e 00000000 		.4byte	Seat_ADC_SAR_initVar
 1766 0422 13       		.uleb128 0x13
 1767 0423 B6030000 		.4byte	.LASF55
 1768 0427 01       		.byte	0x1
 1769 0428 24       		.byte	0x24
 1770 0429 33040000 		.4byte	0x433
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 47


 1771 042d 05       		.uleb128 0x5
 1772 042e 03       		.byte	0x3
 1773 042f 00000000 		.4byte	Seat_ADC_SAR_offset
 1774 0433 05       		.uleb128 0x5
 1775 0434 A4000000 		.4byte	0xa4
 1776 0438 13       		.uleb128 0x13
 1777 0439 EC000000 		.4byte	.LASF56
 1778 043d 01       		.byte	0x1
 1779 043e 25       		.byte	0x25
 1780 043f 33040000 		.4byte	0x433
 1781 0443 05       		.uleb128 0x5
 1782 0444 03       		.byte	0x3
 1783 0445 00000000 		.4byte	Seat_ADC_SAR_countsPerVolt
 1784 0449 13       		.uleb128 0x13
 1785 044a DF010000 		.4byte	.LASF57
 1786 044e 01       		.byte	0x1
 1787 044f 26       		.byte	0x26
 1788 0450 5A040000 		.4byte	0x45a
 1789 0454 05       		.uleb128 0x5
 1790 0455 03       		.byte	0x3
 1791 0456 00000000 		.4byte	Seat_ADC_SAR_countsPer10Volt
 1792 045a 05       		.uleb128 0x5
 1793 045b B0000000 		.4byte	0xb0
 1794 045f 13       		.uleb128 0x13
 1795 0460 50040000 		.4byte	.LASF58
 1796 0464 01       		.byte	0x1
 1797 0465 27       		.byte	0x27
 1798 0466 33040000 		.4byte	0x433
 1799 046a 05       		.uleb128 0x5
 1800 046b 03       		.byte	0x3
 1801 046c 00000000 		.4byte	Seat_ADC_SAR_shift
 1802 0470 00       		.byte	0
 1803              		.section	.debug_abbrev,"",%progbits
 1804              	.Ldebug_abbrev0:
 1805 0000 01       		.uleb128 0x1
 1806 0001 11       		.uleb128 0x11
 1807 0002 01       		.byte	0x1
 1808 0003 25       		.uleb128 0x25
 1809 0004 0E       		.uleb128 0xe
 1810 0005 13       		.uleb128 0x13
 1811 0006 0B       		.uleb128 0xb
 1812 0007 03       		.uleb128 0x3
 1813 0008 0E       		.uleb128 0xe
 1814 0009 1B       		.uleb128 0x1b
 1815 000a 0E       		.uleb128 0xe
 1816 000b 55       		.uleb128 0x55
 1817 000c 17       		.uleb128 0x17
 1818 000d 11       		.uleb128 0x11
 1819 000e 01       		.uleb128 0x1
 1820 000f 10       		.uleb128 0x10
 1821 0010 17       		.uleb128 0x17
 1822 0011 00       		.byte	0
 1823 0012 00       		.byte	0
 1824 0013 02       		.uleb128 0x2
 1825 0014 24       		.uleb128 0x24
 1826 0015 00       		.byte	0
 1827 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 48


 1828 0017 0B       		.uleb128 0xb
 1829 0018 3E       		.uleb128 0x3e
 1830 0019 0B       		.uleb128 0xb
 1831 001a 03       		.uleb128 0x3
 1832 001b 08       		.uleb128 0x8
 1833 001c 00       		.byte	0
 1834 001d 00       		.byte	0
 1835 001e 03       		.uleb128 0x3
 1836 001f 24       		.uleb128 0x24
 1837 0020 00       		.byte	0
 1838 0021 0B       		.uleb128 0xb
 1839 0022 0B       		.uleb128 0xb
 1840 0023 3E       		.uleb128 0x3e
 1841 0024 0B       		.uleb128 0xb
 1842 0025 03       		.uleb128 0x3
 1843 0026 0E       		.uleb128 0xe
 1844 0027 00       		.byte	0
 1845 0028 00       		.byte	0
 1846 0029 04       		.uleb128 0x4
 1847 002a 16       		.uleb128 0x16
 1848 002b 00       		.byte	0
 1849 002c 03       		.uleb128 0x3
 1850 002d 0E       		.uleb128 0xe
 1851 002e 3A       		.uleb128 0x3a
 1852 002f 0B       		.uleb128 0xb
 1853 0030 3B       		.uleb128 0x3b
 1854 0031 05       		.uleb128 0x5
 1855 0032 49       		.uleb128 0x49
 1856 0033 13       		.uleb128 0x13
 1857 0034 00       		.byte	0
 1858 0035 00       		.byte	0
 1859 0036 05       		.uleb128 0x5
 1860 0037 35       		.uleb128 0x35
 1861 0038 00       		.byte	0
 1862 0039 49       		.uleb128 0x49
 1863 003a 13       		.uleb128 0x13
 1864 003b 00       		.byte	0
 1865 003c 00       		.byte	0
 1866 003d 06       		.uleb128 0x6
 1867 003e 2E       		.uleb128 0x2e
 1868 003f 00       		.byte	0
 1869 0040 3F       		.uleb128 0x3f
 1870 0041 19       		.uleb128 0x19
 1871 0042 03       		.uleb128 0x3
 1872 0043 0E       		.uleb128 0xe
 1873 0044 3A       		.uleb128 0x3a
 1874 0045 0B       		.uleb128 0xb
 1875 0046 3B       		.uleb128 0x3b
 1876 0047 0B       		.uleb128 0xb
 1877 0048 27       		.uleb128 0x27
 1878 0049 19       		.uleb128 0x19
 1879 004a 11       		.uleb128 0x11
 1880 004b 01       		.uleb128 0x1
 1881 004c 12       		.uleb128 0x12
 1882 004d 06       		.uleb128 0x6
 1883 004e 40       		.uleb128 0x40
 1884 004f 18       		.uleb128 0x18
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 49


 1885 0050 9642     		.uleb128 0x2116
 1886 0052 19       		.uleb128 0x19
 1887 0053 00       		.byte	0
 1888 0054 00       		.byte	0
 1889 0055 07       		.uleb128 0x7
 1890 0056 2E       		.uleb128 0x2e
 1891 0057 01       		.byte	0x1
 1892 0058 3F       		.uleb128 0x3f
 1893 0059 19       		.uleb128 0x19
 1894 005a 03       		.uleb128 0x3
 1895 005b 0E       		.uleb128 0xe
 1896 005c 3A       		.uleb128 0x3a
 1897 005d 0B       		.uleb128 0xb
 1898 005e 3B       		.uleb128 0x3b
 1899 005f 0B       		.uleb128 0xb
 1900 0060 27       		.uleb128 0x27
 1901 0061 19       		.uleb128 0x19
 1902 0062 11       		.uleb128 0x11
 1903 0063 01       		.uleb128 0x1
 1904 0064 12       		.uleb128 0x12
 1905 0065 06       		.uleb128 0x6
 1906 0066 40       		.uleb128 0x40
 1907 0067 18       		.uleb128 0x18
 1908 0068 9642     		.uleb128 0x2116
 1909 006a 19       		.uleb128 0x19
 1910 006b 01       		.uleb128 0x1
 1911 006c 13       		.uleb128 0x13
 1912 006d 00       		.byte	0
 1913 006e 00       		.byte	0
 1914 006f 08       		.uleb128 0x8
 1915 0070 34       		.uleb128 0x34
 1916 0071 00       		.byte	0
 1917 0072 03       		.uleb128 0x3
 1918 0073 0E       		.uleb128 0xe
 1919 0074 3A       		.uleb128 0x3a
 1920 0075 0B       		.uleb128 0xb
 1921 0076 3B       		.uleb128 0x3b
 1922 0077 0B       		.uleb128 0xb
 1923 0078 49       		.uleb128 0x49
 1924 0079 13       		.uleb128 0x13
 1925 007a 02       		.uleb128 0x2
 1926 007b 18       		.uleb128 0x18
 1927 007c 00       		.byte	0
 1928 007d 00       		.byte	0
 1929 007e 09       		.uleb128 0x9
 1930 007f 2E       		.uleb128 0x2e
 1931 0080 01       		.byte	0x1
 1932 0081 3F       		.uleb128 0x3f
 1933 0082 19       		.uleb128 0x19
 1934 0083 03       		.uleb128 0x3
 1935 0084 0E       		.uleb128 0xe
 1936 0085 3A       		.uleb128 0x3a
 1937 0086 0B       		.uleb128 0xb
 1938 0087 3B       		.uleb128 0x3b
 1939 0088 05       		.uleb128 0x5
 1940 0089 27       		.uleb128 0x27
 1941 008a 19       		.uleb128 0x19
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 50


 1942 008b 11       		.uleb128 0x11
 1943 008c 01       		.uleb128 0x1
 1944 008d 12       		.uleb128 0x12
 1945 008e 06       		.uleb128 0x6
 1946 008f 40       		.uleb128 0x40
 1947 0090 18       		.uleb128 0x18
 1948 0091 9742     		.uleb128 0x2117
 1949 0093 19       		.uleb128 0x19
 1950 0094 01       		.uleb128 0x1
 1951 0095 13       		.uleb128 0x13
 1952 0096 00       		.byte	0
 1953 0097 00       		.byte	0
 1954 0098 0A       		.uleb128 0xa
 1955 0099 05       		.uleb128 0x5
 1956 009a 00       		.byte	0
 1957 009b 03       		.uleb128 0x3
 1958 009c 0E       		.uleb128 0xe
 1959 009d 3A       		.uleb128 0x3a
 1960 009e 0B       		.uleb128 0xb
 1961 009f 3B       		.uleb128 0x3b
 1962 00a0 05       		.uleb128 0x5
 1963 00a1 49       		.uleb128 0x49
 1964 00a2 13       		.uleb128 0x13
 1965 00a3 02       		.uleb128 0x2
 1966 00a4 18       		.uleb128 0x18
 1967 00a5 00       		.byte	0
 1968 00a6 00       		.byte	0
 1969 00a7 0B       		.uleb128 0xb
 1970 00a8 34       		.uleb128 0x34
 1971 00a9 00       		.byte	0
 1972 00aa 03       		.uleb128 0x3
 1973 00ab 0E       		.uleb128 0xe
 1974 00ac 3A       		.uleb128 0x3a
 1975 00ad 0B       		.uleb128 0xb
 1976 00ae 3B       		.uleb128 0x3b
 1977 00af 05       		.uleb128 0x5
 1978 00b0 49       		.uleb128 0x49
 1979 00b1 13       		.uleb128 0x13
 1980 00b2 02       		.uleb128 0x2
 1981 00b3 18       		.uleb128 0x18
 1982 00b4 00       		.byte	0
 1983 00b5 00       		.byte	0
 1984 00b6 0C       		.uleb128 0xc
 1985 00b7 2E       		.uleb128 0x2e
 1986 00b8 01       		.byte	0x1
 1987 00b9 3F       		.uleb128 0x3f
 1988 00ba 19       		.uleb128 0x19
 1989 00bb 03       		.uleb128 0x3
 1990 00bc 0E       		.uleb128 0xe
 1991 00bd 3A       		.uleb128 0x3a
 1992 00be 0B       		.uleb128 0xb
 1993 00bf 3B       		.uleb128 0x3b
 1994 00c0 05       		.uleb128 0x5
 1995 00c1 27       		.uleb128 0x27
 1996 00c2 19       		.uleb128 0x19
 1997 00c3 11       		.uleb128 0x11
 1998 00c4 01       		.uleb128 0x1
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 51


 1999 00c5 12       		.uleb128 0x12
 2000 00c6 06       		.uleb128 0x6
 2001 00c7 40       		.uleb128 0x40
 2002 00c8 18       		.uleb128 0x18
 2003 00c9 9642     		.uleb128 0x2116
 2004 00cb 19       		.uleb128 0x19
 2005 00cc 01       		.uleb128 0x1
 2006 00cd 13       		.uleb128 0x13
 2007 00ce 00       		.byte	0
 2008 00cf 00       		.byte	0
 2009 00d0 0D       		.uleb128 0xd
 2010 00d1 2E       		.uleb128 0x2e
 2011 00d2 00       		.byte	0
 2012 00d3 3F       		.uleb128 0x3f
 2013 00d4 19       		.uleb128 0x19
 2014 00d5 03       		.uleb128 0x3
 2015 00d6 0E       		.uleb128 0xe
 2016 00d7 3A       		.uleb128 0x3a
 2017 00d8 0B       		.uleb128 0xb
 2018 00d9 3B       		.uleb128 0x3b
 2019 00da 05       		.uleb128 0x5
 2020 00db 27       		.uleb128 0x27
 2021 00dc 19       		.uleb128 0x19
 2022 00dd 11       		.uleb128 0x11
 2023 00de 01       		.uleb128 0x1
 2024 00df 12       		.uleb128 0x12
 2025 00e0 06       		.uleb128 0x6
 2026 00e1 40       		.uleb128 0x40
 2027 00e2 18       		.uleb128 0x18
 2028 00e3 9742     		.uleb128 0x2117
 2029 00e5 19       		.uleb128 0x19
 2030 00e6 00       		.byte	0
 2031 00e7 00       		.byte	0
 2032 00e8 0E       		.uleb128 0xe
 2033 00e9 2E       		.uleb128 0x2e
 2034 00ea 01       		.byte	0x1
 2035 00eb 3F       		.uleb128 0x3f
 2036 00ec 19       		.uleb128 0x19
 2037 00ed 03       		.uleb128 0x3
 2038 00ee 0E       		.uleb128 0xe
 2039 00ef 3A       		.uleb128 0x3a
 2040 00f0 0B       		.uleb128 0xb
 2041 00f1 3B       		.uleb128 0x3b
 2042 00f2 05       		.uleb128 0x5
 2043 00f3 27       		.uleb128 0x27
 2044 00f4 19       		.uleb128 0x19
 2045 00f5 49       		.uleb128 0x49
 2046 00f6 13       		.uleb128 0x13
 2047 00f7 11       		.uleb128 0x11
 2048 00f8 01       		.uleb128 0x1
 2049 00f9 12       		.uleb128 0x12
 2050 00fa 06       		.uleb128 0x6
 2051 00fb 40       		.uleb128 0x40
 2052 00fc 18       		.uleb128 0x18
 2053 00fd 9642     		.uleb128 0x2116
 2054 00ff 19       		.uleb128 0x19
 2055 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 52


 2056 0101 13       		.uleb128 0x13
 2057 0102 00       		.byte	0
 2058 0103 00       		.byte	0
 2059 0104 0F       		.uleb128 0xf
 2060 0105 2E       		.uleb128 0x2e
 2061 0106 00       		.byte	0
 2062 0107 3F       		.uleb128 0x3f
 2063 0108 19       		.uleb128 0x19
 2064 0109 03       		.uleb128 0x3
 2065 010a 0E       		.uleb128 0xe
 2066 010b 3A       		.uleb128 0x3a
 2067 010c 0B       		.uleb128 0xb
 2068 010d 3B       		.uleb128 0x3b
 2069 010e 05       		.uleb128 0x5
 2070 010f 27       		.uleb128 0x27
 2071 0110 19       		.uleb128 0x19
 2072 0111 49       		.uleb128 0x49
 2073 0112 13       		.uleb128 0x13
 2074 0113 11       		.uleb128 0x11
 2075 0114 01       		.uleb128 0x1
 2076 0115 12       		.uleb128 0x12
 2077 0116 06       		.uleb128 0x6
 2078 0117 40       		.uleb128 0x40
 2079 0118 18       		.uleb128 0x18
 2080 0119 9742     		.uleb128 0x2117
 2081 011b 19       		.uleb128 0x19
 2082 011c 00       		.byte	0
 2083 011d 00       		.byte	0
 2084 011e 10       		.uleb128 0x10
 2085 011f 2E       		.uleb128 0x2e
 2086 0120 01       		.byte	0x1
 2087 0121 3F       		.uleb128 0x3f
 2088 0122 19       		.uleb128 0x19
 2089 0123 03       		.uleb128 0x3
 2090 0124 0E       		.uleb128 0xe
 2091 0125 3A       		.uleb128 0x3a
 2092 0126 0B       		.uleb128 0xb
 2093 0127 3B       		.uleb128 0x3b
 2094 0128 05       		.uleb128 0x5
 2095 0129 27       		.uleb128 0x27
 2096 012a 19       		.uleb128 0x19
 2097 012b 49       		.uleb128 0x49
 2098 012c 13       		.uleb128 0x13
 2099 012d 11       		.uleb128 0x11
 2100 012e 01       		.uleb128 0x1
 2101 012f 12       		.uleb128 0x12
 2102 0130 06       		.uleb128 0x6
 2103 0131 40       		.uleb128 0x40
 2104 0132 18       		.uleb128 0x18
 2105 0133 9742     		.uleb128 0x2117
 2106 0135 19       		.uleb128 0x19
 2107 0136 01       		.uleb128 0x1
 2108 0137 13       		.uleb128 0x13
 2109 0138 00       		.byte	0
 2110 0139 00       		.byte	0
 2111 013a 11       		.uleb128 0x11
 2112 013b 34       		.uleb128 0x34
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 53


 2113 013c 00       		.byte	0
 2114 013d 03       		.uleb128 0x3
 2115 013e 08       		.uleb128 0x8
 2116 013f 3A       		.uleb128 0x3a
 2117 0140 0B       		.uleb128 0xb
 2118 0141 3B       		.uleb128 0x3b
 2119 0142 05       		.uleb128 0x5
 2120 0143 49       		.uleb128 0x49
 2121 0144 13       		.uleb128 0x13
 2122 0145 02       		.uleb128 0x2
 2123 0146 18       		.uleb128 0x18
 2124 0147 00       		.byte	0
 2125 0148 00       		.byte	0
 2126 0149 12       		.uleb128 0x12
 2127 014a 2E       		.uleb128 0x2e
 2128 014b 01       		.byte	0x1
 2129 014c 03       		.uleb128 0x3
 2130 014d 0E       		.uleb128 0xe
 2131 014e 3A       		.uleb128 0x3a
 2132 014f 0B       		.uleb128 0xb
 2133 0150 3B       		.uleb128 0x3b
 2134 0151 05       		.uleb128 0x5
 2135 0152 27       		.uleb128 0x27
 2136 0153 19       		.uleb128 0x19
 2137 0154 11       		.uleb128 0x11
 2138 0155 01       		.uleb128 0x1
 2139 0156 12       		.uleb128 0x12
 2140 0157 06       		.uleb128 0x6
 2141 0158 40       		.uleb128 0x40
 2142 0159 18       		.uleb128 0x18
 2143 015a 9642     		.uleb128 0x2116
 2144 015c 19       		.uleb128 0x19
 2145 015d 01       		.uleb128 0x1
 2146 015e 13       		.uleb128 0x13
 2147 015f 00       		.byte	0
 2148 0160 00       		.byte	0
 2149 0161 13       		.uleb128 0x13
 2150 0162 34       		.uleb128 0x34
 2151 0163 00       		.byte	0
 2152 0164 03       		.uleb128 0x3
 2153 0165 0E       		.uleb128 0xe
 2154 0166 3A       		.uleb128 0x3a
 2155 0167 0B       		.uleb128 0xb
 2156 0168 3B       		.uleb128 0x3b
 2157 0169 0B       		.uleb128 0xb
 2158 016a 49       		.uleb128 0x49
 2159 016b 13       		.uleb128 0x13
 2160 016c 3F       		.uleb128 0x3f
 2161 016d 19       		.uleb128 0x19
 2162 016e 02       		.uleb128 0x2
 2163 016f 18       		.uleb128 0x18
 2164 0170 00       		.byte	0
 2165 0171 00       		.byte	0
 2166 0172 00       		.byte	0
 2167              		.section	.debug_aranges,"",%progbits
 2168 0000 A4000000 		.4byte	0xa4
 2169 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 54


 2170 0006 00000000 		.4byte	.Ldebug_info0
 2171 000a 04       		.byte	0x4
 2172 000b 00       		.byte	0
 2173 000c 0000     		.2byte	0
 2174 000e 0000     		.2byte	0
 2175 0010 00000000 		.4byte	.LFB0
 2176 0014 24000000 		.4byte	.LFE0-.LFB0
 2177 0018 00000000 		.4byte	.LFB1
 2178 001c 2C000000 		.4byte	.LFE1-.LFB1
 2179 0020 00000000 		.4byte	.LFB2
 2180 0024 C4000000 		.4byte	.LFE2-.LFB2
 2181 0028 00000000 		.4byte	.LFB3
 2182 002c 5C000000 		.4byte	.LFE3-.LFB3
 2183 0030 00000000 		.4byte	.LFB4
 2184 0034 40000000 		.4byte	.LFE4-.LFB4
 2185 0038 00000000 		.4byte	.LFB5
 2186 003c 54000000 		.4byte	.LFE5-.LFB5
 2187 0040 00000000 		.4byte	.LFB6
 2188 0044 30000000 		.4byte	.LFE6-.LFB6
 2189 0048 00000000 		.4byte	.LFB7
 2190 004c 30000000 		.4byte	.LFE7-.LFB7
 2191 0050 00000000 		.4byte	.LFB8
 2192 0054 40000000 		.4byte	.LFE8-.LFB8
 2193 0058 00000000 		.4byte	.LFB9
 2194 005c 28000000 		.4byte	.LFE9-.LFB9
 2195 0060 00000000 		.4byte	.LFB10
 2196 0064 30000000 		.4byte	.LFE10-.LFB10
 2197 0068 00000000 		.4byte	.LFB11
 2198 006c 20000000 		.4byte	.LFE11-.LFB11
 2199 0070 00000000 		.4byte	.LFB12
 2200 0074 94000000 		.4byte	.LFE12-.LFB12
 2201 0078 00000000 		.4byte	.LFB13
 2202 007c 2C000000 		.4byte	.LFE13-.LFB13
 2203 0080 00000000 		.4byte	.LFB14
 2204 0084 1C000000 		.4byte	.LFE14-.LFB14
 2205 0088 00000000 		.4byte	.LFB15
 2206 008c 8C000000 		.4byte	.LFE15-.LFB15
 2207 0090 00000000 		.4byte	.LFB16
 2208 0094 90000000 		.4byte	.LFE16-.LFB16
 2209 0098 00000000 		.4byte	.LFB17
 2210 009c 84000000 		.4byte	.LFE17-.LFB17
 2211 00a0 00000000 		.4byte	0
 2212 00a4 00000000 		.4byte	0
 2213              		.section	.debug_ranges,"",%progbits
 2214              	.Ldebug_ranges0:
 2215 0000 00000000 		.4byte	.LFB0
 2216 0004 24000000 		.4byte	.LFE0
 2217 0008 00000000 		.4byte	.LFB1
 2218 000c 2C000000 		.4byte	.LFE1
 2219 0010 00000000 		.4byte	.LFB2
 2220 0014 C4000000 		.4byte	.LFE2
 2221 0018 00000000 		.4byte	.LFB3
 2222 001c 5C000000 		.4byte	.LFE3
 2223 0020 00000000 		.4byte	.LFB4
 2224 0024 40000000 		.4byte	.LFE4
 2225 0028 00000000 		.4byte	.LFB5
 2226 002c 54000000 		.4byte	.LFE5
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 55


 2227 0030 00000000 		.4byte	.LFB6
 2228 0034 30000000 		.4byte	.LFE6
 2229 0038 00000000 		.4byte	.LFB7
 2230 003c 30000000 		.4byte	.LFE7
 2231 0040 00000000 		.4byte	.LFB8
 2232 0044 40000000 		.4byte	.LFE8
 2233 0048 00000000 		.4byte	.LFB9
 2234 004c 28000000 		.4byte	.LFE9
 2235 0050 00000000 		.4byte	.LFB10
 2236 0054 30000000 		.4byte	.LFE10
 2237 0058 00000000 		.4byte	.LFB11
 2238 005c 20000000 		.4byte	.LFE11
 2239 0060 00000000 		.4byte	.LFB12
 2240 0064 94000000 		.4byte	.LFE12
 2241 0068 00000000 		.4byte	.LFB13
 2242 006c 2C000000 		.4byte	.LFE13
 2243 0070 00000000 		.4byte	.LFB14
 2244 0074 1C000000 		.4byte	.LFE14
 2245 0078 00000000 		.4byte	.LFB15
 2246 007c 8C000000 		.4byte	.LFE15
 2247 0080 00000000 		.4byte	.LFB16
 2248 0084 90000000 		.4byte	.LFE16
 2249 0088 00000000 		.4byte	.LFB17
 2250 008c 84000000 		.4byte	.LFE17
 2251 0090 00000000 		.4byte	0
 2252 0094 00000000 		.4byte	0
 2253              		.section	.debug_line,"",%progbits
 2254              	.Ldebug_line0:
 2255 0000 0E020000 		.section	.debug_str,"MS",%progbits,1
 2255      02004900 
 2255      00000201 
 2255      FB0E0D00 
 2255      01010101 
 2256              	.LASF13:
 2257 0000 75696E74 		.ascii	"uint16\000"
 2257      313600
 2258              	.LASF44:
 2259 0007 61646347 		.ascii	"adcGain\000"
 2259      61696E00 
 2260              	.LASF41:
 2261 000f 636F756E 		.ascii	"counts\000"
 2261      747300
 2262              	.LASF33:
 2263 0016 53656174 		.ascii	"Seat_ADC_SAR_StartConvert\000"
 2263      5F414443 
 2263      5F534152 
 2263      5F537461 
 2263      7274436F 
 2264              	.LASF59:
 2265 0030 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2265      43313120 
 2265      352E342E 
 2265      31203230 
 2265      31363036 
 2266 0063 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2266      20726576 
 2266      6973696F 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 56


 2266      6E203233 
 2266      37373135 
 2267 0096 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2267      66756E63 
 2267      74696F6E 
 2267      2D736563 
 2267      74696F6E 
 2268              	.LASF9:
 2269 00be 6C6F6E67 		.ascii	"long long unsigned int\000"
 2269      206C6F6E 
 2269      6720756E 
 2269      7369676E 
 2269      65642069 
 2270              	.LASF39:
 2271 00d5 53656174 		.ascii	"Seat_ADC_SAR_SetOffset\000"
 2271      5F414443 
 2271      5F534152 
 2271      5F536574 
 2271      4F666673 
 2272              	.LASF56:
 2273 00ec 53656174 		.ascii	"Seat_ADC_SAR_countsPerVolt\000"
 2273      5F414443 
 2273      5F534152 
 2273      5F636F75 
 2273      6E747350 
 2274              	.LASF1:
 2275 0107 6C6F6E67 		.ascii	"long long int\000"
 2275      206C6F6E 
 2275      6720696E 
 2275      7400
 2276              	.LASF3:
 2277 0115 7369676E 		.ascii	"signed char\000"
 2277      65642063 
 2277      68617200 
 2278              	.LASF16:
 2279 0121 696E7433 		.ascii	"int32\000"
 2279      3200
 2280              	.LASF7:
 2281 0127 6C6F6E67 		.ascii	"long int\000"
 2281      20696E74 
 2281      00
 2282              	.LASF38:
 2283 0130 53656174 		.ascii	"Seat_ADC_SAR_GetResult16\000"
 2283      5F414443 
 2283      5F534152 
 2283      5F476574 
 2283      52657375 
 2284              	.LASF22:
 2285 0149 72656731 		.ascii	"reg16\000"
 2285      3600
 2286              	.LASF12:
 2287 014f 75696E74 		.ascii	"uint8\000"
 2287      3800
 2288              	.LASF62:
 2289 0155 53656174 		.ascii	"Seat_ADC_SAR_GetResult8\000"
 2289      5F414443 
 2289      5F534152 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 57


 2289      5F476574 
 2289      52657375 
 2290              	.LASF19:
 2291 016d 646F7562 		.ascii	"double\000"
 2291      6C6500
 2292              	.LASF27:
 2293 0174 53656174 		.ascii	"Seat_ADC_SAR_Enable\000"
 2293      5F414443 
 2293      5F534152 
 2293      5F456E61 
 2293      626C6500 
 2294              	.LASF49:
 2295 0188 636F756E 		.ascii	"countsPer10Volt\000"
 2295      74735065 
 2295      72313056 
 2295      6F6C7400 
 2296              	.LASF35:
 2297 0198 7265744D 		.ascii	"retMode\000"
 2297      6F646500 
 2298              	.LASF0:
 2299 01a0 756E7369 		.ascii	"unsigned int\000"
 2299      676E6564 
 2299      20696E74 
 2299      00
 2300              	.LASF51:
 2301 01ad 75566F6C 		.ascii	"uVolts\000"
 2301      747300
 2302              	.LASF8:
 2303 01b4 6C6F6E67 		.ascii	"long unsigned int\000"
 2303      20756E73 
 2303      69676E65 
 2303      6420696E 
 2303      7400
 2304              	.LASF53:
 2305 01c6 766F6C74 		.ascii	"volts\000"
 2305      7300
 2306              	.LASF6:
 2307 01cc 73686F72 		.ascii	"short unsigned int\000"
 2307      7420756E 
 2307      7369676E 
 2307      65642069 
 2307      6E7400
 2308              	.LASF57:
 2309 01df 53656174 		.ascii	"Seat_ADC_SAR_countsPer10Volt\000"
 2309      5F414443 
 2309      5F534152 
 2309      5F636F75 
 2309      6E747350 
 2310              	.LASF24:
 2311 01fc 53656174 		.ascii	"Seat_ADC_SAR_Init\000"
 2311      5F414443 
 2311      5F534152 
 2311      5F496E69 
 2311      7400
 2312              	.LASF14:
 2313 020e 696E7438 		.ascii	"int8\000"
 2313      00
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 58


 2314              	.LASF48:
 2315 0213 6D566F6C 		.ascii	"mVolts\000"
 2315      747300
 2316              	.LASF50:
 2317 021a 53656174 		.ascii	"Seat_ADC_SAR_CountsTo_uVolts\000"
 2317      5F414443 
 2317      5F534152 
 2317      5F436F75 
 2317      6E747354 
 2318              	.LASF30:
 2319 0237 53656174 		.ascii	"Seat_ADC_SAR_SetResolution\000"
 2319      5F414443 
 2319      5F534152 
 2319      5F536574 
 2319      5265736F 
 2320              	.LASF23:
 2321 0252 53656174 		.ascii	"Seat_ADC_SAR_Start\000"
 2321      5F414443 
 2321      5F534152 
 2321      5F537461 
 2321      727400
 2322              	.LASF17:
 2323 0265 666C6F61 		.ascii	"float32\000"
 2323      74333200 
 2324              	.LASF10:
 2325 026d 73697A65 		.ascii	"sizetype\000"
 2325      74797065 
 2325      00
 2326              	.LASF2:
 2327 0276 6C6F6E67 		.ascii	"long double\000"
 2327      20646F75 
 2327      626C6500 
 2328              	.LASF52:
 2329 0282 53656174 		.ascii	"Seat_ADC_SAR_CountsTo_Volts\000"
 2329      5F414443 
 2329      5F534152 
 2329      5F436F75 
 2329      6E747354 
 2330              	.LASF54:
 2331 029e 53656174 		.ascii	"Seat_ADC_SAR_initVar\000"
 2331      5F414443 
 2331      5F534152 
 2331      5F696E69 
 2331      74566172 
 2332              	.LASF29:
 2333 02b3 53656174 		.ascii	"Seat_ADC_SAR_SetPower\000"
 2333      5F414443 
 2333      5F534152 
 2333      5F536574 
 2333      506F7765 
 2334              	.LASF20:
 2335 02c9 696E7436 		.ascii	"int64\000"
 2335      3400
 2336              	.LASF46:
 2337 02cf 53656174 		.ascii	"Seat_ADC_SAR_CountsTo_mVolts\000"
 2337      5F414443 
 2337      5F534152 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 59


 2337      5F436F75 
 2337      6E747354 
 2338              	.LASF18:
 2339 02ec 666C6F61 		.ascii	"float\000"
 2339      7400
 2340              	.LASF34:
 2341 02f2 53656174 		.ascii	"Seat_ADC_SAR_StopConvert\000"
 2341      5F414443 
 2341      5F534152 
 2341      5F53746F 
 2341      70436F6E 
 2342              	.LASF31:
 2343 030b 706F7765 		.ascii	"power\000"
 2343      7200
 2344              	.LASF21:
 2345 0311 72656738 		.ascii	"reg8\000"
 2345      00
 2346              	.LASF4:
 2347 0316 756E7369 		.ascii	"unsigned char\000"
 2347      676E6564 
 2347      20636861 
 2347      7200
 2348              	.LASF45:
 2349 0324 53656174 		.ascii	"Seat_ADC_SAR_SetScaledGain\000"
 2349      5F414443 
 2349      5F534152 
 2349      5F536574 
 2349      5363616C 
 2350              	.LASF42:
 2351 033f 64696666 		.ascii	"diff_zero\000"
 2351      5F7A6572 
 2351      6F00
 2352              	.LASF5:
 2353 0349 73686F72 		.ascii	"short int\000"
 2353      7420696E 
 2353      7400
 2354              	.LASF63:
 2355 0353 53656174 		.ascii	"Seat_ADC_SAR_CalcGain\000"
 2355      5F414443 
 2355      5F534152 
 2355      5F43616C 
 2355      63476169 
 2356              	.LASF32:
 2357 0369 7265736F 		.ascii	"resolution\000"
 2357      6C757469 
 2357      6F6E00
 2358              	.LASF61:
 2359 0374 433A5C55 		.ascii	"C:\\Users\\jebush2\\Desktop\\PSoC 3-19-2019\\Smart "
 2359      73657273 
 2359      5C6A6562 
 2359      75736832 
 2359      5C446573 
 2360 03a2 42696B65 		.ascii	"Bike PSoC\\IMU.cydsn\000"
 2360      2050536F 
 2360      435C494D 
 2360      552E6379 
 2360      64736E00 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 60


 2361              	.LASF55:
 2362 03b6 53656174 		.ascii	"Seat_ADC_SAR_offset\000"
 2362      5F414443 
 2362      5F534152 
 2362      5F6F6666 
 2362      73657400 
 2363              	.LASF11:
 2364 03ca 63686172 		.ascii	"char\000"
 2364      00
 2365              	.LASF37:
 2366 03cf 53656174 		.ascii	"Seat_ADC_SAR_IsEndConversion\000"
 2366      5F414443 
 2366      5F534152 
 2366      5F497345 
 2366      6E64436F 
 2367              	.LASF40:
 2368 03ec 6F666673 		.ascii	"offset\000"
 2368      657400
 2369              	.LASF47:
 2370 03f3 61646343 		.ascii	"adcCounts\000"
 2370      6F756E74 
 2370      7300
 2371              	.LASF43:
 2372 03fd 53656174 		.ascii	"Seat_ADC_SAR_SetGain\000"
 2372      5F414443 
 2372      5F534152 
 2372      5F536574 
 2372      4761696E 
 2373              	.LASF26:
 2374 0412 656E6162 		.ascii	"enableInterrupts\000"
 2374      6C65496E 
 2374      74657272 
 2374      75707473 
 2374      00
 2375              	.LASF36:
 2376 0423 73746174 		.ascii	"status\000"
 2376      757300
 2377              	.LASF60:
 2378 042a 47656E65 		.ascii	"Generated_Source\\PSoC5\\Seat_ADC_SAR.c\000"
 2378      72617465 
 2378      645F536F 
 2378      75726365 
 2378      5C50536F 
 2379              	.LASF58:
 2380 0450 53656174 		.ascii	"Seat_ADC_SAR_shift\000"
 2380      5F414443 
 2380      5F534152 
 2380      5F736869 
 2380      667400
 2381              	.LASF15:
 2382 0463 696E7431 		.ascii	"int16\000"
 2382      3600
 2383              	.LASF25:
 2384 0469 746D7052 		.ascii	"tmpReg\000"
 2384      656700
 2385              	.LASF28:
 2386 0470 53656174 		.ascii	"Seat_ADC_SAR_Stop\000"
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccvZO2Za.s 			page 61


 2386      5F414443 
 2386      5F534152 
 2386      5F53746F 
 2386      7000
 2387              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
