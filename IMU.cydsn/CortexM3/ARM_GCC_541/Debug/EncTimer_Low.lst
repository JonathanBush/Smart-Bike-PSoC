ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"EncTimer_Low.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EncTimer_Low_initVar
  20              		.bss
  21              		.type	EncTimer_Low_initVar, %object
  22              		.size	EncTimer_Low_initVar, 1
  23              	EncTimer_Low_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.EncTimer_Low_Init,"ax",%progbits
  26              		.align	2
  27              		.global	EncTimer_Low_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	EncTimer_Low_Init, %function
  31              	EncTimer_Low_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\EncTimer_Low.c"
   1:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/EncTimer_Low.c **** * File Name: EncTimer_Low.c
   3:Generated_Source\PSoC5/EncTimer_Low.c **** * Version 2.80
   4:Generated_Source\PSoC5/EncTimer_Low.c **** *
   5:Generated_Source\PSoC5/EncTimer_Low.c **** * Description:
   6:Generated_Source\PSoC5/EncTimer_Low.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/EncTimer_Low.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/EncTimer_Low.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/EncTimer_Low.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/EncTimer_Low.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/EncTimer_Low.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/EncTimer_Low.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/EncTimer_Low.c **** *  or a capture event.
  14:Generated_Source\PSoC5/EncTimer_Low.c **** *
  15:Generated_Source\PSoC5/EncTimer_Low.c **** * Note:
  16:Generated_Source\PSoC5/EncTimer_Low.c **** *
  17:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
  18:Generated_Source\PSoC5/EncTimer_Low.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/EncTimer_Low.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/EncTimer_Low.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/EncTimer_Low.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/EncTimer_Low.c **** 
  24:Generated_Source\PSoC5/EncTimer_Low.c **** #include "EncTimer_Low.h"
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 2


  25:Generated_Source\PSoC5/EncTimer_Low.c **** 
  26:Generated_Source\PSoC5/EncTimer_Low.c **** uint8 EncTimer_Low_initVar = 0u;
  27:Generated_Source\PSoC5/EncTimer_Low.c **** 
  28:Generated_Source\PSoC5/EncTimer_Low.c **** 
  29:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_Init
  31:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
  32:Generated_Source\PSoC5/EncTimer_Low.c **** *
  33:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
  34:Generated_Source\PSoC5/EncTimer_Low.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/EncTimer_Low.c **** *
  36:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
  37:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
  38:Generated_Source\PSoC5/EncTimer_Low.c **** *
  39:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
  40:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
  41:Generated_Source\PSoC5/EncTimer_Low.c **** *
  42:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_Init(void) 
  44:Generated_Source\PSoC5/EncTimer_Low.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/EncTimer_Low.c ****     #if(!EncTimer_Low_UsingFixedFunction)
  46:Generated_Source\PSoC5/EncTimer_Low.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/EncTimer_Low.c ****             uint8 EncTimer_Low_interruptState;
  48:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/EncTimer_Low.c **** 
  50:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (EncTimer_Low_UsingFixedFunction)
  51:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL &= EncTimer_Low_CTRL_ENABLE;
  53:Generated_Source\PSoC5/EncTimer_Low.c **** 
  54:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/EncTimer_Low.c ****             EncTimer_Low_CONTROL2 &= ((uint8)(~EncTimer_Low_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/EncTimer_Low.c **** 
  59:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/EncTimer_Low.c ****             EncTimer_Low_CONTROL3 &= ((uint8)(~EncTimer_Low_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/EncTimer_Low.c **** 
  63:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/EncTimer_Low.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/EncTimer_Low.c ****             EncTimer_Low_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/EncTimer_Low.c **** 
  69:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_RunModeUsed == 2)
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 3


  70:Generated_Source\PSoC5/EncTimer_Low.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/EncTimer_Low.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/EncTimer_Low.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/EncTimer_Low.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/EncTimer_Low.c **** 
  76:Generated_Source\PSoC5/EncTimer_Low.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/EncTimer_Low.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/EncTimer_Low.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/EncTimer_Low.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/EncTimer_Low.c **** 
  82:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/EncTimer_Low.c **** 
  84:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/EncTimer_Low.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/EncTimer_Low.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL2 |= EncTimer_Low_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/EncTimer_Low.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/EncTimer_Low.c **** 
  90:Generated_Source\PSoC5/EncTimer_Low.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/EncTimer_Low.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL3 &= ((uint8)(~EncTimer_Low_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL3 |= EncTimer_Low_CTRL_RCOD;
  94:Generated_Source\PSoC5/EncTimer_Low.c **** 
  95:Generated_Source\PSoC5/EncTimer_Low.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL3 &= ((uint8)(~EncTimer_Low_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL3 |= EncTimer_Low_CTRL_ENBL;
  98:Generated_Source\PSoC5/EncTimer_Low.c **** 
  99:Generated_Source\PSoC5/EncTimer_Low.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/EncTimer_Low.c ****                 EncTimer_Low_CONTROL3 |= EncTimer_Low_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/EncTimer_Low.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/EncTimer_Low.c **** 
 103:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/EncTimer_Low.c **** 
 105:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_RT1 &= ((uint8)(~EncTimer_Low_RT1_MASK));
 107:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_RT1 |= EncTimer_Low_SYNC;
 108:Generated_Source\PSoC5/EncTimer_Low.c **** 
 109:Generated_Source\PSoC5/EncTimer_Low.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_RT1 &= ((uint8)(~EncTimer_Low_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_RT1 |= EncTimer_Low_SYNCDSI_EN;
 112:Generated_Source\PSoC5/EncTimer_Low.c **** 
 113:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL2 |= EncTimer_Low_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/EncTimer_Low.c **** 
 117:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/EncTimer_Low.c ****     EncTimer_Low_WritePeriod(EncTimer_Low_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 4FF6FF70 		movw	r0, #65535
  48 000a FFF7FEFF 		bl	EncTimer_Low_WritePeriod
 119:Generated_Source\PSoC5/EncTimer_Low.c ****     EncTimer_Low_WriteCounter(EncTimer_Low_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000e 4FF6FF70 		movw	r0, #65535
  51 0012 FFF7FEFF 		bl	EncTimer_Low_WriteCounter
 120:Generated_Source\PSoC5/EncTimer_Low.c **** 
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 4


 121:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (EncTimer_Low_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CAPTURE_COUNT_CTRL |= EncTimer_Low_CNTR_ENABLE;
 123:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_SetCaptureCount(EncTimer_Low_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/EncTimer_Low.c **** 
 126:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UsingFixedFunction)
 127:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/EncTimer_Low.c ****             EncTimer_Low_SetCaptureMode(EncTimer_Low_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/EncTimer_Low.c **** 
 131:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/EncTimer_Low.c ****             #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/EncTimer_Low.c ****                 if (0u == (EncTimer_Low_CONTROL & EncTimer_Low__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/EncTimer_Low.c ****                 {
 135:Generated_Source\PSoC5/EncTimer_Low.c ****                     EncTimer_Low_SetTriggerMode(EncTimer_Low_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/EncTimer_Low.c ****                 }
 137:Generated_Source\PSoC5/EncTimer_Low.c ****             #endif /* (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/EncTimer_Low.c **** 
 140:Generated_Source\PSoC5/EncTimer_Low.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_interruptState = CyEnterCriticalSection();
  52              		.loc 1 142 0
  53 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  54 001a 0346     		mov	r3, r0
  55 001c FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/EncTimer_Low.c **** 
 144:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_STATUS_AUX_CTRL |= EncTimer_Low_STATUS_ACTL_INT_EN_MASK;
  56              		.loc 1 145 0
  57 001e 0A4A     		ldr	r2, .L2
  58 0020 094B     		ldr	r3, .L2
  59 0022 1B78     		ldrb	r3, [r3]
  60 0024 DBB2     		uxtb	r3, r3
  61 0026 43F01003 		orr	r3, r3, #16
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/EncTimer_Low.c **** 
 147:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/EncTimer_Low.c ****         CyExitCriticalSection(EncTimer_Low_interruptState);
  64              		.loc 1 148 0
  65 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0030 1846     		mov	r0, r3
  67 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC5/EncTimer_Low.c **** 
 150:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_EnableTriggerMode)
 151:Generated_Source\PSoC5/EncTimer_Low.c ****             EncTimer_Low_EnableTrigger();
 152:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/EncTimer_Low.c **** 		
 154:Generated_Source\PSoC5/EncTimer_Low.c **** 		
 155:Generated_Source\PSoC5/EncTimer_Low.c ****         #if (EncTimer_Low_InterruptOnCaptureCount && !EncTimer_Low_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/EncTimer_Low.c ****             EncTimer_Low_SetInterruptCount(EncTimer_Low_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/EncTimer_Low.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/EncTimer_Low.c **** 
 159:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_ClearFIFO();
  68              		.loc 1 159 0
  69 0036 FFF7FEFF 		bl	EncTimer_Low_ClearFIFO
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 5


 160:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/EncTimer_Low.c **** 
 162:Generated_Source\PSoC5/EncTimer_Low.c ****     EncTimer_Low_SetInterruptMode(EncTimer_Low_INIT_INTERRUPT_MODE);
  70              		.loc 1 162 0
  71 003a 0220     		movs	r0, #2
  72 003c FFF7FEFF 		bl	EncTimer_Low_SetInterruptMode
 163:Generated_Source\PSoC5/EncTimer_Low.c **** }
  73              		.loc 1 163 0
  74 0040 00BF     		nop
  75 0042 0837     		adds	r7, r7, #8
  76              		.cfi_def_cfa_offset 8
  77 0044 BD46     		mov	sp, r7
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 95640040 		.word	1073767573
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	EncTimer_Low_Init, .-EncTimer_Low_Init
  88              		.section	.text.EncTimer_Low_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	EncTimer_Low_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	EncTimer_Low_Enable, %function
  94              	EncTimer_Low_Enable:
  95              	.LFB1:
 164:Generated_Source\PSoC5/EncTimer_Low.c **** 
 165:Generated_Source\PSoC5/EncTimer_Low.c **** 
 166:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_Enable
 168:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 169:Generated_Source\PSoC5/EncTimer_Low.c **** *
 170:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 171:Generated_Source\PSoC5/EncTimer_Low.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/EncTimer_Low.c **** *
 173:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 174:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 175:Generated_Source\PSoC5/EncTimer_Low.c **** *
 176:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 177:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 178:Generated_Source\PSoC5/EncTimer_Low.c **** *
 179:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_Enable(void) 
 181:Generated_Source\PSoC5/EncTimer_Low.c **** {
  96              		.loc 1 181 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 6


 105              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (EncTimer_Low_UsingFixedFunction)
 184:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_GLOBAL_ENABLE |= EncTimer_Low_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_GLOBAL_STBY_ENABLE |= EncTimer_Low_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/EncTimer_Low.c **** 
 188:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED || EncTimer_Low_UsingFixedFunction)
 190:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL |= EncTimer_Low_CTRL_ENABLE;
 191:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/EncTimer_Low.c **** }
 106              		.loc 1 192 0
 107 0004 00BF     		nop
 108 0006 BD46     		mov	sp, r7
 109              		.cfi_def_cfa_register 13
 110              		@ sp needed
 111 0008 80BC     		pop	{r7}
 112              		.cfi_restore 7
 113              		.cfi_def_cfa_offset 0
 114 000a 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE1:
 117              		.size	EncTimer_Low_Enable, .-EncTimer_Low_Enable
 118              		.section	.text.EncTimer_Low_Start,"ax",%progbits
 119              		.align	2
 120              		.global	EncTimer_Low_Start
 121              		.thumb
 122              		.thumb_func
 123              		.type	EncTimer_Low_Start, %function
 124              	EncTimer_Low_Start:
 125              	.LFB2:
 193:Generated_Source\PSoC5/EncTimer_Low.c **** 
 194:Generated_Source\PSoC5/EncTimer_Low.c **** 
 195:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_Start
 197:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 198:Generated_Source\PSoC5/EncTimer_Low.c **** *
 199:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 200:Generated_Source\PSoC5/EncTimer_Low.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/EncTimer_Low.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/EncTimer_Low.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/EncTimer_Low.c **** *
 204:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 205:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 206:Generated_Source\PSoC5/EncTimer_Low.c **** *
 207:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 208:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 209:Generated_Source\PSoC5/EncTimer_Low.c **** *
 210:Generated_Source\PSoC5/EncTimer_Low.c **** * Global variables:
 211:Generated_Source\PSoC5/EncTimer_Low.c **** *  EncTimer_Low_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/EncTimer_Low.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/EncTimer_Low.c **** *
 214:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_Start(void) 
 216:Generated_Source\PSoC5/EncTimer_Low.c **** {
 126              		.loc 1 216 0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 7


 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/EncTimer_Low.c ****     if(EncTimer_Low_initVar == 0u)
 136              		.loc 1 217 0
 137 0004 064B     		ldr	r3, .L7
 138 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 0008 002B     		cmp	r3, #0
 140 000a 04D1     		bne	.L6
 218:Generated_Source\PSoC5/EncTimer_Low.c ****     {
 219:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_Init();
 141              		.loc 1 219 0
 142 000c FFF7FEFF 		bl	EncTimer_Low_Init
 220:Generated_Source\PSoC5/EncTimer_Low.c **** 
 221:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_initVar = 1u;   /* Clear this bit for Initialization */
 143              		.loc 1 221 0
 144 0010 034B     		ldr	r3, .L7
 145 0012 0122     		movs	r2, #1
 146 0014 1A70     		strb	r2, [r3]
 147              	.L6:
 222:Generated_Source\PSoC5/EncTimer_Low.c ****     }
 223:Generated_Source\PSoC5/EncTimer_Low.c **** 
 224:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/EncTimer_Low.c ****     EncTimer_Low_Enable();
 148              		.loc 1 225 0
 149 0016 FFF7FEFF 		bl	EncTimer_Low_Enable
 226:Generated_Source\PSoC5/EncTimer_Low.c **** }
 150              		.loc 1 226 0
 151 001a 00BF     		nop
 152 001c 80BD     		pop	{r7, pc}
 153              	.L8:
 154 001e 00BF     		.align	2
 155              	.L7:
 156 0020 00000000 		.word	EncTimer_Low_initVar
 157              		.cfi_endproc
 158              	.LFE2:
 159              		.size	EncTimer_Low_Start, .-EncTimer_Low_Start
 160              		.section	.text.EncTimer_Low_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	EncTimer_Low_Stop
 163              		.thumb
 164              		.thumb_func
 165              		.type	EncTimer_Low_Stop, %function
 166              	EncTimer_Low_Stop:
 167              	.LFB3:
 227:Generated_Source\PSoC5/EncTimer_Low.c **** 
 228:Generated_Source\PSoC5/EncTimer_Low.c **** 
 229:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_Stop
 231:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 232:Generated_Source\PSoC5/EncTimer_Low.c **** *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 8


 233:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 234:Generated_Source\PSoC5/EncTimer_Low.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/EncTimer_Low.c **** *  interrupts.
 236:Generated_Source\PSoC5/EncTimer_Low.c **** *
 237:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 238:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 239:Generated_Source\PSoC5/EncTimer_Low.c **** *
 240:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 241:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 242:Generated_Source\PSoC5/EncTimer_Low.c **** *
 243:Generated_Source\PSoC5/EncTimer_Low.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/EncTimer_Low.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/EncTimer_Low.c **** *
 246:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_Stop(void) 
 248:Generated_Source\PSoC5/EncTimer_Low.c **** {
 168              		.loc 1 248 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 80B4     		push	{r7}
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/EncTimer_Low.c ****     #if(!EncTimer_Low_UDB_CONTROL_REG_REMOVED || EncTimer_Low_UsingFixedFunction)
 251:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL &= ((uint8)(~EncTimer_Low_CTRL_ENABLE));
 252:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/EncTimer_Low.c **** 
 254:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (EncTimer_Low_UsingFixedFunction)
 256:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_GLOBAL_ENABLE &= ((uint8)(~EncTimer_Low_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_GLOBAL_STBY_ENABLE &= ((uint8)(~EncTimer_Low_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/EncTimer_Low.c **** }
 178              		.loc 1 259 0
 179 0004 00BF     		nop
 180 0006 BD46     		mov	sp, r7
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 0008 80BC     		pop	{r7}
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 000a 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	EncTimer_Low_Stop, .-EncTimer_Low_Stop
 190              		.section	.text.EncTimer_Low_SetInterruptMode,"ax",%progbits
 191              		.align	2
 192              		.global	EncTimer_Low_SetInterruptMode
 193              		.thumb
 194              		.thumb_func
 195              		.type	EncTimer_Low_SetInterruptMode, %function
 196              	EncTimer_Low_SetInterruptMode:
 197              	.LFB4:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 9


 260:Generated_Source\PSoC5/EncTimer_Low.c **** 
 261:Generated_Source\PSoC5/EncTimer_Low.c **** 
 262:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_SetInterruptMode
 264:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 265:Generated_Source\PSoC5/EncTimer_Low.c **** *
 266:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 267:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/EncTimer_Low.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/EncTimer_Low.c **** *  be selected.
 270:Generated_Source\PSoC5/EncTimer_Low.c **** *
 271:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 272:Generated_Source\PSoC5/EncTimer_Low.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/EncTimer_Low.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/EncTimer_Low.c **** *
 275:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 276:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 277:Generated_Source\PSoC5/EncTimer_Low.c **** *
 278:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/EncTimer_Low.c **** {
 198              		.loc 1 280 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 7, -4
 206 0002 83B0     		sub	sp, sp, #12
 207              		.cfi_def_cfa_offset 16
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 0006 0346     		mov	r3, r0
 211 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/EncTimer_Low.c ****     EncTimer_Low_STATUS_MASK = interruptMode;
 212              		.loc 1 281 0
 213 000a 044A     		ldr	r2, .L11
 214 000c FB79     		ldrb	r3, [r7, #7]
 215 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/EncTimer_Low.c **** }
 216              		.loc 1 282 0
 217 0010 00BF     		nop
 218 0012 0C37     		adds	r7, r7, #12
 219              		.cfi_def_cfa_offset 4
 220 0014 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0016 80BC     		pop	{r7}
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 0018 7047     		bx	lr
 227              	.L12:
 228 001a 00BF     		.align	2
 229              	.L11:
 230 001c 85640040 		.word	1073767557
 231              		.cfi_endproc
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 10


 232              	.LFE4:
 233              		.size	EncTimer_Low_SetInterruptMode, .-EncTimer_Low_SetInterruptMode
 234              		.section	.text.EncTimer_Low_SoftwareCapture,"ax",%progbits
 235              		.align	2
 236              		.global	EncTimer_Low_SoftwareCapture
 237              		.thumb
 238              		.thumb_func
 239              		.type	EncTimer_Low_SoftwareCapture, %function
 240              	EncTimer_Low_SoftwareCapture:
 241              	.LFB5:
 283:Generated_Source\PSoC5/EncTimer_Low.c **** 
 284:Generated_Source\PSoC5/EncTimer_Low.c **** 
 285:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_SoftwareCapture
 287:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 288:Generated_Source\PSoC5/EncTimer_Low.c **** *
 289:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 290:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/EncTimer_Low.c **** *
 292:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 293:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 294:Generated_Source\PSoC5/EncTimer_Low.c **** *
 295:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 296:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 297:Generated_Source\PSoC5/EncTimer_Low.c **** *
 298:Generated_Source\PSoC5/EncTimer_Low.c **** * Side Effects:
 299:Generated_Source\PSoC5/EncTimer_Low.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/EncTimer_Low.c **** *
 301:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/EncTimer_Low.c **** {
 242              		.loc 1 303 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 7, -4
 250 0002 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/EncTimer_Low.c ****     #if(EncTimer_Low_UsingFixedFunction)
 306:Generated_Source\PSoC5/EncTimer_Low.c ****         (void)CY_GET_REG16(EncTimer_Low_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 308:Generated_Source\PSoC5/EncTimer_Low.c ****         (void)CY_GET_REG8(EncTimer_Low_COUNTER_LSB_PTR_8BIT);
 252              		.loc 1 308 0
 253 0004 024B     		ldr	r3, .L14
 254 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif/* (EncTimer_Low_UsingFixedFunction) */
 310:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/EncTimer_Low.c **** }
 255              		.loc 1 311 0
 256 0008 00BF     		nop
 257 000a BD46     		mov	sp, r7
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 11


 260 000c 80BC     		pop	{r7}
 261              		.cfi_restore 7
 262              		.cfi_def_cfa_offset 0
 263 000e 7047     		bx	lr
 264              	.L15:
 265              		.align	2
 266              	.L14:
 267 0010 04640040 		.word	1073767428
 268              		.cfi_endproc
 269              	.LFE5:
 270              		.size	EncTimer_Low_SoftwareCapture, .-EncTimer_Low_SoftwareCapture
 271              		.section	.text.EncTimer_Low_ReadStatusRegister,"ax",%progbits
 272              		.align	2
 273              		.global	EncTimer_Low_ReadStatusRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	EncTimer_Low_ReadStatusRegister, %function
 277              	EncTimer_Low_ReadStatusRegister:
 278              	.LFB6:
 312:Generated_Source\PSoC5/EncTimer_Low.c **** 
 313:Generated_Source\PSoC5/EncTimer_Low.c **** 
 314:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ReadStatusRegister
 316:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 317:Generated_Source\PSoC5/EncTimer_Low.c **** *
 318:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 319:Generated_Source\PSoC5/EncTimer_Low.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/EncTimer_Low.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/EncTimer_Low.c **** *  be permuteable.
 322:Generated_Source\PSoC5/EncTimer_Low.c **** *
 323:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 324:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 325:Generated_Source\PSoC5/EncTimer_Low.c **** *
 326:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 327:Generated_Source\PSoC5/EncTimer_Low.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/EncTimer_Low.c **** *
 329:Generated_Source\PSoC5/EncTimer_Low.c **** * Side Effects:
 330:Generated_Source\PSoC5/EncTimer_Low.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/EncTimer_Low.c **** *
 332:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/EncTimer_Low.c **** uint8   EncTimer_Low_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/EncTimer_Low.c **** {
 279              		.loc 1 334 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/EncTimer_Low.c ****     return (EncTimer_Low_STATUS);
 289              		.loc 1 335 0
 290 0004 034B     		ldr	r3, .L18
 291 0006 1B78     		ldrb	r3, [r3]
 292 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 12


 336:Generated_Source\PSoC5/EncTimer_Low.c **** }
 293              		.loc 1 336 0
 294 000a 1846     		mov	r0, r3
 295 000c BD46     		mov	sp, r7
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 000e 80BC     		pop	{r7}
 299              		.cfi_restore 7
 300              		.cfi_def_cfa_offset 0
 301 0010 7047     		bx	lr
 302              	.L19:
 303 0012 00BF     		.align	2
 304              	.L18:
 305 0014 65640040 		.word	1073767525
 306              		.cfi_endproc
 307              	.LFE6:
 308              		.size	EncTimer_Low_ReadStatusRegister, .-EncTimer_Low_ReadStatusRegister
 309              		.section	.text.EncTimer_Low_ReadPeriod,"ax",%progbits
 310              		.align	2
 311              		.global	EncTimer_Low_ReadPeriod
 312              		.thumb
 313              		.thumb_func
 314              		.type	EncTimer_Low_ReadPeriod, %function
 315              	EncTimer_Low_ReadPeriod:
 316              	.LFB7:
 337:Generated_Source\PSoC5/EncTimer_Low.c **** 
 338:Generated_Source\PSoC5/EncTimer_Low.c **** 
 339:Generated_Source\PSoC5/EncTimer_Low.c **** #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/EncTimer_Low.c **** 
 341:Generated_Source\PSoC5/EncTimer_Low.c **** 
 342:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ReadControlRegister
 344:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 345:Generated_Source\PSoC5/EncTimer_Low.c **** *
 346:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 347:Generated_Source\PSoC5/EncTimer_Low.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/EncTimer_Low.c **** *
 349:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 350:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 351:Generated_Source\PSoC5/EncTimer_Low.c **** *
 352:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 353:Generated_Source\PSoC5/EncTimer_Low.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/EncTimer_Low.c **** *
 355:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/EncTimer_Low.c **** uint8 EncTimer_Low_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/EncTimer_Low.c **** {
 358:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/EncTimer_Low.c ****         return ((uint8)EncTimer_Low_CONTROL);
 360:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 361:Generated_Source\PSoC5/EncTimer_Low.c ****         return (0);
 362:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/EncTimer_Low.c **** }
 364:Generated_Source\PSoC5/EncTimer_Low.c **** 
 365:Generated_Source\PSoC5/EncTimer_Low.c **** 
 366:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_WriteControlRegister
 368:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 13


 369:Generated_Source\PSoC5/EncTimer_Low.c **** *
 370:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 371:Generated_Source\PSoC5/EncTimer_Low.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/EncTimer_Low.c **** *
 373:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 374:Generated_Source\PSoC5/EncTimer_Low.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/EncTimer_Low.c **** *
 376:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 377:Generated_Source\PSoC5/EncTimer_Low.c **** *
 378:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/EncTimer_Low.c **** {
 381:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL = control;
 383:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 384:Generated_Source\PSoC5/EncTimer_Low.c ****         control = 0u;
 385:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/EncTimer_Low.c **** }
 387:Generated_Source\PSoC5/EncTimer_Low.c **** 
 388:Generated_Source\PSoC5/EncTimer_Low.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/EncTimer_Low.c **** 
 390:Generated_Source\PSoC5/EncTimer_Low.c **** 
 391:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ReadPeriod
 393:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 394:Generated_Source\PSoC5/EncTimer_Low.c **** *
 395:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 396:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/EncTimer_Low.c **** *
 398:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 399:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 400:Generated_Source\PSoC5/EncTimer_Low.c **** *
 401:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 402:Generated_Source\PSoC5/EncTimer_Low.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/EncTimer_Low.c **** *
 404:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/EncTimer_Low.c **** uint16 EncTimer_Low_ReadPeriod(void) 
 406:Generated_Source\PSoC5/EncTimer_Low.c **** {
 317              		.loc 1 406 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/EncTimer_Low.c ****    #if(EncTimer_Low_UsingFixedFunction)
 408:Generated_Source\PSoC5/EncTimer_Low.c ****        return ((uint16)CY_GET_REG16(EncTimer_Low_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/EncTimer_Low.c ****    #else
 410:Generated_Source\PSoC5/EncTimer_Low.c ****        return (CY_GET_REG16(EncTimer_Low_PERIOD_LSB_PTR));
 327              		.loc 1 410 0
 328 0004 034B     		ldr	r3, .L22
 329 0006 1B88     		ldrh	r3, [r3]	@ movhi
 330 0008 9BB2     		uxth	r3, r3
 411:Generated_Source\PSoC5/EncTimer_Low.c ****    #endif /* (EncTimer_Low_UsingFixedFunction) */
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 14


 412:Generated_Source\PSoC5/EncTimer_Low.c **** }
 331              		.loc 1 412 0
 332 000a 1846     		mov	r0, r3
 333 000c BD46     		mov	sp, r7
 334              		.cfi_def_cfa_register 13
 335              		@ sp needed
 336 000e 80BC     		pop	{r7}
 337              		.cfi_restore 7
 338              		.cfi_def_cfa_offset 0
 339 0010 7047     		bx	lr
 340              	.L23:
 341 0012 00BF     		.align	2
 342              	.L22:
 343 0014 48680040 		.word	1073768520
 344              		.cfi_endproc
 345              	.LFE7:
 346              		.size	EncTimer_Low_ReadPeriod, .-EncTimer_Low_ReadPeriod
 347              		.section	.text.EncTimer_Low_WritePeriod,"ax",%progbits
 348              		.align	2
 349              		.global	EncTimer_Low_WritePeriod
 350              		.thumb
 351              		.thumb_func
 352              		.type	EncTimer_Low_WritePeriod, %function
 353              	EncTimer_Low_WritePeriod:
 354              	.LFB8:
 413:Generated_Source\PSoC5/EncTimer_Low.c **** 
 414:Generated_Source\PSoC5/EncTimer_Low.c **** 
 415:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_WritePeriod
 417:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 418:Generated_Source\PSoC5/EncTimer_Low.c **** *
 419:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 420:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/EncTimer_Low.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/EncTimer_Low.c **** *
 423:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 424:Generated_Source\PSoC5/EncTimer_Low.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/EncTimer_Low.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/EncTimer_Low.c **** *
 427:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 428:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 429:Generated_Source\PSoC5/EncTimer_Low.c **** *
 430:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/EncTimer_Low.c **** {
 355              		.loc 1 432 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 16
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 15


 367 0006 0346     		mov	r3, r0
 368 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 433:Generated_Source\PSoC5/EncTimer_Low.c ****     #if(EncTimer_Low_UsingFixedFunction)
 434:Generated_Source\PSoC5/EncTimer_Low.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/EncTimer_Low.c ****         CY_SET_REG16(EncTimer_Low_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 437:Generated_Source\PSoC5/EncTimer_Low.c ****         CY_SET_REG16(EncTimer_Low_PERIOD_LSB_PTR, period);
 369              		.loc 1 437 0
 370 000a 044A     		ldr	r2, .L25
 371 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 372 000e 1380     		strh	r3, [r2]	@ movhi
 438:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/EncTimer_Low.c **** }
 373              		.loc 1 439 0
 374 0010 00BF     		nop
 375 0012 0C37     		adds	r7, r7, #12
 376              		.cfi_def_cfa_offset 4
 377 0014 BD46     		mov	sp, r7
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 0016 80BC     		pop	{r7}
 381              		.cfi_restore 7
 382              		.cfi_def_cfa_offset 0
 383 0018 7047     		bx	lr
 384              	.L26:
 385 001a 00BF     		.align	2
 386              	.L25:
 387 001c 48680040 		.word	1073768520
 388              		.cfi_endproc
 389              	.LFE8:
 390              		.size	EncTimer_Low_WritePeriod, .-EncTimer_Low_WritePeriod
 391              		.section	.text.EncTimer_Low_ReadCapture,"ax",%progbits
 392              		.align	2
 393              		.global	EncTimer_Low_ReadCapture
 394              		.thumb
 395              		.thumb_func
 396              		.type	EncTimer_Low_ReadCapture, %function
 397              	EncTimer_Low_ReadCapture:
 398              	.LFB9:
 440:Generated_Source\PSoC5/EncTimer_Low.c **** 
 441:Generated_Source\PSoC5/EncTimer_Low.c **** 
 442:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ReadCapture
 444:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 445:Generated_Source\PSoC5/EncTimer_Low.c **** *
 446:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 447:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/EncTimer_Low.c **** *
 449:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 450:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 451:Generated_Source\PSoC5/EncTimer_Low.c **** *
 452:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 453:Generated_Source\PSoC5/EncTimer_Low.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/EncTimer_Low.c **** *
 455:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/EncTimer_Low.c **** uint16 EncTimer_Low_ReadCapture(void) 
 457:Generated_Source\PSoC5/EncTimer_Low.c **** {
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 16


 399              		.loc 1 457 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404 0000 80B4     		push	{r7}
 405              		.cfi_def_cfa_offset 4
 406              		.cfi_offset 7, -4
 407 0002 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/EncTimer_Low.c ****    #if(EncTimer_Low_UsingFixedFunction)
 459:Generated_Source\PSoC5/EncTimer_Low.c ****        return ((uint16)CY_GET_REG16(EncTimer_Low_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/EncTimer_Low.c ****    #else
 461:Generated_Source\PSoC5/EncTimer_Low.c ****        return (CY_GET_REG16(EncTimer_Low_CAPTURE_LSB_PTR));
 409              		.loc 1 461 0
 410 0004 034B     		ldr	r3, .L29
 411 0006 1B88     		ldrh	r3, [r3]	@ movhi
 412 0008 9BB2     		uxth	r3, r3
 462:Generated_Source\PSoC5/EncTimer_Low.c ****    #endif /* (EncTimer_Low_UsingFixedFunction) */
 463:Generated_Source\PSoC5/EncTimer_Low.c **** }
 413              		.loc 1 463 0
 414 000a 1846     		mov	r0, r3
 415 000c BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 000e 80BC     		pop	{r7}
 419              		.cfi_restore 7
 420              		.cfi_def_cfa_offset 0
 421 0010 7047     		bx	lr
 422              	.L30:
 423 0012 00BF     		.align	2
 424              	.L29:
 425 0014 88680040 		.word	1073768584
 426              		.cfi_endproc
 427              	.LFE9:
 428              		.size	EncTimer_Low_ReadCapture, .-EncTimer_Low_ReadCapture
 429              		.section	.text.EncTimer_Low_WriteCounter,"ax",%progbits
 430              		.align	2
 431              		.global	EncTimer_Low_WriteCounter
 432              		.thumb
 433              		.thumb_func
 434              		.type	EncTimer_Low_WriteCounter, %function
 435              	EncTimer_Low_WriteCounter:
 436              	.LFB10:
 464:Generated_Source\PSoC5/EncTimer_Low.c **** 
 465:Generated_Source\PSoC5/EncTimer_Low.c **** 
 466:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_WriteCounter
 468:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 469:Generated_Source\PSoC5/EncTimer_Low.c **** *
 470:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 471:Generated_Source\PSoC5/EncTimer_Low.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/EncTimer_Low.c **** *
 473:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 474:Generated_Source\PSoC5/EncTimer_Low.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/EncTimer_Low.c **** *
 476:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 17


 477:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 478:Generated_Source\PSoC5/EncTimer_Low.c **** *
 479:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/EncTimer_Low.c **** {
 437              		.loc 1 481 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0000 80B4     		push	{r7}
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 7, -4
 445 0002 83B0     		sub	sp, sp, #12
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 0346     		mov	r3, r0
 450 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 482:Generated_Source\PSoC5/EncTimer_Low.c ****    #if(EncTimer_Low_UsingFixedFunction)
 483:Generated_Source\PSoC5/EncTimer_Low.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/EncTimer_Low.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/EncTimer_Low.c ****          */
 486:Generated_Source\PSoC5/EncTimer_Low.c ****         CY_SET_REG16(EncTimer_Low_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/EncTimer_Low.c ****         
 488:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 489:Generated_Source\PSoC5/EncTimer_Low.c ****         CY_SET_REG16(EncTimer_Low_COUNTER_LSB_PTR, counter);
 451              		.loc 1 489 0
 452 000a 044A     		ldr	r2, .L32
 453 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 454 000e 1380     		strh	r3, [r2]	@ movhi
 490:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/EncTimer_Low.c **** }
 455              		.loc 1 491 0
 456 0010 00BF     		nop
 457 0012 0C37     		adds	r7, r7, #12
 458              		.cfi_def_cfa_offset 4
 459 0014 BD46     		mov	sp, r7
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 0016 80BC     		pop	{r7}
 463              		.cfi_restore 7
 464              		.cfi_def_cfa_offset 0
 465 0018 7047     		bx	lr
 466              	.L33:
 467 001a 00BF     		.align	2
 468              	.L32:
 469 001c 08680040 		.word	1073768456
 470              		.cfi_endproc
 471              	.LFE10:
 472              		.size	EncTimer_Low_WriteCounter, .-EncTimer_Low_WriteCounter
 473              		.section	.text.EncTimer_Low_ReadCounter,"ax",%progbits
 474              		.align	2
 475              		.global	EncTimer_Low_ReadCounter
 476              		.thumb
 477              		.thumb_func
 478              		.type	EncTimer_Low_ReadCounter, %function
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 18


 479              	EncTimer_Low_ReadCounter:
 480              	.LFB11:
 492:Generated_Source\PSoC5/EncTimer_Low.c **** 
 493:Generated_Source\PSoC5/EncTimer_Low.c **** 
 494:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ReadCounter
 496:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 497:Generated_Source\PSoC5/EncTimer_Low.c **** *
 498:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 499:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/EncTimer_Low.c **** *
 501:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 502:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 503:Generated_Source\PSoC5/EncTimer_Low.c **** *
 504:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 505:Generated_Source\PSoC5/EncTimer_Low.c **** *  Present compare value.
 506:Generated_Source\PSoC5/EncTimer_Low.c **** *
 507:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/EncTimer_Low.c **** uint16 EncTimer_Low_ReadCounter(void) 
 509:Generated_Source\PSoC5/EncTimer_Low.c **** {
 481              		.loc 1 509 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 7, -4
 489 0002 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/EncTimer_Low.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/EncTimer_Low.c ****     #if(EncTimer_Low_UsingFixedFunction)
 514:Generated_Source\PSoC5/EncTimer_Low.c ****         (void)CY_GET_REG16(EncTimer_Low_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 516:Generated_Source\PSoC5/EncTimer_Low.c ****         (void)CY_GET_REG8(EncTimer_Low_COUNTER_LSB_PTR_8BIT);
 491              		.loc 1 516 0
 492 0004 044B     		ldr	r3, .L36
 493 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif/* (EncTimer_Low_UsingFixedFunction) */
 518:Generated_Source\PSoC5/EncTimer_Low.c **** 
 519:Generated_Source\PSoC5/EncTimer_Low.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/EncTimer_Low.c ****     #if(EncTimer_Low_UsingFixedFunction)
 521:Generated_Source\PSoC5/EncTimer_Low.c ****         return ((uint16)CY_GET_REG16(EncTimer_Low_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/EncTimer_Low.c ****     #else
 523:Generated_Source\PSoC5/EncTimer_Low.c ****         return (CY_GET_REG16(EncTimer_Low_CAPTURE_LSB_PTR));
 494              		.loc 1 523 0
 495 0008 044B     		ldr	r3, .L36+4
 496 000a 1B88     		ldrh	r3, [r3]	@ movhi
 497 000c 9BB2     		uxth	r3, r3
 524:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* (EncTimer_Low_UsingFixedFunction) */
 525:Generated_Source\PSoC5/EncTimer_Low.c **** }
 498              		.loc 1 525 0
 499 000e 1846     		mov	r0, r3
 500 0010 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 19


 502              		@ sp needed
 503 0012 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 0014 7047     		bx	lr
 507              	.L37:
 508 0016 00BF     		.align	2
 509              	.L36:
 510 0018 04640040 		.word	1073767428
 511 001c 88680040 		.word	1073768584
 512              		.cfi_endproc
 513              	.LFE11:
 514              		.size	EncTimer_Low_ReadCounter, .-EncTimer_Low_ReadCounter
 515              		.section	.text.EncTimer_Low_SetInterruptCount,"ax",%progbits
 516              		.align	2
 517              		.global	EncTimer_Low_SetInterruptCount
 518              		.thumb
 519              		.thumb_func
 520              		.type	EncTimer_Low_SetInterruptCount, %function
 521              	EncTimer_Low_SetInterruptCount:
 522              	.LFB12:
 526:Generated_Source\PSoC5/EncTimer_Low.c **** 
 527:Generated_Source\PSoC5/EncTimer_Low.c **** 
 528:Generated_Source\PSoC5/EncTimer_Low.c **** #if(!EncTimer_Low_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/EncTimer_Low.c **** 
 530:Generated_Source\PSoC5/EncTimer_Low.c ****     
 531:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/EncTimer_Low.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/EncTimer_Low.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/EncTimer_Low.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/EncTimer_Low.c **** 
 536:Generated_Source\PSoC5/EncTimer_Low.c **** 
 537:Generated_Source\PSoC5/EncTimer_Low.c **** #if (EncTimer_Low_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/EncTimer_Low.c **** 
 539:Generated_Source\PSoC5/EncTimer_Low.c **** 
 540:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_SetCaptureMode
 542:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 543:Generated_Source\PSoC5/EncTimer_Low.c **** *
 544:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 545:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/EncTimer_Low.c **** *
 547:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 548:Generated_Source\PSoC5/EncTimer_Low.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/EncTimer_Low.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/EncTimer_Low.c **** *  #define EncTimer_Low__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/EncTimer_Low.c **** #define EncTimer_Low__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/EncTimer_Low.c **** #define EncTimer_Low__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/EncTimer_Low.c **** #define EncTimer_Low__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/EncTimer_Low.c **** #define EncTimer_Low__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/EncTimer_Low.c ****  identifiers
 556:Generated_Source\PSoC5/EncTimer_Low.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/EncTimer_Low.c **** *  EncTimer_Low__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/EncTimer_Low.c **** *  EncTimer_Low__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/EncTimer_Low.c **** *  EncTimer_Low__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/EncTimer_Low.c **** *  EncTimer_Low__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/EncTimer_Low.c **** *
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 20


 562:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 563:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 564:Generated_Source\PSoC5/EncTimer_Low.c **** *
 565:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/EncTimer_Low.c **** {
 568:Generated_Source\PSoC5/EncTimer_Low.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/EncTimer_Low.c ****     captureMode = ((uint8)((uint8)captureMode << EncTimer_Low_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/EncTimer_Low.c ****     captureMode &= (EncTimer_Low_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/EncTimer_Low.c **** 
 572:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL &= ((uint8)(~EncTimer_Low_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/EncTimer_Low.c **** 
 576:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/EncTimer_Low.c **** }
 580:Generated_Source\PSoC5/EncTimer_Low.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/EncTimer_Low.c **** 
 582:Generated_Source\PSoC5/EncTimer_Low.c **** 
 583:Generated_Source\PSoC5/EncTimer_Low.c **** #if (EncTimer_Low_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/EncTimer_Low.c **** 
 585:Generated_Source\PSoC5/EncTimer_Low.c **** 
 586:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_SetTriggerMode
 588:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 589:Generated_Source\PSoC5/EncTimer_Low.c **** *
 590:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 591:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/EncTimer_Low.c **** *
 593:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 594:Generated_Source\PSoC5/EncTimer_Low.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/EncTimer_Low.c ****     #define EncTimer_Low__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/EncTimer_Low.c ****     #define EncTimer_Low__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/EncTimer_Low.c ****     #define EncTimer_Low__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/EncTimer_Low.c ****     #define EncTimer_Low__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/EncTimer_Low.c ****     #define EncTimer_Low__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/EncTimer_Low.c **** *
 601:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 602:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 603:Generated_Source\PSoC5/EncTimer_Low.c **** *
 604:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/EncTimer_Low.c **** {
 607:Generated_Source\PSoC5/EncTimer_Low.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/EncTimer_Low.c ****     triggerMode &= EncTimer_Low_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/EncTimer_Low.c **** 
 610:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remov
 611:Generated_Source\PSoC5/EncTimer_Low.c ****     
 612:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL &= ((uint8)(~EncTimer_Low_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/EncTimer_Low.c **** 
 615:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL |= (triggerMode | EncTimer_Low__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/EncTimer_Low.c **** }
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 21


 619:Generated_Source\PSoC5/EncTimer_Low.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/EncTimer_Low.c **** 
 621:Generated_Source\PSoC5/EncTimer_Low.c **** #if (EncTimer_Low_EnableTriggerMode)
 622:Generated_Source\PSoC5/EncTimer_Low.c **** 
 623:Generated_Source\PSoC5/EncTimer_Low.c **** 
 624:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_EnableTrigger
 626:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 627:Generated_Source\PSoC5/EncTimer_Low.c **** *
 628:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 629:Generated_Source\PSoC5/EncTimer_Low.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/EncTimer_Low.c **** *
 631:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 632:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 633:Generated_Source\PSoC5/EncTimer_Low.c **** *
 634:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 635:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 636:Generated_Source\PSoC5/EncTimer_Low.c **** *
 637:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_EnableTrigger(void) 
 639:Generated_Source\PSoC5/EncTimer_Low.c **** {
 640:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remov
 641:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL |= EncTimer_Low_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/EncTimer_Low.c **** }
 644:Generated_Source\PSoC5/EncTimer_Low.c **** 
 645:Generated_Source\PSoC5/EncTimer_Low.c **** 
 646:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_DisableTrigger
 648:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 649:Generated_Source\PSoC5/EncTimer_Low.c **** *
 650:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 651:Generated_Source\PSoC5/EncTimer_Low.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/EncTimer_Low.c **** *
 653:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 654:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 655:Generated_Source\PSoC5/EncTimer_Low.c **** *
 656:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 657:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 658:Generated_Source\PSoC5/EncTimer_Low.c **** *
 659:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_DisableTrigger(void) 
 661:Generated_Source\PSoC5/EncTimer_Low.c **** {
 662:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remo
 663:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL &= ((uint8)(~EncTimer_Low_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/EncTimer_Low.c **** }
 666:Generated_Source\PSoC5/EncTimer_Low.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/EncTimer_Low.c **** 
 668:Generated_Source\PSoC5/EncTimer_Low.c **** #if(EncTimer_Low_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/EncTimer_Low.c **** 
 670:Generated_Source\PSoC5/EncTimer_Low.c **** 
 671:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_SetInterruptCount
 673:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 674:Generated_Source\PSoC5/EncTimer_Low.c **** *
 675:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 22


 676:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/EncTimer_Low.c **** *
 678:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 679:Generated_Source\PSoC5/EncTimer_Low.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/EncTimer_Low.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/EncTimer_Low.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/EncTimer_Low.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/EncTimer_Low.c **** *
 684:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 685:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 686:Generated_Source\PSoC5/EncTimer_Low.c **** *
 687:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/EncTimer_Low.c **** {
 523              		.loc 1 689 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 0002 83B0     		sub	sp, sp, #12
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 0346     		mov	r3, r0
 536 0008 FB71     		strb	r3, [r7, #7]
 690:Generated_Source\PSoC5/EncTimer_Low.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/EncTimer_Low.c ****     interruptCount &= EncTimer_Low_CTRL_INTCNT_MASK;
 537              		.loc 1 691 0
 538 000a FB79     		ldrb	r3, [r7, #7]
 539 000c 03F00303 		and	r3, r3, #3
 540 0010 FB71     		strb	r3, [r7, #7]
 692:Generated_Source\PSoC5/EncTimer_Low.c **** 
 693:Generated_Source\PSoC5/EncTimer_Low.c ****     #if (!EncTimer_Low_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL &= ((uint8)(~EncTimer_Low_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/EncTimer_Low.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/EncTimer_Low.c ****         EncTimer_Low_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/EncTimer_Low.c ****     #endif /* (!EncTimer_Low_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/EncTimer_Low.c **** }
 541              		.loc 1 699 0
 542 0012 00BF     		nop
 543 0014 0C37     		adds	r7, r7, #12
 544              		.cfi_def_cfa_offset 4
 545 0016 BD46     		mov	sp, r7
 546              		.cfi_def_cfa_register 13
 547              		@ sp needed
 548 0018 80BC     		pop	{r7}
 549              		.cfi_restore 7
 550              		.cfi_def_cfa_offset 0
 551 001a 7047     		bx	lr
 552              		.cfi_endproc
 553              	.LFE12:
 554              		.size	EncTimer_Low_SetInterruptCount, .-EncTimer_Low_SetInterruptCount
 555              		.section	.text.EncTimer_Low_ClearFIFO,"ax",%progbits
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 23


 556              		.align	2
 557              		.global	EncTimer_Low_ClearFIFO
 558              		.thumb
 559              		.thumb_func
 560              		.type	EncTimer_Low_ClearFIFO, %function
 561              	EncTimer_Low_ClearFIFO:
 562              	.LFB13:
 700:Generated_Source\PSoC5/EncTimer_Low.c **** #endif /* EncTimer_Low_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/EncTimer_Low.c **** 
 702:Generated_Source\PSoC5/EncTimer_Low.c **** 
 703:Generated_Source\PSoC5/EncTimer_Low.c **** #if (EncTimer_Low_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/EncTimer_Low.c **** 
 705:Generated_Source\PSoC5/EncTimer_Low.c **** 
 706:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_SetCaptureCount
 708:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 709:Generated_Source\PSoC5/EncTimer_Low.c **** *
 710:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 711:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/EncTimer_Low.c **** *
 713:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 714:Generated_Source\PSoC5/EncTimer_Low.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/EncTimer_Low.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/EncTimer_Low.c **** *                captures.
 717:Generated_Source\PSoC5/EncTimer_Low.c **** *
 718:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 719:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 720:Generated_Source\PSoC5/EncTimer_Low.c **** *
 721:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/EncTimer_Low.c **** {
 724:Generated_Source\PSoC5/EncTimer_Low.c ****     EncTimer_Low_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/EncTimer_Low.c **** }
 726:Generated_Source\PSoC5/EncTimer_Low.c **** 
 727:Generated_Source\PSoC5/EncTimer_Low.c **** 
 728:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ReadCaptureCount
 730:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 731:Generated_Source\PSoC5/EncTimer_Low.c **** *
 732:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 733:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/EncTimer_Low.c **** *
 735:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 736:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 737:Generated_Source\PSoC5/EncTimer_Low.c **** *
 738:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 739:Generated_Source\PSoC5/EncTimer_Low.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/EncTimer_Low.c **** *
 741:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/EncTimer_Low.c **** uint8 EncTimer_Low_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/EncTimer_Low.c **** {
 744:Generated_Source\PSoC5/EncTimer_Low.c ****     return ((uint8)EncTimer_Low_CAP_COUNT);
 745:Generated_Source\PSoC5/EncTimer_Low.c **** }
 746:Generated_Source\PSoC5/EncTimer_Low.c **** #endif /* EncTimer_Low_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/EncTimer_Low.c **** 
 748:Generated_Source\PSoC5/EncTimer_Low.c **** 
 749:Generated_Source\PSoC5/EncTimer_Low.c **** /*******************************************************************************
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 24


 750:Generated_Source\PSoC5/EncTimer_Low.c **** * Function Name: EncTimer_Low_ClearFIFO
 751:Generated_Source\PSoC5/EncTimer_Low.c **** ********************************************************************************
 752:Generated_Source\PSoC5/EncTimer_Low.c **** *
 753:Generated_Source\PSoC5/EncTimer_Low.c **** * Summary:
 754:Generated_Source\PSoC5/EncTimer_Low.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/EncTimer_Low.c **** *
 756:Generated_Source\PSoC5/EncTimer_Low.c **** * Parameters:
 757:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 758:Generated_Source\PSoC5/EncTimer_Low.c **** *
 759:Generated_Source\PSoC5/EncTimer_Low.c **** * Return:
 760:Generated_Source\PSoC5/EncTimer_Low.c **** *  void
 761:Generated_Source\PSoC5/EncTimer_Low.c **** *
 762:Generated_Source\PSoC5/EncTimer_Low.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/EncTimer_Low.c **** void EncTimer_Low_ClearFIFO(void) 
 764:Generated_Source\PSoC5/EncTimer_Low.c **** {
 563              		.loc 1 764 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC5/EncTimer_Low.c ****     while(0u != (EncTimer_Low_ReadStatusRegister() & EncTimer_Low_STATUS_FIFONEMP))
 573              		.loc 1 765 0
 574 0004 01E0     		b	.L40
 575              	.L41:
 766:Generated_Source\PSoC5/EncTimer_Low.c ****     {
 767:Generated_Source\PSoC5/EncTimer_Low.c ****         (void)EncTimer_Low_ReadCapture();
 576              		.loc 1 767 0
 577 0006 FFF7FEFF 		bl	EncTimer_Low_ReadCapture
 578              	.L40:
 765:Generated_Source\PSoC5/EncTimer_Low.c ****     while(0u != (EncTimer_Low_ReadStatusRegister() & EncTimer_Low_STATUS_FIFONEMP))
 579              		.loc 1 765 0
 580 000a FFF7FEFF 		bl	EncTimer_Low_ReadStatusRegister
 581 000e 0346     		mov	r3, r0
 582 0010 03F00803 		and	r3, r3, #8
 583 0014 002B     		cmp	r3, #0
 584 0016 F6D1     		bne	.L41
 768:Generated_Source\PSoC5/EncTimer_Low.c ****     }
 769:Generated_Source\PSoC5/EncTimer_Low.c **** }
 585              		.loc 1 769 0
 586 0018 00BF     		nop
 587 001a 80BD     		pop	{r7, pc}
 588              		.cfi_endproc
 589              	.LFE13:
 590              		.size	EncTimer_Low_ClearFIFO, .-EncTimer_Low_ClearFIFO
 591              		.text
 592              	.Letext0:
 593              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 594              		.section	.debug_info,"",%progbits
 595              	.Ldebug_info0:
 596 0000 41020000 		.4byte	0x241
 597 0004 0400     		.2byte	0x4
 598 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 25


 599 000a 04       		.byte	0x4
 600 000b 01       		.uleb128 0x1
 601 000c 5A000000 		.4byte	.LASF36
 602 0010 0C       		.byte	0xc
 603 0011 0C020000 		.4byte	.LASF37
 604 0015 44020000 		.4byte	.LASF38
 605 0019 00000000 		.4byte	.Ldebug_ranges0+0
 606 001d 00000000 		.4byte	0
 607 0021 00000000 		.4byte	.Ldebug_line0
 608 0025 02       		.uleb128 0x2
 609 0026 01       		.byte	0x1
 610 0027 06       		.byte	0x6
 611 0028 37030000 		.4byte	.LASF0
 612 002c 02       		.uleb128 0x2
 613 002d 01       		.byte	0x1
 614 002e 08       		.byte	0x8
 615 002f 52010000 		.4byte	.LASF1
 616 0033 02       		.uleb128 0x2
 617 0034 02       		.byte	0x2
 618 0035 05       		.byte	0x5
 619 0036 C4020000 		.4byte	.LASF2
 620 003a 02       		.uleb128 0x2
 621 003b 02       		.byte	0x2
 622 003c 07       		.byte	0x7
 623 003d 02010000 		.4byte	.LASF3
 624 0041 02       		.uleb128 0x2
 625 0042 04       		.byte	0x4
 626 0043 05       		.byte	0x5
 627 0044 08030000 		.4byte	.LASF4
 628 0048 02       		.uleb128 0x2
 629 0049 04       		.byte	0x4
 630 004a 07       		.byte	0x7
 631 004b 7E010000 		.4byte	.LASF5
 632 004f 02       		.uleb128 0x2
 633 0050 08       		.byte	0x8
 634 0051 05       		.byte	0x5
 635 0052 A8020000 		.4byte	.LASF6
 636 0056 02       		.uleb128 0x2
 637 0057 08       		.byte	0x8
 638 0058 07       		.byte	0x7
 639 0059 F5010000 		.4byte	.LASF7
 640 005d 03       		.uleb128 0x3
 641 005e 04       		.byte	0x4
 642 005f 05       		.byte	0x5
 643 0060 696E7400 		.ascii	"int\000"
 644 0064 02       		.uleb128 0x2
 645 0065 04       		.byte	0x4
 646 0066 07       		.byte	0x7
 647 0067 E8010000 		.4byte	.LASF8
 648 006b 04       		.uleb128 0x4
 649 006c 90010000 		.4byte	.LASF9
 650 0070 02       		.byte	0x2
 651 0071 E401     		.2byte	0x1e4
 652 0073 2C000000 		.4byte	0x2c
 653 0077 04       		.uleb128 0x4
 654 0078 E1010000 		.4byte	.LASF10
 655 007c 02       		.byte	0x2
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 26


 656 007d E501     		.2byte	0x1e5
 657 007f 3A000000 		.4byte	0x3a
 658 0083 02       		.uleb128 0x2
 659 0084 04       		.byte	0x4
 660 0085 04       		.byte	0x4
 661 0086 44010000 		.4byte	.LASF11
 662 008a 02       		.uleb128 0x2
 663 008b 08       		.byte	0x8
 664 008c 04       		.byte	0x4
 665 008d 2E010000 		.4byte	.LASF12
 666 0091 02       		.uleb128 0x2
 667 0092 01       		.byte	0x1
 668 0093 08       		.byte	0x8
 669 0094 11030000 		.4byte	.LASF13
 670 0098 04       		.uleb128 0x4
 671 0099 60010000 		.4byte	.LASF14
 672 009d 02       		.byte	0x2
 673 009e 8E02     		.2byte	0x28e
 674 00a0 A4000000 		.4byte	0xa4
 675 00a4 05       		.uleb128 0x5
 676 00a5 6B000000 		.4byte	0x6b
 677 00a9 04       		.uleb128 0x4
 678 00aa 00000000 		.4byte	.LASF15
 679 00ae 02       		.byte	0x2
 680 00af 8F02     		.2byte	0x28f
 681 00b1 B5000000 		.4byte	0xb5
 682 00b5 05       		.uleb128 0x5
 683 00b6 77000000 		.4byte	0x77
 684 00ba 02       		.uleb128 0x2
 685 00bb 08       		.byte	0x8
 686 00bc 04       		.byte	0x4
 687 00bd 16030000 		.4byte	.LASF16
 688 00c1 02       		.uleb128 0x2
 689 00c2 04       		.byte	0x4
 690 00c3 07       		.byte	0x7
 691 00c4 9F020000 		.4byte	.LASF17
 692 00c8 06       		.uleb128 0x6
 693 00c9 32020000 		.4byte	.LASF21
 694 00cd 01       		.byte	0x1
 695 00ce 2B       		.byte	0x2b
 696 00cf 00000000 		.4byte	.LFB0
 697 00d3 4C000000 		.4byte	.LFE0-.LFB0
 698 00d7 01       		.uleb128 0x1
 699 00d8 9C       		.byte	0x9c
 700 00d9 EC000000 		.4byte	0xec
 701 00dd 07       		.uleb128 0x7
 702 00de CE020000 		.4byte	.LASF39
 703 00e2 01       		.byte	0x1
 704 00e3 2F       		.byte	0x2f
 705 00e4 6B000000 		.4byte	0x6b
 706 00e8 02       		.uleb128 0x2
 707 00e9 91       		.byte	0x91
 708 00ea 77       		.sleb128 -9
 709 00eb 00       		.byte	0
 710 00ec 08       		.uleb128 0x8
 711 00ed 96010000 		.4byte	.LASF18
 712 00f1 01       		.byte	0x1
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 27


 713 00f2 B4       		.byte	0xb4
 714 00f3 00000000 		.4byte	.LFB1
 715 00f7 0C000000 		.4byte	.LFE1-.LFB1
 716 00fb 01       		.uleb128 0x1
 717 00fc 9C       		.byte	0x9c
 718 00fd 09       		.uleb128 0x9
 719 00fe E8000000 		.4byte	.LASF19
 720 0102 01       		.byte	0x1
 721 0103 D7       		.byte	0xd7
 722 0104 00000000 		.4byte	.LFB2
 723 0108 24000000 		.4byte	.LFE2-.LFB2
 724 010c 01       		.uleb128 0x1
 725 010d 9C       		.byte	0x9c
 726 010e 08       		.uleb128 0x8
 727 010f 43030000 		.4byte	.LASF20
 728 0113 01       		.byte	0x1
 729 0114 F7       		.byte	0xf7
 730 0115 00000000 		.4byte	.LFB3
 731 0119 0C000000 		.4byte	.LFE3-.LFB3
 732 011d 01       		.uleb128 0x1
 733 011e 9C       		.byte	0x9c
 734 011f 0A       		.uleb128 0xa
 735 0120 EA020000 		.4byte	.LASF22
 736 0124 01       		.byte	0x1
 737 0125 1701     		.2byte	0x117
 738 0127 00000000 		.4byte	.LFB4
 739 012b 20000000 		.4byte	.LFE4-.LFB4
 740 012f 01       		.uleb128 0x1
 741 0130 9C       		.byte	0x9c
 742 0131 45010000 		.4byte	0x145
 743 0135 0B       		.uleb128 0xb
 744 0136 B6020000 		.4byte	.LASF27
 745 013a 01       		.byte	0x1
 746 013b 1701     		.2byte	0x117
 747 013d 6B000000 		.4byte	0x6b
 748 0141 02       		.uleb128 0x2
 749 0142 91       		.byte	0x91
 750 0143 77       		.sleb128 -9
 751 0144 00       		.byte	0
 752 0145 0C       		.uleb128 0xc
 753 0146 1E000000 		.4byte	.LASF23
 754 014a 01       		.byte	0x1
 755 014b 2E01     		.2byte	0x12e
 756 014d 00000000 		.4byte	.LFB5
 757 0151 14000000 		.4byte	.LFE5-.LFB5
 758 0155 01       		.uleb128 0x1
 759 0156 9C       		.byte	0x9c
 760 0157 0D       		.uleb128 0xd
 761 0158 AA010000 		.4byte	.LASF24
 762 015c 01       		.byte	0x1
 763 015d 4D01     		.2byte	0x14d
 764 015f 6B000000 		.4byte	0x6b
 765 0163 00000000 		.4byte	.LFB6
 766 0167 18000000 		.4byte	.LFE6-.LFB6
 767 016b 01       		.uleb128 0x1
 768 016c 9C       		.byte	0x9c
 769 016d 0D       		.uleb128 0xd
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 28


 770 016e 06000000 		.4byte	.LASF25
 771 0172 01       		.byte	0x1
 772 0173 9501     		.2byte	0x195
 773 0175 77000000 		.4byte	0x77
 774 0179 00000000 		.4byte	.LFB7
 775 017d 18000000 		.4byte	.LFE7-.LFB7
 776 0181 01       		.uleb128 0x1
 777 0182 9C       		.byte	0x9c
 778 0183 0A       		.uleb128 0xa
 779 0184 86020000 		.4byte	.LASF26
 780 0188 01       		.byte	0x1
 781 0189 AF01     		.2byte	0x1af
 782 018b 00000000 		.4byte	.LFB8
 783 018f 20000000 		.4byte	.LFE8-.LFB8
 784 0193 01       		.uleb128 0x1
 785 0194 9C       		.byte	0x9c
 786 0195 A9010000 		.4byte	0x1a9
 787 0199 0B       		.uleb128 0xb
 788 019a FB000000 		.4byte	.LASF28
 789 019e 01       		.byte	0x1
 790 019f AF01     		.2byte	0x1af
 791 01a1 77000000 		.4byte	0x77
 792 01a5 02       		.uleb128 0x2
 793 01a6 91       		.byte	0x91
 794 01a7 76       		.sleb128 -10
 795 01a8 00       		.byte	0
 796 01a9 0D       		.uleb128 0xd
 797 01aa 15010000 		.4byte	.LASF29
 798 01ae 01       		.byte	0x1
 799 01af C801     		.2byte	0x1c8
 800 01b1 77000000 		.4byte	0x77
 801 01b5 00000000 		.4byte	.LFB9
 802 01b9 18000000 		.4byte	.LFE9-.LFB9
 803 01bd 01       		.uleb128 0x1
 804 01be 9C       		.byte	0x9c
 805 01bf 0A       		.uleb128 0xa
 806 01c0 55030000 		.4byte	.LASF30
 807 01c4 01       		.byte	0x1
 808 01c5 E001     		.2byte	0x1e0
 809 01c7 00000000 		.4byte	.LFB10
 810 01cb 20000000 		.4byte	.LFE10-.LFB10
 811 01cf 01       		.uleb128 0x1
 812 01d0 9C       		.byte	0x9c
 813 01d1 E5010000 		.4byte	0x1e5
 814 01d5 0B       		.uleb128 0xb
 815 01d6 4A010000 		.4byte	.LASF31
 816 01da 01       		.byte	0x1
 817 01db E001     		.2byte	0x1e0
 818 01dd 77000000 		.4byte	0x77
 819 01e1 02       		.uleb128 0x2
 820 01e2 91       		.byte	0x91
 821 01e3 76       		.sleb128 -10
 822 01e4 00       		.byte	0
 823 01e5 0D       		.uleb128 0xd
 824 01e6 65010000 		.4byte	.LASF32
 825 01ea 01       		.byte	0x1
 826 01eb FC01     		.2byte	0x1fc
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 29


 827 01ed 77000000 		.4byte	0x77
 828 01f1 00000000 		.4byte	.LFB11
 829 01f5 20000000 		.4byte	.LFE11-.LFB11
 830 01f9 01       		.uleb128 0x1
 831 01fa 9C       		.byte	0x9c
 832 01fb 0A       		.uleb128 0xa
 833 01fc 3B000000 		.4byte	.LASF33
 834 0200 01       		.byte	0x1
 835 0201 B002     		.2byte	0x2b0
 836 0203 00000000 		.4byte	.LFB12
 837 0207 1C000000 		.4byte	.LFE12-.LFB12
 838 020b 01       		.uleb128 0x1
 839 020c 9C       		.byte	0x9c
 840 020d 21020000 		.4byte	0x221
 841 0211 0B       		.uleb128 0xb
 842 0212 35010000 		.4byte	.LASF34
 843 0216 01       		.byte	0x1
 844 0217 B002     		.2byte	0x2b0
 845 0219 6B000000 		.4byte	0x6b
 846 021d 02       		.uleb128 0x2
 847 021e 91       		.byte	0x91
 848 021f 77       		.sleb128 -9
 849 0220 00       		.byte	0
 850 0221 0E       		.uleb128 0xe
 851 0222 CA010000 		.4byte	.LASF35
 852 0226 01       		.byte	0x1
 853 0227 FB02     		.2byte	0x2fb
 854 0229 00000000 		.4byte	.LFB13
 855 022d 1C000000 		.4byte	.LFE13-.LFB13
 856 0231 01       		.uleb128 0x1
 857 0232 9C       		.byte	0x9c
 858 0233 0F       		.uleb128 0xf
 859 0234 22030000 		.4byte	.LASF40
 860 0238 01       		.byte	0x1
 861 0239 1A       		.byte	0x1a
 862 023a 6B000000 		.4byte	0x6b
 863 023e 05       		.uleb128 0x5
 864 023f 03       		.byte	0x3
 865 0240 00000000 		.4byte	EncTimer_Low_initVar
 866 0244 00       		.byte	0
 867              		.section	.debug_abbrev,"",%progbits
 868              	.Ldebug_abbrev0:
 869 0000 01       		.uleb128 0x1
 870 0001 11       		.uleb128 0x11
 871 0002 01       		.byte	0x1
 872 0003 25       		.uleb128 0x25
 873 0004 0E       		.uleb128 0xe
 874 0005 13       		.uleb128 0x13
 875 0006 0B       		.uleb128 0xb
 876 0007 03       		.uleb128 0x3
 877 0008 0E       		.uleb128 0xe
 878 0009 1B       		.uleb128 0x1b
 879 000a 0E       		.uleb128 0xe
 880 000b 55       		.uleb128 0x55
 881 000c 17       		.uleb128 0x17
 882 000d 11       		.uleb128 0x11
 883 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 30


 884 000f 10       		.uleb128 0x10
 885 0010 17       		.uleb128 0x17
 886 0011 00       		.byte	0
 887 0012 00       		.byte	0
 888 0013 02       		.uleb128 0x2
 889 0014 24       		.uleb128 0x24
 890 0015 00       		.byte	0
 891 0016 0B       		.uleb128 0xb
 892 0017 0B       		.uleb128 0xb
 893 0018 3E       		.uleb128 0x3e
 894 0019 0B       		.uleb128 0xb
 895 001a 03       		.uleb128 0x3
 896 001b 0E       		.uleb128 0xe
 897 001c 00       		.byte	0
 898 001d 00       		.byte	0
 899 001e 03       		.uleb128 0x3
 900 001f 24       		.uleb128 0x24
 901 0020 00       		.byte	0
 902 0021 0B       		.uleb128 0xb
 903 0022 0B       		.uleb128 0xb
 904 0023 3E       		.uleb128 0x3e
 905 0024 0B       		.uleb128 0xb
 906 0025 03       		.uleb128 0x3
 907 0026 08       		.uleb128 0x8
 908 0027 00       		.byte	0
 909 0028 00       		.byte	0
 910 0029 04       		.uleb128 0x4
 911 002a 16       		.uleb128 0x16
 912 002b 00       		.byte	0
 913 002c 03       		.uleb128 0x3
 914 002d 0E       		.uleb128 0xe
 915 002e 3A       		.uleb128 0x3a
 916 002f 0B       		.uleb128 0xb
 917 0030 3B       		.uleb128 0x3b
 918 0031 05       		.uleb128 0x5
 919 0032 49       		.uleb128 0x49
 920 0033 13       		.uleb128 0x13
 921 0034 00       		.byte	0
 922 0035 00       		.byte	0
 923 0036 05       		.uleb128 0x5
 924 0037 35       		.uleb128 0x35
 925 0038 00       		.byte	0
 926 0039 49       		.uleb128 0x49
 927 003a 13       		.uleb128 0x13
 928 003b 00       		.byte	0
 929 003c 00       		.byte	0
 930 003d 06       		.uleb128 0x6
 931 003e 2E       		.uleb128 0x2e
 932 003f 01       		.byte	0x1
 933 0040 3F       		.uleb128 0x3f
 934 0041 19       		.uleb128 0x19
 935 0042 03       		.uleb128 0x3
 936 0043 0E       		.uleb128 0xe
 937 0044 3A       		.uleb128 0x3a
 938 0045 0B       		.uleb128 0xb
 939 0046 3B       		.uleb128 0x3b
 940 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 31


 941 0048 27       		.uleb128 0x27
 942 0049 19       		.uleb128 0x19
 943 004a 11       		.uleb128 0x11
 944 004b 01       		.uleb128 0x1
 945 004c 12       		.uleb128 0x12
 946 004d 06       		.uleb128 0x6
 947 004e 40       		.uleb128 0x40
 948 004f 18       		.uleb128 0x18
 949 0050 9642     		.uleb128 0x2116
 950 0052 19       		.uleb128 0x19
 951 0053 01       		.uleb128 0x1
 952 0054 13       		.uleb128 0x13
 953 0055 00       		.byte	0
 954 0056 00       		.byte	0
 955 0057 07       		.uleb128 0x7
 956 0058 34       		.uleb128 0x34
 957 0059 00       		.byte	0
 958 005a 03       		.uleb128 0x3
 959 005b 0E       		.uleb128 0xe
 960 005c 3A       		.uleb128 0x3a
 961 005d 0B       		.uleb128 0xb
 962 005e 3B       		.uleb128 0x3b
 963 005f 0B       		.uleb128 0xb
 964 0060 49       		.uleb128 0x49
 965 0061 13       		.uleb128 0x13
 966 0062 02       		.uleb128 0x2
 967 0063 18       		.uleb128 0x18
 968 0064 00       		.byte	0
 969 0065 00       		.byte	0
 970 0066 08       		.uleb128 0x8
 971 0067 2E       		.uleb128 0x2e
 972 0068 00       		.byte	0
 973 0069 3F       		.uleb128 0x3f
 974 006a 19       		.uleb128 0x19
 975 006b 03       		.uleb128 0x3
 976 006c 0E       		.uleb128 0xe
 977 006d 3A       		.uleb128 0x3a
 978 006e 0B       		.uleb128 0xb
 979 006f 3B       		.uleb128 0x3b
 980 0070 0B       		.uleb128 0xb
 981 0071 27       		.uleb128 0x27
 982 0072 19       		.uleb128 0x19
 983 0073 11       		.uleb128 0x11
 984 0074 01       		.uleb128 0x1
 985 0075 12       		.uleb128 0x12
 986 0076 06       		.uleb128 0x6
 987 0077 40       		.uleb128 0x40
 988 0078 18       		.uleb128 0x18
 989 0079 9742     		.uleb128 0x2117
 990 007b 19       		.uleb128 0x19
 991 007c 00       		.byte	0
 992 007d 00       		.byte	0
 993 007e 09       		.uleb128 0x9
 994 007f 2E       		.uleb128 0x2e
 995 0080 00       		.byte	0
 996 0081 3F       		.uleb128 0x3f
 997 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 32


 998 0083 03       		.uleb128 0x3
 999 0084 0E       		.uleb128 0xe
 1000 0085 3A       		.uleb128 0x3a
 1001 0086 0B       		.uleb128 0xb
 1002 0087 3B       		.uleb128 0x3b
 1003 0088 0B       		.uleb128 0xb
 1004 0089 27       		.uleb128 0x27
 1005 008a 19       		.uleb128 0x19
 1006 008b 11       		.uleb128 0x11
 1007 008c 01       		.uleb128 0x1
 1008 008d 12       		.uleb128 0x12
 1009 008e 06       		.uleb128 0x6
 1010 008f 40       		.uleb128 0x40
 1011 0090 18       		.uleb128 0x18
 1012 0091 9642     		.uleb128 0x2116
 1013 0093 19       		.uleb128 0x19
 1014 0094 00       		.byte	0
 1015 0095 00       		.byte	0
 1016 0096 0A       		.uleb128 0xa
 1017 0097 2E       		.uleb128 0x2e
 1018 0098 01       		.byte	0x1
 1019 0099 3F       		.uleb128 0x3f
 1020 009a 19       		.uleb128 0x19
 1021 009b 03       		.uleb128 0x3
 1022 009c 0E       		.uleb128 0xe
 1023 009d 3A       		.uleb128 0x3a
 1024 009e 0B       		.uleb128 0xb
 1025 009f 3B       		.uleb128 0x3b
 1026 00a0 05       		.uleb128 0x5
 1027 00a1 27       		.uleb128 0x27
 1028 00a2 19       		.uleb128 0x19
 1029 00a3 11       		.uleb128 0x11
 1030 00a4 01       		.uleb128 0x1
 1031 00a5 12       		.uleb128 0x12
 1032 00a6 06       		.uleb128 0x6
 1033 00a7 40       		.uleb128 0x40
 1034 00a8 18       		.uleb128 0x18
 1035 00a9 9742     		.uleb128 0x2117
 1036 00ab 19       		.uleb128 0x19
 1037 00ac 01       		.uleb128 0x1
 1038 00ad 13       		.uleb128 0x13
 1039 00ae 00       		.byte	0
 1040 00af 00       		.byte	0
 1041 00b0 0B       		.uleb128 0xb
 1042 00b1 05       		.uleb128 0x5
 1043 00b2 00       		.byte	0
 1044 00b3 03       		.uleb128 0x3
 1045 00b4 0E       		.uleb128 0xe
 1046 00b5 3A       		.uleb128 0x3a
 1047 00b6 0B       		.uleb128 0xb
 1048 00b7 3B       		.uleb128 0x3b
 1049 00b8 05       		.uleb128 0x5
 1050 00b9 49       		.uleb128 0x49
 1051 00ba 13       		.uleb128 0x13
 1052 00bb 02       		.uleb128 0x2
 1053 00bc 18       		.uleb128 0x18
 1054 00bd 00       		.byte	0
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 33


 1055 00be 00       		.byte	0
 1056 00bf 0C       		.uleb128 0xc
 1057 00c0 2E       		.uleb128 0x2e
 1058 00c1 00       		.byte	0
 1059 00c2 3F       		.uleb128 0x3f
 1060 00c3 19       		.uleb128 0x19
 1061 00c4 03       		.uleb128 0x3
 1062 00c5 0E       		.uleb128 0xe
 1063 00c6 3A       		.uleb128 0x3a
 1064 00c7 0B       		.uleb128 0xb
 1065 00c8 3B       		.uleb128 0x3b
 1066 00c9 05       		.uleb128 0x5
 1067 00ca 27       		.uleb128 0x27
 1068 00cb 19       		.uleb128 0x19
 1069 00cc 11       		.uleb128 0x11
 1070 00cd 01       		.uleb128 0x1
 1071 00ce 12       		.uleb128 0x12
 1072 00cf 06       		.uleb128 0x6
 1073 00d0 40       		.uleb128 0x40
 1074 00d1 18       		.uleb128 0x18
 1075 00d2 9742     		.uleb128 0x2117
 1076 00d4 19       		.uleb128 0x19
 1077 00d5 00       		.byte	0
 1078 00d6 00       		.byte	0
 1079 00d7 0D       		.uleb128 0xd
 1080 00d8 2E       		.uleb128 0x2e
 1081 00d9 00       		.byte	0
 1082 00da 3F       		.uleb128 0x3f
 1083 00db 19       		.uleb128 0x19
 1084 00dc 03       		.uleb128 0x3
 1085 00dd 0E       		.uleb128 0xe
 1086 00de 3A       		.uleb128 0x3a
 1087 00df 0B       		.uleb128 0xb
 1088 00e0 3B       		.uleb128 0x3b
 1089 00e1 05       		.uleb128 0x5
 1090 00e2 27       		.uleb128 0x27
 1091 00e3 19       		.uleb128 0x19
 1092 00e4 49       		.uleb128 0x49
 1093 00e5 13       		.uleb128 0x13
 1094 00e6 11       		.uleb128 0x11
 1095 00e7 01       		.uleb128 0x1
 1096 00e8 12       		.uleb128 0x12
 1097 00e9 06       		.uleb128 0x6
 1098 00ea 40       		.uleb128 0x40
 1099 00eb 18       		.uleb128 0x18
 1100 00ec 9742     		.uleb128 0x2117
 1101 00ee 19       		.uleb128 0x19
 1102 00ef 00       		.byte	0
 1103 00f0 00       		.byte	0
 1104 00f1 0E       		.uleb128 0xe
 1105 00f2 2E       		.uleb128 0x2e
 1106 00f3 00       		.byte	0
 1107 00f4 3F       		.uleb128 0x3f
 1108 00f5 19       		.uleb128 0x19
 1109 00f6 03       		.uleb128 0x3
 1110 00f7 0E       		.uleb128 0xe
 1111 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 34


 1112 00f9 0B       		.uleb128 0xb
 1113 00fa 3B       		.uleb128 0x3b
 1114 00fb 05       		.uleb128 0x5
 1115 00fc 27       		.uleb128 0x27
 1116 00fd 19       		.uleb128 0x19
 1117 00fe 11       		.uleb128 0x11
 1118 00ff 01       		.uleb128 0x1
 1119 0100 12       		.uleb128 0x12
 1120 0101 06       		.uleb128 0x6
 1121 0102 40       		.uleb128 0x40
 1122 0103 18       		.uleb128 0x18
 1123 0104 9642     		.uleb128 0x2116
 1124 0106 19       		.uleb128 0x19
 1125 0107 00       		.byte	0
 1126 0108 00       		.byte	0
 1127 0109 0F       		.uleb128 0xf
 1128 010a 34       		.uleb128 0x34
 1129 010b 00       		.byte	0
 1130 010c 03       		.uleb128 0x3
 1131 010d 0E       		.uleb128 0xe
 1132 010e 3A       		.uleb128 0x3a
 1133 010f 0B       		.uleb128 0xb
 1134 0110 3B       		.uleb128 0x3b
 1135 0111 0B       		.uleb128 0xb
 1136 0112 49       		.uleb128 0x49
 1137 0113 13       		.uleb128 0x13
 1138 0114 3F       		.uleb128 0x3f
 1139 0115 19       		.uleb128 0x19
 1140 0116 02       		.uleb128 0x2
 1141 0117 18       		.uleb128 0x18
 1142 0118 00       		.byte	0
 1143 0119 00       		.byte	0
 1144 011a 00       		.byte	0
 1145              		.section	.debug_aranges,"",%progbits
 1146 0000 84000000 		.4byte	0x84
 1147 0004 0200     		.2byte	0x2
 1148 0006 00000000 		.4byte	.Ldebug_info0
 1149 000a 04       		.byte	0x4
 1150 000b 00       		.byte	0
 1151 000c 0000     		.2byte	0
 1152 000e 0000     		.2byte	0
 1153 0010 00000000 		.4byte	.LFB0
 1154 0014 4C000000 		.4byte	.LFE0-.LFB0
 1155 0018 00000000 		.4byte	.LFB1
 1156 001c 0C000000 		.4byte	.LFE1-.LFB1
 1157 0020 00000000 		.4byte	.LFB2
 1158 0024 24000000 		.4byte	.LFE2-.LFB2
 1159 0028 00000000 		.4byte	.LFB3
 1160 002c 0C000000 		.4byte	.LFE3-.LFB3
 1161 0030 00000000 		.4byte	.LFB4
 1162 0034 20000000 		.4byte	.LFE4-.LFB4
 1163 0038 00000000 		.4byte	.LFB5
 1164 003c 14000000 		.4byte	.LFE5-.LFB5
 1165 0040 00000000 		.4byte	.LFB6
 1166 0044 18000000 		.4byte	.LFE6-.LFB6
 1167 0048 00000000 		.4byte	.LFB7
 1168 004c 18000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 35


 1169 0050 00000000 		.4byte	.LFB8
 1170 0054 20000000 		.4byte	.LFE8-.LFB8
 1171 0058 00000000 		.4byte	.LFB9
 1172 005c 18000000 		.4byte	.LFE9-.LFB9
 1173 0060 00000000 		.4byte	.LFB10
 1174 0064 20000000 		.4byte	.LFE10-.LFB10
 1175 0068 00000000 		.4byte	.LFB11
 1176 006c 20000000 		.4byte	.LFE11-.LFB11
 1177 0070 00000000 		.4byte	.LFB12
 1178 0074 1C000000 		.4byte	.LFE12-.LFB12
 1179 0078 00000000 		.4byte	.LFB13
 1180 007c 1C000000 		.4byte	.LFE13-.LFB13
 1181 0080 00000000 		.4byte	0
 1182 0084 00000000 		.4byte	0
 1183              		.section	.debug_ranges,"",%progbits
 1184              	.Ldebug_ranges0:
 1185 0000 00000000 		.4byte	.LFB0
 1186 0004 4C000000 		.4byte	.LFE0
 1187 0008 00000000 		.4byte	.LFB1
 1188 000c 0C000000 		.4byte	.LFE1
 1189 0010 00000000 		.4byte	.LFB2
 1190 0014 24000000 		.4byte	.LFE2
 1191 0018 00000000 		.4byte	.LFB3
 1192 001c 0C000000 		.4byte	.LFE3
 1193 0020 00000000 		.4byte	.LFB4
 1194 0024 20000000 		.4byte	.LFE4
 1195 0028 00000000 		.4byte	.LFB5
 1196 002c 14000000 		.4byte	.LFE5
 1197 0030 00000000 		.4byte	.LFB6
 1198 0034 18000000 		.4byte	.LFE6
 1199 0038 00000000 		.4byte	.LFB7
 1200 003c 18000000 		.4byte	.LFE7
 1201 0040 00000000 		.4byte	.LFB8
 1202 0044 20000000 		.4byte	.LFE8
 1203 0048 00000000 		.4byte	.LFB9
 1204 004c 18000000 		.4byte	.LFE9
 1205 0050 00000000 		.4byte	.LFB10
 1206 0054 20000000 		.4byte	.LFE10
 1207 0058 00000000 		.4byte	.LFB11
 1208 005c 20000000 		.4byte	.LFE11
 1209 0060 00000000 		.4byte	.LFB12
 1210 0064 1C000000 		.4byte	.LFE12
 1211 0068 00000000 		.4byte	.LFB13
 1212 006c 1C000000 		.4byte	.LFE13
 1213 0070 00000000 		.4byte	0
 1214 0074 00000000 		.4byte	0
 1215              		.section	.debug_line,"",%progbits
 1216              	.Ldebug_line0:
 1217 0000 5F010000 		.section	.debug_str,"MS",%progbits,1
 1217      02004900 
 1217      00000201 
 1217      FB0E0D00 
 1217      01010101 
 1218              	.LASF15:
 1219 0000 72656731 		.ascii	"reg16\000"
 1219      3600
 1220              	.LASF25:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 36


 1221 0006 456E6354 		.ascii	"EncTimer_Low_ReadPeriod\000"
 1221      696D6572 
 1221      5F4C6F77 
 1221      5F526561 
 1221      64506572 
 1222              	.LASF23:
 1223 001e 456E6354 		.ascii	"EncTimer_Low_SoftwareCapture\000"
 1223      696D6572 
 1223      5F4C6F77 
 1223      5F536F66 
 1223      74776172 
 1224              	.LASF33:
 1225 003b 456E6354 		.ascii	"EncTimer_Low_SetInterruptCount\000"
 1225      696D6572 
 1225      5F4C6F77 
 1225      5F536574 
 1225      496E7465 
 1226              	.LASF36:
 1227 005a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1227      43313120 
 1227      352E342E 
 1227      31203230 
 1227      31363036 
 1228 008d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1228      20726576 
 1228      6973696F 
 1228      6E203233 
 1228      37373135 
 1229 00c0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1229      66756E63 
 1229      74696F6E 
 1229      2D736563 
 1229      74696F6E 
 1230              	.LASF19:
 1231 00e8 456E6354 		.ascii	"EncTimer_Low_Start\000"
 1231      696D6572 
 1231      5F4C6F77 
 1231      5F537461 
 1231      727400
 1232              	.LASF28:
 1233 00fb 70657269 		.ascii	"period\000"
 1233      6F6400
 1234              	.LASF3:
 1235 0102 73686F72 		.ascii	"short unsigned int\000"
 1235      7420756E 
 1235      7369676E 
 1235      65642069 
 1235      6E7400
 1236              	.LASF29:
 1237 0115 456E6354 		.ascii	"EncTimer_Low_ReadCapture\000"
 1237      696D6572 
 1237      5F4C6F77 
 1237      5F526561 
 1237      64436170 
 1238              	.LASF12:
 1239 012e 646F7562 		.ascii	"double\000"
 1239      6C6500
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 37


 1240              	.LASF34:
 1241 0135 696E7465 		.ascii	"interruptCount\000"
 1241      72727570 
 1241      74436F75 
 1241      6E7400
 1242              	.LASF11:
 1243 0144 666C6F61 		.ascii	"float\000"
 1243      7400
 1244              	.LASF31:
 1245 014a 636F756E 		.ascii	"counter\000"
 1245      74657200 
 1246              	.LASF1:
 1247 0152 756E7369 		.ascii	"unsigned char\000"
 1247      676E6564 
 1247      20636861 
 1247      7200
 1248              	.LASF14:
 1249 0160 72656738 		.ascii	"reg8\000"
 1249      00
 1250              	.LASF32:
 1251 0165 456E6354 		.ascii	"EncTimer_Low_ReadCounter\000"
 1251      696D6572 
 1251      5F4C6F77 
 1251      5F526561 
 1251      64436F75 
 1252              	.LASF5:
 1253 017e 6C6F6E67 		.ascii	"long unsigned int\000"
 1253      20756E73 
 1253      69676E65 
 1253      6420696E 
 1253      7400
 1254              	.LASF9:
 1255 0190 75696E74 		.ascii	"uint8\000"
 1255      3800
 1256              	.LASF18:
 1257 0196 456E6354 		.ascii	"EncTimer_Low_Enable\000"
 1257      696D6572 
 1257      5F4C6F77 
 1257      5F456E61 
 1257      626C6500 
 1258              	.LASF24:
 1259 01aa 456E6354 		.ascii	"EncTimer_Low_ReadStatusRegister\000"
 1259      696D6572 
 1259      5F4C6F77 
 1259      5F526561 
 1259      64537461 
 1260              	.LASF35:
 1261 01ca 456E6354 		.ascii	"EncTimer_Low_ClearFIFO\000"
 1261      696D6572 
 1261      5F4C6F77 
 1261      5F436C65 
 1261      61724649 
 1262              	.LASF10:
 1263 01e1 75696E74 		.ascii	"uint16\000"
 1263      313600
 1264              	.LASF8:
 1265 01e8 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 38


 1265      676E6564 
 1265      20696E74 
 1265      00
 1266              	.LASF7:
 1267 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1267      206C6F6E 
 1267      6720756E 
 1267      7369676E 
 1267      65642069 
 1268              	.LASF37:
 1269 020c 47656E65 		.ascii	"Generated_Source\\PSoC5\\EncTimer_Low.c\000"
 1269      72617465 
 1269      645F536F 
 1269      75726365 
 1269      5C50536F 
 1270              	.LASF21:
 1271 0232 456E6354 		.ascii	"EncTimer_Low_Init\000"
 1271      696D6572 
 1271      5F4C6F77 
 1271      5F496E69 
 1271      7400
 1272              	.LASF38:
 1273 0244 433A5C55 		.ascii	"C:\\Users\\jebush2\\Desktop\\PSoC 3-19-2019\\Smart "
 1273      73657273 
 1273      5C6A6562 
 1273      75736832 
 1273      5C446573 
 1274 0272 42696B65 		.ascii	"Bike PSoC\\IMU.cydsn\000"
 1274      2050536F 
 1274      435C494D 
 1274      552E6379 
 1274      64736E00 
 1275              	.LASF26:
 1276 0286 456E6354 		.ascii	"EncTimer_Low_WritePeriod\000"
 1276      696D6572 
 1276      5F4C6F77 
 1276      5F577269 
 1276      74655065 
 1277              	.LASF17:
 1278 029f 73697A65 		.ascii	"sizetype\000"
 1278      74797065 
 1278      00
 1279              	.LASF6:
 1280 02a8 6C6F6E67 		.ascii	"long long int\000"
 1280      206C6F6E 
 1280      6720696E 
 1280      7400
 1281              	.LASF27:
 1282 02b6 696E7465 		.ascii	"interruptMode\000"
 1282      72727570 
 1282      744D6F64 
 1282      6500
 1283              	.LASF2:
 1284 02c4 73686F72 		.ascii	"short int\000"
 1284      7420696E 
 1284      7400
 1285              	.LASF39:
ARM GAS  C:\Users\jebush2\AppData\Local\Temp\ccPm7zn1.s 			page 39


 1286 02ce 456E6354 		.ascii	"EncTimer_Low_interruptState\000"
 1286      696D6572 
 1286      5F4C6F77 
 1286      5F696E74 
 1286      65727275 
 1287              	.LASF22:
 1288 02ea 456E6354 		.ascii	"EncTimer_Low_SetInterruptMode\000"
 1288      696D6572 
 1288      5F4C6F77 
 1288      5F536574 
 1288      496E7465 
 1289              	.LASF4:
 1290 0308 6C6F6E67 		.ascii	"long int\000"
 1290      20696E74 
 1290      00
 1291              	.LASF13:
 1292 0311 63686172 		.ascii	"char\000"
 1292      00
 1293              	.LASF16:
 1294 0316 6C6F6E67 		.ascii	"long double\000"
 1294      20646F75 
 1294      626C6500 
 1295              	.LASF40:
 1296 0322 456E6354 		.ascii	"EncTimer_Low_initVar\000"
 1296      696D6572 
 1296      5F4C6F77 
 1296      5F696E69 
 1296      74566172 
 1297              	.LASF0:
 1298 0337 7369676E 		.ascii	"signed char\000"
 1298      65642063 
 1298      68617200 
 1299              	.LASF20:
 1300 0343 456E6354 		.ascii	"EncTimer_Low_Stop\000"
 1300      696D6572 
 1300      5F4C6F77 
 1300      5F53746F 
 1300      7000
 1301              	.LASF30:
 1302 0355 456E6354 		.ascii	"EncTimer_Low_WriteCounter\000"
 1302      696D6572 
 1302      5F4C6F77 
 1302      5F577269 
 1302      7465436F 
 1303              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
