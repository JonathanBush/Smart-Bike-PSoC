ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_1_Init,"ax",%progbits
  20              		.align	1
  21              		.global	USBUART_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_1_Init, %function
  25              	USBUART_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_1.c"
   1:Generated_Source\PSoC5/USBUART_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_1.c **** * \file USBUART_1.c
   3:Generated_Source\PSoC5/USBUART_1.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART_1.c **** *
   5:Generated_Source\PSoC5/USBUART_1.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_1.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART_1.c **** *
   8:Generated_Source\PSoC5/USBUART_1.c **** * Note:
   9:Generated_Source\PSoC5/USBUART_1.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART_1.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART_1.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART_1.c **** *
  13:Generated_Source\PSoC5/USBUART_1.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART_1.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART_1.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART_1.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART_1.c **** 
  21:Generated_Source\PSoC5/USBUART_1.c **** #include "USBUART_1_pvt.h"
  22:Generated_Source\PSoC5/USBUART_1.c **** #include "USBUART_1_cydmac.h"
  23:Generated_Source\PSoC5/USBUART_1.c **** #include "USBUART_1_hid.h"
  24:Generated_Source\PSoC5/USBUART_1.c **** #include "USBUART_1_Dp.h"
  25:Generated_Source\PSoC5/USBUART_1.c **** 
  26:Generated_Source\PSoC5/USBUART_1.c **** 
  27:Generated_Source\PSoC5/USBUART_1.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART_1.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART_1.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 2


  31:Generated_Source\PSoC5/USBUART_1.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART_1.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART_1.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART_1.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART_1.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART_1.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART_1.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART_1.c **** * functions.
  39:Generated_Source\PSoC5/USBUART_1.c **** */
  40:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART_1.c **** 
  42:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART_1.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART_1.c ****         static void USBUART_1_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART_1.c **** 
  46:Generated_Source\PSoC5/USBUART_1.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART_1.c ****         const uint8 USBUART_1_DmaChan[USBUART_1_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART_1.c ****         {
  49:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  50:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  51:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  52:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  53:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  54:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  55:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  56:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  57:Generated_Source\PSoC5/USBUART_1.c ****             0u,
  58:Generated_Source\PSoC5/USBUART_1.c ****         };        
  59:Generated_Source\PSoC5/USBUART_1.c ****     #else
  60:Generated_Source\PSoC5/USBUART_1.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART_1.c ****         uint8 USBUART_1_DmaChan[USBUART_1_MAX_EP];
  62:Generated_Source\PSoC5/USBUART_1.c ****         
  63:Generated_Source\PSoC5/USBUART_1.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART_1.c ****         uint8 USBUART_1_DmaTd[USBUART_1_MAX_EP];
  65:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART_1.c **** 
  68:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART_1.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART_1.c ****     uint8  USBUART_1_DmaEpBurstCnt   [USBUART_1_MAX_EP];
  72:Generated_Source\PSoC5/USBUART_1.c ****     
  73:Generated_Source\PSoC5/USBUART_1.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART_1.c ****     uint8  USBUART_1_DmaEpLastBurstEl[USBUART_1_MAX_EP];
  75:Generated_Source\PSoC5/USBUART_1.c **** 
  76:Generated_Source\PSoC5/USBUART_1.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART_1.c ****     uint8  USBUART_1_DmaEpBurstCntBackup  [USBUART_1_MAX_EP];
  78:Generated_Source\PSoC5/USBUART_1.c ****     uint32 USBUART_1_DmaEpBufferAddrBackup[USBUART_1_MAX_EP];
  79:Generated_Source\PSoC5/USBUART_1.c ****      
  80:Generated_Source\PSoC5/USBUART_1.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART_1.c ****     const uint8 USBUART_1_DmaReqOut[USBUART_1_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART_1.c ****     {
  83:Generated_Source\PSoC5/USBUART_1.c ****         0u,
  84:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART_1.c ****         0u,
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 3


  88:Generated_Source\PSoC5/USBUART_1.c ****         0u,
  89:Generated_Source\PSoC5/USBUART_1.c ****         0u,
  90:Generated_Source\PSoC5/USBUART_1.c ****         0u,
  91:Generated_Source\PSoC5/USBUART_1.c ****         0u,
  92:Generated_Source\PSoC5/USBUART_1.c ****     };
  93:Generated_Source\PSoC5/USBUART_1.c **** 
  94:Generated_Source\PSoC5/USBUART_1.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART_1.c ****     const uint8 USBUART_1_DmaBurstEndOut[USBUART_1_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART_1.c ****     {
  97:Generated_Source\PSoC5/USBUART_1.c ****         0u,
  98:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART_1.c ****     };
 107:Generated_Source\PSoC5/USBUART_1.c ****     
 108:Generated_Source\PSoC5/USBUART_1.c **** #else
 109:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART_1.c ****         static uint8 clearInDataRdyStatus = USBUART_1_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART_1.c ****         uint8 USBUART_1_DmaNextTd[USBUART_1_MAX_EP];
 112:Generated_Source\PSoC5/USBUART_1.c ****         const uint8 USBUART_1_epX_TD_TERMOUT_EN[USBUART_1_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART_1.c ****         {
 114:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 115:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 116:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 117:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 118:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 119:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 120:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 121:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 122:Generated_Source\PSoC5/USBUART_1.c ****             0u,
 123:Generated_Source\PSoC5/USBUART_1.c ****         };
 124:Generated_Source\PSoC5/USBUART_1.c **** 
 125:Generated_Source\PSoC5/USBUART_1.c ****         volatile uint16 USBUART_1_inLength[USBUART_1_MAX_EP];
 126:Generated_Source\PSoC5/USBUART_1.c ****         const uint8 *USBUART_1_inDataPointer[USBUART_1_MAX_EP];
 127:Generated_Source\PSoC5/USBUART_1.c ****         volatile uint8 USBUART_1_inBufFull[USBUART_1_MAX_EP];
 128:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART_1.c **** 
 132:Generated_Source\PSoC5/USBUART_1.c **** 
 133:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_Start
 135:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART_1.c **** *
 137:Generated_Source\PSoC5/USBUART_1.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART_1.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART_1.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART_1.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART_1.c **** *
 142:Generated_Source\PSoC5/USBUART_1.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART_1.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART_1.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 4


 145:Generated_Source\PSoC5/USBUART_1.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART_1.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART_1.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART_1.c **** *
 149:Generated_Source\PSoC5/USBUART_1.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART_1.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART_1.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART_1.c **** *
 153:Generated_Source\PSoC5/USBUART_1.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART_1.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART_1.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART_1.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART_1.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART_1.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART_1.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART_1.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART_1.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART_1.c **** *
 164:Generated_Source\PSoC5/USBUART_1.c **** *       *USBUART_1_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART_1.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART_1.c **** *
 167:Generated_Source\PSoC5/USBUART_1.c **** *       *USBUART_1_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART_1.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART_1.c **** *
 170:Generated_Source\PSoC5/USBUART_1.c **** *       *USBUART_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART_1.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART_1.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART_1.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART_1.c **** *  \ref USBUART_1_initVar
 178:Generated_Source\PSoC5/USBUART_1.c **** *
 179:Generated_Source\PSoC5/USBUART_1.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART_1.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART_1.c **** *
 182:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART_1.c **** *  No.
 184:Generated_Source\PSoC5/USBUART_1.c **** *
 185:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART_1.c **** {
 188:Generated_Source\PSoC5/USBUART_1.c ****     if (0u == USBUART_1_initVar)
 189:Generated_Source\PSoC5/USBUART_1.c ****     {
 190:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_Init();
 191:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_initVar = 1u;
 192:Generated_Source\PSoC5/USBUART_1.c ****     }
 193:Generated_Source\PSoC5/USBUART_1.c **** 
 194:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBUART_1.c **** }
 196:Generated_Source\PSoC5/USBUART_1.c **** 
 197:Generated_Source\PSoC5/USBUART_1.c **** 
 198:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_Init
 200:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART_1.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 5


 202:Generated_Source\PSoC5/USBUART_1.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART_1.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART_1.c **** * USBUART_1_Init() because the USBUART_1_Start() routine calls
 205:Generated_Source\PSoC5/USBUART_1.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART_1.c **** *
 207:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART_1.c **** *  No.
 209:Generated_Source\PSoC5/USBUART_1.c **** *
 210:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_Init(void) 
 212:Generated_Source\PSoC5/USBUART_1.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USB_CLK_EN_REG = USBUART_1_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART_1.c **** 
 217:Generated_Source\PSoC5/USBUART_1.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART_1.c ****     * USBUART_1_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART_1.c ****     */
 220:Generated_Source\PSoC5/USBUART_1.c **** 
 221:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USBIO_CR1_REG &= ~ (uint32) USBUART_1_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART_1.c **** 
 224:Generated_Source\PSoC5/USBUART_1.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_BUS_RST_CNT_REG = USBUART_1_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART_1.c **** 
 227:Generated_Source\PSoC5/USBUART_1.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART_1.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART_1.c ****     */
 230:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_POWER_CTRL_REG = USBUART_1_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART_1.c **** 
 232:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_POWER_CTRL_REG |= USBUART_1_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART_1.c **** 
 235:Generated_Source\PSoC5/USBUART_1.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_POWER_CTRL_REG &= (uint32) ~USBUART_1_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_POWER_CTRL_REG &= (uint32) ~USBUART_1_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART_1.c **** 
 240:Generated_Source\PSoC5/USBUART_1.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR1_REG = USBUART_1_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART_1.c **** 
 243:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_INTR_LVL_SEL_REG = USBUART_1_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART_1.c **** 
 246:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 6


 247:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_INTR_SIE_MASK_REG = USBUART_1_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART_1.c **** 
 249:Generated_Source\PSoC5/USBUART_1.c **** #else
 250:Generated_Source\PSoC5/USBUART_1.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
 251:Generated_Source\PSoC5/USBUART_1.c **** 
 252:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART_1.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART_1.c **** 
 256:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_ACT_CFG_REG |= USBUART_1_PM_ACT_EN_FSUSB;
  43              		.loc 1 257 0
  44 0006 404A     		ldr	r2, .L2
 258:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_STBY_CFG_REG |= USBUART_1_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC5/USBUART_1.c **** 
 261:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USB_CLK_EN_REG = USBUART_1_USB_CLK_ENABLE;
  45              		.loc 1 262 0
  46 0008 0126     		movs	r6, #1
 257:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USB block for Standby Power Mode. */
  47              		.loc 1 257 0
  48 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 263:Generated_Source\PSoC5/USBUART_1.c **** 
 264:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR1_REG = USBUART_1_CR1_ENABLE_LOCK;
  49              		.loc 1 264 0
  50 000c 0225     		movs	r5, #2
 257:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USB block for Standby Power Mode. */
  51              		.loc 1 257 0
  52 000e 43F00103 		orr	r3, r3, #1
  53 0012 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/USBUART_1.c **** 
  54              		.loc 1 259 0
  55 0014 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 265:Generated_Source\PSoC5/USBUART_1.c **** 
 266:Generated_Source\PSoC5/USBUART_1.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART_1.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USBIO_CR0_REG &= (uint8) ~USBUART_1_USBIO_CR0_TEN;
 269:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART_1.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART_1.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART_1.c ****     */
 274:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_USB_CR0_REG &= (uint8) ~(USBUART_1_PM_USB_CR0_PD_N |
  56              		.loc 1 274 0
  57 0016 3D4C     		ldr	r4, .L2+4
 259:Generated_Source\PSoC5/USBUART_1.c **** 
  58              		.loc 1 259 0
  59 0018 43F00103 		orr	r3, r3, #1
  60 001c 1374     		strb	r3, [r2, #16]
 262:Generated_Source\PSoC5/USBUART_1.c **** 
  61              		.loc 1 262 0
  62 001e 3C4B     		ldr	r3, .L2+8
 268:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 7


  63              		.loc 1 268 0
  64 0020 02F5E352 		add	r2, r2, #7264
 262:Generated_Source\PSoC5/USBUART_1.c **** 
  65              		.loc 1 262 0
  66 0024 1E70     		strb	r6, [r3]
 268:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  67              		.loc 1 268 0
  68 0026 0B32     		adds	r2, r2, #11
 264:Generated_Source\PSoC5/USBUART_1.c **** 
  69              		.loc 1 264 0
  70 0028 03F8945C 		strb	r5, [r3, #-148]
 268:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  71              		.loc 1 268 0
  72 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 250:Generated_Source\PSoC5/USBUART_1.c **** 
  73              		.loc 1 250 0
  74 002e 0746     		mov	r7, r0
  75              	.LVL1:
 268:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  76              		.loc 1 268 0
  77 0030 03F07F03 		and	r3, r3, #127
  78 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
  79              		.loc 1 269 0
  80 0036 0020     		movs	r0, #0
  81 0038 FFF7FEFF 		bl	CyDelayUs
  82              	.LVL2:
  83              		.loc 1 274 0
  84 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 275:Generated_Source\PSoC5/USBUART_1.c ****                                                  USBUART_1_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART_1.c **** 
 277:Generated_Source\PSoC5/USBUART_1.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USBIO_CR1_REG &= (uint8) ~USBUART_1_USBIO_CR1_IOMODE;
  85              		.loc 1 278 0
  86 003e 354A     		ldr	r2, .L2+12
 274:Generated_Source\PSoC5/USBUART_1.c ****                                                  USBUART_1_PM_USB_CR0_PD_PULLUP_N);
  87              		.loc 1 274 0
  88 0040 03F0F903 		and	r3, r3, #249
  89 0044 2370     		strb	r3, [r4]
  90              		.loc 1 278 0
  91 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 279:Generated_Source\PSoC5/USBUART_1.c **** 
 280:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_USB_CR0_REG |= USBUART_1_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC5/USBUART_1.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_REG_STABILITY_1US);
  92              		.loc 1 283 0
  93 0048 3046     		mov	r0, r6
 278:Generated_Source\PSoC5/USBUART_1.c **** 
  94              		.loc 1 278 0
  95 004a 03F0DF03 		and	r3, r3, #223
  96 004e 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/USBUART_1.c ****     /* Reference is available for 1us after regulator is enabled. */
  97              		.loc 1 281 0
  98 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  99 0052 3343     		orrs	r3, r3, r6
 100 0054 2370     		strb	r3, [r4]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 8


 101              		.loc 1 283 0
 102 0056 FFF7FEFF 		bl	CyDelayUs
 103              	.LVL3:
 284:Generated_Source\PSoC5/USBUART_1.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_VREF_RESTORE);
 104              		.loc 1 285 0
 105 005a 2820     		movs	r0, #40
 106 005c FFF7FEFF 		bl	CyDelayUs
 107              	.LVL4:
 286:Generated_Source\PSoC5/USBUART_1.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_DM_INP_DIS_REG &= (uint8) ~USBUART_1_DM_MASK;
 108              		.loc 1 287 0
 109 0060 2D4B     		ldr	r3, .L2+16
 288:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_DP_INP_DIS_REG &= (uint8) ~USBUART_1_DP_MASK;
 289:Generated_Source\PSoC5/USBUART_1.c **** 
 290:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_USB_CR0_REG |= USBUART_1_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_PD_PULLUP_N_ENABLE);
 110              		.loc 1 292 0
 111 0062 2846     		mov	r0, r5
 287:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_DP_INP_DIS_REG &= (uint8) ~USBUART_1_DP_MASK;
 112              		.loc 1 287 0
 113 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 114 0066 02F07F02 		and	r2, r2, #127
 115 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_DP_INP_DIS_REG &= (uint8) ~USBUART_1_DP_MASK;
 116              		.loc 1 288 0
 117 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 118 006e 02F0BF02 		and	r2, r2, #191
 119 0072 1A70     		strb	r2, [r3]
 291:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayUs(USBUART_1_WAIT_PD_PULLUP_N_ENABLE);
 120              		.loc 1 291 0
 121 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 122 0076 2B43     		orrs	r3, r3, r5
 123 0078 2370     		strb	r3, [r4]
 124              		.loc 1 292 0
 125 007a FFF7FEFF 		bl	CyDelayUs
 126              	.LVL5:
 293:Generated_Source\PSoC5/USBUART_1.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_USB_CR0_REG |= USBUART_1_PM_USB_CR0_PD_PULLUP_N;
 127              		.loc 1 294 0
 128 007e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 295:Generated_Source\PSoC5/USBUART_1.c **** 
 296:Generated_Source\PSoC5/USBUART_1.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART_1.c ****     CY_SET_REG8(USBUART_1_ARB_RW1_WA_PTR,     0u);
 298:Generated_Source\PSoC5/USBUART_1.c ****     CY_SET_REG8(USBUART_1_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC5/USBUART_1.c **** 
 300:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART_1.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART_1.c ****     for (i = 0u; i < USBUART_1_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART_1.c ****     {
 304:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART_1.c **** 
 306:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART_1.c ****     }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 9


 310:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART_1.c **** 
 312:Generated_Source\PSoC5/USBUART_1.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 312 0
 130 0080 3846     		mov	r0, r7
 294:Generated_Source\PSoC5/USBUART_1.c **** 
 131              		.loc 1 294 0
 132 0082 43F00403 		orr	r3, r3, #4
 133 0086 2370     		strb	r3, [r4]
 297:Generated_Source\PSoC5/USBUART_1.c ****     CY_SET_REG8(USBUART_1_ARB_RW1_WA_MSB_PTR, 0u);
 134              		.loc 1 297 0
 135 0088 244B     		ldr	r3, .L2+20
 136 008a 0024     		movs	r4, #0
 137 008c 1C70     		strb	r4, [r3]
 298:Generated_Source\PSoC5/USBUART_1.c **** 
 138              		.loc 1 298 0
 139 008e 5C70     		strb	r4, [r3, #1]
 140              		.loc 1 312 0
 141 0090 FFF7FEFF 		bl	CyExitCriticalSection
 142              	.LVL6:
 313:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART_1.c **** 
 315:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART_1.c ****     CyIntSetPriority     (USBUART_1_INTR_HI_VECT_NUM,  USBUART_1_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_INTR_HI_VECT_NUM, &USBUART_1_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART_1.c **** 
 321:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART_1.c ****     CyIntSetPriority     (USBUART_1_INTR_LO_VECT_NUM,  USBUART_1_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_INTR_LO_VECT_NUM, &USBUART_1_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART_1.c **** 
 325:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART_1.c ****     CyIntSetPriority     (USBUART_1_INTR_MED_VECT_NUM,  USBUART_1_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_INTR_MED_VECT_NUM, &USBUART_1_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART_1.c **** 
 329:Generated_Source\PSoC5/USBUART_1.c **** #else
 330:Generated_Source\PSoC5/USBUART_1.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART_1.c ****     CyIntSetPriority(USBUART_1_BUS_RESET_VECT_NUM, USBUART_1_BUS_RESET_PRIOR);
 143              		.loc 1 331 0
 144 0094 0721     		movs	r1, #7
 145 0096 1720     		movs	r0, #23
 146 0098 FFF7FEFF 		bl	CyIntSetPriority
 147              	.LVL7:
 332:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_BUS_RESET_VECT_NUM,   &USBUART_1_BUS_RESET_ISR);
 148              		.loc 1 332 0
 149 009c 2049     		ldr	r1, .L2+24
 150 009e 1720     		movs	r0, #23
 151 00a0 FFF7FEFF 		bl	CyIntSetVector
 152              	.LVL8:
 333:Generated_Source\PSoC5/USBUART_1.c **** 
 334:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART_1.c ****     CyIntSetPriority(USBUART_1_EP_0_VECT_NUM, USBUART_1_EP_0_PRIOR);
 153              		.loc 1 335 0
 154 00a4 0721     		movs	r1, #7
 155 00a6 1820     		movs	r0, #24
 156 00a8 FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 10


 157              	.LVL9:
 336:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_EP_0_VECT_NUM,   &USBUART_1_EP_0_ISR);
 158              		.loc 1 336 0
 159 00ac 1D49     		ldr	r1, .L2+28
 160 00ae 1820     		movs	r0, #24
 161 00b0 FFF7FEFF 		bl	CyIntSetVector
 162              	.LVL10:
 337:Generated_Source\PSoC5/USBUART_1.c **** 
 338:Generated_Source\PSoC5/USBUART_1.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_SOF_VECT_NUM,  USBUART_1_SOF_PRIOR);
 163              		.loc 1 340 0
 164 00b4 0721     		movs	r1, #7
 165 00b6 1520     		movs	r0, #21
 166 00b8 FFF7FEFF 		bl	CyIntSetPriority
 167              	.LVL11:
 341:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_SOF_VECT_NUM, &USBUART_1_SOF_ISR);
 168              		.loc 1 341 0
 169 00bc 1A49     		ldr	r1, .L2+32
 170 00be 1520     		movs	r0, #21
 171 00c0 FFF7FEFF 		bl	CyIntSetVector
 172              	.LVL12:
 342:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART_1.c **** 
 344:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_1_VECT_NUM,  USBUART_1_EP_1_PRIOR);
 173              		.loc 1 346 0
 174 00c4 2046     		mov	r0, r4
 175 00c6 0721     		movs	r1, #7
 176 00c8 FFF7FEFF 		bl	CyIntSetPriority
 177              	.LVL13:
 347:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_1_VECT_NUM,  &USBUART_1_EP_1_ISR);
 178              		.loc 1 347 0
 179 00cc 1749     		ldr	r1, .L2+36
 180 00ce 2046     		mov	r0, r4
 181 00d0 FFF7FEFF 		bl	CyIntSetVector
 182              	.LVL14:
 348:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART_1.c **** 
 350:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_2_VECT_NUM,  USBUART_1_EP_2_PRIOR);
 183              		.loc 1 352 0
 184 00d4 3046     		mov	r0, r6
 185 00d6 0721     		movs	r1, #7
 186 00d8 FFF7FEFF 		bl	CyIntSetPriority
 187              	.LVL15:
 353:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_2_VECT_NUM, &USBUART_1_EP_2_ISR);
 188              		.loc 1 353 0
 189 00dc 1449     		ldr	r1, .L2+40
 190 00de 3046     		mov	r0, r6
 191 00e0 FFF7FEFF 		bl	CyIntSetVector
 192              	.LVL16:
 354:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART_1.c **** 
 356:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 3 Interrupt. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 11


 357:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_3_VECT_NUM,  USBUART_1_EP_3_PRIOR);
 193              		.loc 1 358 0
 194 00e4 2846     		mov	r0, r5
 195 00e6 0721     		movs	r1, #7
 196 00e8 FFF7FEFF 		bl	CyIntSetPriority
 197              	.LVL17:
 359:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_3_VECT_NUM, &USBUART_1_EP_3_ISR);
 198              		.loc 1 359 0
 199 00ec 1149     		ldr	r1, .L2+44
 200 00ee 2846     		mov	r0, r5
 201 00f0 FFF7FEFF 		bl	CyIntSetVector
 202              	.LVL18:
 360:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART_1.c **** 
 362:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_4_VECT_NUM,  USBUART_1_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_4_VECT_NUM, &USBUART_1_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART_1.c **** 
 368:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_5_VECT_NUM,  USBUART_1_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_5_VECT_NUM, &USBUART_1_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART_1.c **** 
 374:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_6_VECT_NUM,  USBUART_1_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_6_VECT_NUM, &USBUART_1_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART_1.c **** 
 380:Generated_Source\PSoC5/USBUART_1.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_7_VECT_NUM,  USBUART_1_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_7_VECT_NUM, &USBUART_1_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART_1.c **** 
 386:Generated_Source\PSoC5/USBUART_1.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_EP_8_VECT_NUM,  USBUART_1_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_EP_8_VECT_NUM, &USBUART_1_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART_1.c **** 
 392:Generated_Source\PSoC5/USBUART_1.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_DMA && USBUART_1_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART_1.c ****         CyIntSetPriority     (USBUART_1_ARB_VECT_NUM,  USBUART_1_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART_1.c ****         (void) CyIntSetVector(USBUART_1_ARB_VECT_NUM, &USBUART_1_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA && USBUART_1_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART_1.c **** 
 399:Generated_Source\PSoC5/USBUART_1.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART_1.c ****     CyIntSetPriority     (USBUART_1_DP_INTC_VECT_NUM,  USBUART_1_DP_INTC_PRIORITY);
 203              		.loc 1 401 0
 204 00f4 0721     		movs	r1, #7
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 12


 205 00f6 0C20     		movs	r0, #12
 206 00f8 FFF7FEFF 		bl	CyIntSetPriority
 207              	.LVL19:
 402:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_DP_INTC_VECT_NUM, &USBUART_1_DP_ISR);
 403:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART_1.c **** 
 405:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART_1.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_InitEpDma();
 408:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART_1.c **** }
 208              		.loc 1 409 0
 209 00fc BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 210              		.cfi_restore 14
 211              		.cfi_restore 7
 212              		.cfi_restore 6
 213              		.cfi_restore 5
 214              		.cfi_restore 4
 215              		.cfi_restore 3
 216              		.cfi_def_cfa_offset 0
 217              	.LVL20:
 402:Generated_Source\PSoC5/USBUART_1.c ****     (void) CyIntSetVector(USBUART_1_DP_INTC_VECT_NUM, &USBUART_1_DP_ISR);
 218              		.loc 1 402 0
 219 0100 0D49     		ldr	r1, .L2+48
 220 0102 0C20     		movs	r0, #12
 221 0104 FFF7FEBF 		b	CyIntSetVector
 222              	.LVL21:
 223              	.L3:
 224              		.align	2
 225              	.L2:
 226 0108 A5430040 		.word	1073759141
 227 010c 94430040 		.word	1073759124
 228 0110 9D600040 		.word	1073766557
 229 0114 12600040 		.word	1073766418
 230 0118 F8510040 		.word	1073762808
 231 011c 84600040 		.word	1073766532
 232 0120 00000000 		.word	USBUART_1_BUS_RESET_ISR
 233 0124 00000000 		.word	USBUART_1_EP_0_ISR
 234 0128 00000000 		.word	USBUART_1_SOF_ISR
 235 012c 00000000 		.word	USBUART_1_EP_1_ISR
 236 0130 00000000 		.word	USBUART_1_EP_2_ISR
 237 0134 00000000 		.word	USBUART_1_EP_3_ISR
 238 0138 00000000 		.word	USBUART_1_DP_ISR
 239              		.cfi_endproc
 240              	.LFE1:
 241              		.size	USBUART_1_Init, .-USBUART_1_Init
 242              		.section	.text.USBUART_1_InitComponent,"ax",%progbits
 243              		.align	1
 244              		.global	USBUART_1_InitComponent
 245              		.thumb
 246              		.thumb_func
 247              		.type	USBUART_1_InitComponent, %function
 248              	USBUART_1_InitComponent:
 249              	.LFB2:
 410:Generated_Source\PSoC5/USBUART_1.c **** 
 411:Generated_Source\PSoC5/USBUART_1.c **** 
 412:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 13


 413:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_InitComponent
 414:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART_1.c **** *
 416:Generated_Source\PSoC5/USBUART_1.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART_1.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART_1.c **** *
 419:Generated_Source\PSoC5/USBUART_1.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART_1.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART_1.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART_1.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART_1.c **** *   field.
 424:Generated_Source\PSoC5/USBUART_1.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART_1.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART_1.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART_1.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART_1.c **** *
 430:Generated_Source\PSoC5/USBUART_1.c **** *       *USBUART_1_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART_1.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART_1.c **** *
 433:Generated_Source\PSoC5/USBUART_1.c **** *       *USBUART_1_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART_1.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART_1.c **** *
 436:Generated_Source\PSoC5/USBUART_1.c **** *       *USBUART_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART_1.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART_1.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART_1.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART_1.c **** *
 443:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_device
 445:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_transferState
 446:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_configuration
 447:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_deviceStatus
 448:Generated_Source\PSoC5/USBUART_1.c **** *
 449:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART_1.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART_1.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART_1.c **** *
 454:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART_1.c **** *
 456:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART_1.c **** *  No.
 458:Generated_Source\PSoC5/USBUART_1.c **** *
 459:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART_1.c **** {
 250              		.loc 1 461 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              	.LVL22:
 255 0000 08B5     		push	{r3, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 3, -8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 14


 258              		.cfi_offset 14, -4
 462:Generated_Source\PSoC5/USBUART_1.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART_1.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART_1.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART_1.c ****     */
 466:Generated_Source\PSoC5/USBUART_1.c **** #if defined(USBUART_1_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART_1.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART_1.c **** 
 469:Generated_Source\PSoC5/USBUART_1.c ****     for (i = 0u; i < USBUART_1_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART_1.c ****     {
 471:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_hidProtocol[i] = USBUART_1_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBUART_1.c ****     }
 473:Generated_Source\PSoC5/USBUART_1.c **** #endif /* USBUART_1_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART_1.c **** 
 475:Generated_Source\PSoC5/USBUART_1.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_device = device;
 259              		.loc 1 476 0
 260 0002 1C4B     		ldr	r3, .L13
 477:Generated_Source\PSoC5/USBUART_1.c **** 
 478:Generated_Source\PSoC5/USBUART_1.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_transferState   = USBUART_1_TRANS_STATE_IDLE;
 261              		.loc 1 479 0
 262 0004 1C4A     		ldr	r2, .L13+4
 476:Generated_Source\PSoC5/USBUART_1.c **** 
 263              		.loc 1 476 0
 264 0006 1870     		strb	r0, [r3]
 265              		.loc 1 479 0
 266 0008 0023     		movs	r3, #0
 267 000a 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_configurationChanged = 0u;
 268              		.loc 1 480 0
 269 000c 1B4A     		ldr	r2, .L13+8
 270 000e 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_configuration   = 0u;
 271              		.loc 1 481 0
 272 0010 1B4A     		ldr	r2, .L13+12
 273 0012 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_interfaceNumber = 0u;
 274              		.loc 1 482 0
 275 0014 1B4A     		ldr	r2, .L13+16
 276 0016 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_deviceAddress   = 0u;
 277              		.loc 1 483 0
 278 0018 1B4A     		ldr	r2, .L13+20
 279 001a 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_deviceStatus    = 0u;
 280              		.loc 1 484 0
 281 001c 1B4A     		ldr	r2, .L13+24
 282 001e 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_lastPacketSize  = 0u;
 283              		.loc 1 485 0
 284 0020 1B4A     		ldr	r2, .L13+28
 285 0022 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBUART_1.c **** 
 487:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART_1.c ****     CyIntEnable(USBUART_1_INTR_HI_VECT_NUM);
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 15


 490:Generated_Source\PSoC5/USBUART_1.c ****     CyIntEnable(USBUART_1_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART_1.c ****     CyIntEnable(USBUART_1_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART_1.c **** #else
 493:Generated_Source\PSoC5/USBUART_1.c ****     CyIntEnable(USBUART_1_BUS_RESET_VECT_NUM);
 286              		.loc 1 493 0
 287 0024 1B4B     		ldr	r3, .L13+32
 288 0026 4FF40002 		mov	r2, #8388608
 289 002a 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART_1.c ****     CyIntEnable(USBUART_1_EP_0_VECT_NUM);
 290              		.loc 1 494 0
 291 002c 4FF08072 		mov	r2, #16777216
 292 0030 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART_1.c **** 
 496:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_SOF_VECT_NUM);
 293              		.loc 1 497 0
 294 0032 4FF40012 		mov	r2, #2097152
 295 0036 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART_1.c **** 
 500:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_1_VECT_NUM);
 296              		.loc 1 501 0
 297 0038 0122     		movs	r2, #1
 298 003a 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART_1.c **** 
 504:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_2_VECT_NUM);
 299              		.loc 1 505 0
 300 003c 0222     		movs	r2, #2
 301 003e 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART_1.c **** 
 508:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_3_VECT_NUM);
 302              		.loc 1 509 0
 303 0040 0422     		movs	r2, #4
 304 0042 1A60     		str	r2, [r3]
 305 0044 144B     		ldr	r3, .L13+36
 510:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART_1.c **** 
 512:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART_1.c **** 
 516:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART_1.c **** 
 520:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* USBUART_1_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART_1.c **** 
 524:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 16


 527:Generated_Source\PSoC5/USBUART_1.c **** 
 528:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART_1.c **** 
 533:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA && USBUART_1_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_ARB_INT_EN_REG = USBUART_1_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART_1.c **** 
 537:Generated_Source\PSoC5/USBUART_1.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART_1.c **** #endif   /* (USBUART_1_EP_MANAGEMENT_DMA && USBUART_1_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART_1.c **** 
 542:Generated_Source\PSoC5/USBUART_1.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART_1.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_ARB_CFG_REG = USBUART_1_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART_1.c **** 
 547:Generated_Source\PSoC5/USBUART_1.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART_1.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART_1.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART_1.c **** 
 551:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_1.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART_1.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_1_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART_1.c **** 
 557:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART_1.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART_1.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART_1.c ****         #else
 562:Generated_Source\PSoC5/USBUART_1.c ****             #if (USBUART_1_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART_1.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_EP_DMA_Done_isr_StartEx(&USBUART_1_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART_1.c ****             #endif /* (USBUART_1_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART_1.c **** 
 572:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART_1.c ****     switch(mode)
 306              		.loc 1 573 0
 307 0046 19B9     		cbnz	r1, .L12
 574:Generated_Source\PSoC5/USBUART_1.c ****     {
 575:Generated_Source\PSoC5/USBUART_1.c ****     case USBUART_1_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART_1.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_CR1_REG &= (uint8) ~USBUART_1_CR1_REG_ENABLE;
 308              		.loc 1 577 0
 309 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 310 004a 02F0FE02 		and	r2, r2, #254
 311 004e 02E0     		b	.L10
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 17


 312              	.L12:
 578:Generated_Source\PSoC5/USBUART_1.c ****         break;
 579:Generated_Source\PSoC5/USBUART_1.c **** 
 580:Generated_Source\PSoC5/USBUART_1.c ****     case USBUART_1_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART_1.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_CR1_REG |= (uint8)  USBUART_1_CR1_REG_ENABLE;
 583:Generated_Source\PSoC5/USBUART_1.c ****         break;
 584:Generated_Source\PSoC5/USBUART_1.c **** 
 585:Generated_Source\PSoC5/USBUART_1.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_VDDD_MV < USBUART_1_3500MV)
 587:Generated_Source\PSoC5/USBUART_1.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_CR1_REG &= (uint8) ~USBUART_1_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART_1.c ****     #else
 590:Generated_Source\PSoC5/USBUART_1.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_CR1_REG |= (uint8)  USBUART_1_CR1_REG_ENABLE;
 313              		.loc 1 591 0
 314 0050 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 315 0052 42F00102 		orr	r2, r2, #1
 316              	.L10:
 317 0056 1A70     		strb	r2, [r3]
 592:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_VDDD_MV < USBUART_1_3500MV) */
 593:Generated_Source\PSoC5/USBUART_1.c ****         break;
 594:Generated_Source\PSoC5/USBUART_1.c ****     }
 595:Generated_Source\PSoC5/USBUART_1.c **** 
 596:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART_1.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR1_REG &= (uint32) ~USBUART_1_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART_1.c **** 
 600:Generated_Source\PSoC5/USBUART_1.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_EP0_CNT_REG = USBUART_1_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART_1.c **** 
 603:Generated_Source\PSoC5/USBUART_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_EP0_CR_REG = USBUART_1_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART_1.c **** 
 606:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART_1.c ****         if (NULL != USBUART_1_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART_1.c ****         {
 609:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART_1.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART_1.c ****             */
 612:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_LPM_CTRL_REG = (USBUART_1_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART_1.c ****                                              USBUART_1_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART_1.c ****         }
 615:Generated_Source\PSoC5/USBUART_1.c ****         else
 616:Generated_Source\PSoC5/USBUART_1.c ****         {
 617:Generated_Source\PSoC5/USBUART_1.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_LPM_CTRL_REG &= (uint32) ~USBUART_1_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART_1.c ****         }
 620:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART_1.c **** 
 622:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR0_REG = USBUART_1_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART_1.c **** 
 625:Generated_Source\PSoC5/USBUART_1.c **** #else
 626:Generated_Source\PSoC5/USBUART_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_EP0_CR_REG = USBUART_1_MODE_STALL_IN_OUT;
 318              		.loc 1 627 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 18


 319 0058 104B     		ldr	r3, .L13+40
 320 005a 0322     		movs	r2, #3
 321 005c 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART_1.c **** 
 629:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR0_REG = USBUART_1_DEFUALT_CR0;
 322              		.loc 1 630 0
 323 005e 8022     		movs	r2, #128
 324 0060 03F8202C 		strb	r2, [r3, #-32]
 631:Generated_Source\PSoC5/USBUART_1.c ****     CyDelayCycles(USBUART_1_WAIT_CR0_REG_STABILITY);
 325              		.loc 1 631 0
 326 0064 0120     		movs	r0, #1
 327              	.LVL23:
 328 0066 FFF7FEFF 		bl	CyDelayCycles
 329              	.LVL24:
 632:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART_1.c **** 
 634:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USBIO_CR1_REG = USBUART_1_USBIO_CR1_USBPUEN;
 330              		.loc 1 635 0
 331 006a 0D4B     		ldr	r3, .L13+44
 332 006c 0422     		movs	r2, #4
 333 006e 1A70     		strb	r2, [r3]
 334 0070 08BD     		pop	{r3, pc}
 335              	.L14:
 336 0072 00BF     		.align	2
 337              	.L13:
 338 0074 00000000 		.word	USBUART_1_device
 339 0078 00000000 		.word	USBUART_1_transferState
 340 007c 00000000 		.word	USBUART_1_configurationChanged
 341 0080 00000000 		.word	USBUART_1_configuration
 342 0084 00000000 		.word	USBUART_1_interfaceNumber
 343 0088 00000000 		.word	USBUART_1_deviceAddress
 344 008c 00000000 		.word	USBUART_1_deviceStatus
 345 0090 00000000 		.word	USBUART_1_lastPacketSize
 346 0094 00E100E0 		.word	-536813312
 347 0098 09600040 		.word	1073766409
 348 009c 28600040 		.word	1073766440
 349 00a0 12600040 		.word	1073766418
 350              		.cfi_endproc
 351              	.LFE2:
 352              		.size	USBUART_1_InitComponent, .-USBUART_1_InitComponent
 353              		.section	.text.USBUART_1_Start,"ax",%progbits
 354              		.align	1
 355              		.global	USBUART_1_Start
 356              		.thumb
 357              		.thumb_func
 358              		.type	USBUART_1_Start, %function
 359              	USBUART_1_Start:
 360              	.LFB0:
 187:Generated_Source\PSoC5/USBUART_1.c ****     if (0u == USBUART_1_initVar)
 361              		.loc 1 187 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              	.LVL25:
 366 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 19


 367              		.cfi_def_cfa_offset 16
 368              		.cfi_offset 4, -16
 369              		.cfi_offset 5, -12
 370              		.cfi_offset 6, -8
 371              		.cfi_offset 14, -4
 188:Generated_Source\PSoC5/USBUART_1.c ****     {
 372              		.loc 1 188 0
 373 0002 074C     		ldr	r4, .L17
 187:Generated_Source\PSoC5/USBUART_1.c ****     if (0u == USBUART_1_initVar)
 374              		.loc 1 187 0
 375 0004 0546     		mov	r5, r0
 188:Generated_Source\PSoC5/USBUART_1.c ****     {
 376              		.loc 1 188 0
 377 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 187:Generated_Source\PSoC5/USBUART_1.c ****     if (0u == USBUART_1_initVar)
 378              		.loc 1 187 0
 379 0008 0E46     		mov	r6, r1
 188:Generated_Source\PSoC5/USBUART_1.c ****     {
 380              		.loc 1 188 0
 381 000a 1BB9     		cbnz	r3, .L16
 190:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_initVar = 1u;
 382              		.loc 1 190 0
 383 000c FFF7FEFF 		bl	USBUART_1_Init
 384              	.LVL26:
 191:Generated_Source\PSoC5/USBUART_1.c ****     }
 385              		.loc 1 191 0
 386 0010 0123     		movs	r3, #1
 387 0012 2370     		strb	r3, [r4]
 388              	.L16:
 194:Generated_Source\PSoC5/USBUART_1.c **** }
 389              		.loc 1 194 0
 390 0014 3146     		mov	r1, r6
 391 0016 2846     		mov	r0, r5
 195:Generated_Source\PSoC5/USBUART_1.c **** 
 392              		.loc 1 195 0
 393 0018 BDE87040 		pop	{r4, r5, r6, lr}
 394              		.cfi_restore 14
 395              		.cfi_restore 6
 396              		.cfi_restore 5
 397              		.cfi_restore 4
 398              		.cfi_def_cfa_offset 0
 194:Generated_Source\PSoC5/USBUART_1.c **** }
 399              		.loc 1 194 0
 400 001c FFF7FEBF 		b	USBUART_1_InitComponent
 401              	.LVL27:
 402              	.L18:
 403              		.align	2
 404              	.L17:
 405 0020 00000000 		.word	.LANCHOR0
 406              		.cfi_endproc
 407              	.LFE0:
 408              		.size	USBUART_1_Start, .-USBUART_1_Start
 409              		.section	.text.USBUART_1_ReInitComponent,"ax",%progbits
 410              		.align	1
 411              		.global	USBUART_1_ReInitComponent
 412              		.thumb
 413              		.thumb_func
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 20


 414              		.type	USBUART_1_ReInitComponent, %function
 415              	USBUART_1_ReInitComponent:
 416              	.LFB3:
 636:Generated_Source\PSoC5/USBUART_1.c **** }
 637:Generated_Source\PSoC5/USBUART_1.c **** 
 638:Generated_Source\PSoC5/USBUART_1.c **** 
 639:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_ReInitComponent
 641:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART_1.c **** *
 643:Generated_Source\PSoC5/USBUART_1.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART_1.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART_1.c **** *
 646:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART_1.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART_1.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART_1.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART_1.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART_1.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART_1.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART_1.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART_1.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART_1.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART_1.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART_1.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART_1.c **** *
 667:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART_1.c **** *  No.
 669:Generated_Source\PSoC5/USBUART_1.c **** *
 670:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART_1.c **** {
 417              		.loc 1 672 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 673:Generated_Source\PSoC5/USBUART_1.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART_1.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART_1.c ****     */
 676:Generated_Source\PSoC5/USBUART_1.c **** #if defined(USBUART_1_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART_1.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART_1.c **** 
 679:Generated_Source\PSoC5/USBUART_1.c ****     for (i = 0u; i < USBUART_1_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART_1.c ****     {
 681:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_hidProtocol[i] = USBUART_1_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBUART_1.c ****     }
 683:Generated_Source\PSoC5/USBUART_1.c **** #endif /* USBUART_1_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 21


 685:Generated_Source\PSoC5/USBUART_1.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_transferState   = USBUART_1_TRANS_STATE_IDLE;
 422              		.loc 1 686 0
 423 0000 0A4A     		ldr	r2, .L20
 424 0002 0023     		movs	r3, #0
 425 0004 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_configurationChanged = 0u;
 426              		.loc 1 687 0
 427 0006 0A4A     		ldr	r2, .L20+4
 428 0008 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_configuration   = 0u;
 429              		.loc 1 688 0
 430 000a 0A4A     		ldr	r2, .L20+8
 431 000c 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_interfaceNumber = 0u;
 432              		.loc 1 689 0
 433 000e 0A4A     		ldr	r2, .L20+12
 434 0010 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_deviceAddress   = 0u;
 435              		.loc 1 690 0
 436 0012 0A4A     		ldr	r2, .L20+16
 437 0014 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_deviceStatus    = 0u;
 438              		.loc 1 691 0
 439 0016 0A4A     		ldr	r2, .L20+20
 440 0018 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_lastPacketSize  = 0u;
 441              		.loc 1 692 0
 442 001a 0A4A     		ldr	r2, .L20+24
 443 001c 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBUART_1.c **** 
 694:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_EP0_CR_REG = USBUART_1_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART_1.c **** #else
 698:Generated_Source\PSoC5/USBUART_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_EP0_CR_REG = USBUART_1_MODE_STALL_IN_OUT;
 444              		.loc 1 699 0
 445 001e 0A4B     		ldr	r3, .L20+28
 446 0020 0322     		movs	r2, #3
 447 0022 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART_1.c **** 
 702:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR0_REG = USBUART_1_DEFUALT_CR0;
 448              		.loc 1 703 0
 449 0024 8022     		movs	r2, #128
 450 0026 03F8202C 		strb	r2, [r3, #-32]
 451 002a 7047     		bx	lr
 452              	.L21:
 453              		.align	2
 454              	.L20:
 455 002c 00000000 		.word	USBUART_1_transferState
 456 0030 00000000 		.word	USBUART_1_configurationChanged
 457 0034 00000000 		.word	USBUART_1_configuration
 458 0038 00000000 		.word	USBUART_1_interfaceNumber
 459 003c 00000000 		.word	USBUART_1_deviceAddress
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 22


 460 0040 00000000 		.word	USBUART_1_deviceStatus
 461 0044 00000000 		.word	USBUART_1_lastPacketSize
 462 0048 28600040 		.word	1073766440
 463              		.cfi_endproc
 464              	.LFE3:
 465              		.size	USBUART_1_ReInitComponent, .-USBUART_1_ReInitComponent
 466              		.section	.text.USBUART_1_Stop,"ax",%progbits
 467              		.align	1
 468              		.global	USBUART_1_Stop
 469              		.thumb
 470              		.thumb_func
 471              		.type	USBUART_1_Stop, %function
 472              	USBUART_1_Stop:
 473              	.LFB4:
 704:Generated_Source\PSoC5/USBUART_1.c **** }
 705:Generated_Source\PSoC5/USBUART_1.c **** 
 706:Generated_Source\PSoC5/USBUART_1.c **** 
 707:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_Stop
 709:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART_1.c **** *
 711:Generated_Source\PSoC5/USBUART_1.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART_1.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART_1.c **** *
 714:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_configuration
 716:Generated_Source\PSoC5/USBUART_1.c **** *
 717:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART_1.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART_1.c **** *
 722:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_deviceStatus
 723:Generated_Source\PSoC5/USBUART_1.c **** *
 724:Generated_Source\PSoC5/USBUART_1.c **** *   \ref USBUART_1_configurationChanged
 725:Generated_Source\PSoC5/USBUART_1.c **** *
 726:Generated_Source\PSoC5/USBUART_1.c **** *   USBUART_1_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART_1.c **** *
 728:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_Stop(void) 
 730:Generated_Source\PSoC5/USBUART_1.c **** {
 474              		.loc 1 730 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBUART_1.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART_1.c **** 
 733:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART_1.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_Stop_DMA(USBUART_1_MAX_EP);
 736:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART_1.c **** 
 738:Generated_Source\PSoC5/USBUART_1.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 23


 482              		.loc 1 738 0
 483 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 484              	.LVL28:
 739:Generated_Source\PSoC5/USBUART_1.c **** 
 740:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR0_REG &= (uint8) ~USBUART_1_CR0_ENABLE;
 485              		.loc 1 741 0
 486 0006 214A     		ldr	r2, .L23
 487 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 488 000a 03F07F03 		and	r3, r3, #127
 489 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART_1.c **** 
 743:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USBIO_CR1_REG &= (uint8) ~ USBUART_1_USBIO_CR1_USBPUEN;
 490              		.loc 1 744 0
 491 0010 937A     		ldrb	r3, [r2, #10]	@ zero_extendqisi2
 492 0012 03F0FB03 		and	r3, r3, #251
 493 0016 9372     		strb	r3, [r2, #10]
 745:Generated_Source\PSoC5/USBUART_1.c **** 
 746:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_POWER_CTRL_REG &= (uint32) ~USBUART_1_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART_1.c **** #else
 750:Generated_Source\PSoC5/USBUART_1.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_ACT_CFG_REG  &= (uint8) ~USBUART_1_PM_ACT_EN_FSUSB;
 494              		.loc 1 751 0
 495 0018 A2F5E352 		sub	r2, r2, #7264
 496 001c 033A     		subs	r2, r2, #3
 497 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 498 0020 03F0FE03 		and	r3, r3, #254
 499 0024 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_PM_STBY_CFG_REG &= (uint8) ~USBUART_1_PM_STBY_EN_FSUSB;
 500              		.loc 1 752 0
 501 0026 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 502 0028 03F0FE03 		and	r3, r3, #254
 503 002c 1374     		strb	r3, [r2, #16]
 753:Generated_Source\PSoC5/USBUART_1.c **** 
 754:Generated_Source\PSoC5/USBUART_1.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART_1.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_DM_INP_DIS_REG |= (uint8) USBUART_1_DM_MASK;
 504              		.loc 1 756 0
 505 002e 184B     		ldr	r3, .L23+4
 506 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 507 0032 42F08002 		orr	r2, r2, #128
 508 0036 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_DP_INP_DIS_REG |= (uint8) USBUART_1_DP_MASK;
 509              		.loc 1 757 0
 510 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 511 003a 42F04002 		orr	r2, r2, #64
 512 003e 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBUART_1.c **** 
 759:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART_1.c **** 
 761:Generated_Source\PSoC5/USBUART_1.c ****     CyExitCriticalSection(enableInterrupts);
 513              		.loc 1 761 0
 514 0040 FFF7FEFF 		bl	CyExitCriticalSection
 515              	.LVL29:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 24


 762:Generated_Source\PSoC5/USBUART_1.c **** 
 763:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART_1.c ****     CyIntDisable(USBUART_1_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART_1.c ****     CyIntDisable(USBUART_1_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART_1.c ****     CyIntDisable(USBUART_1_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART_1.c **** #else
 769:Generated_Source\PSoC5/USBUART_1.c **** 
 770:Generated_Source\PSoC5/USBUART_1.c ****     CyIntDisable(USBUART_1_BUS_RESET_VECT_NUM);
 516              		.loc 1 770 0
 517 0044 134B     		ldr	r3, .L23+8
 518 0046 4FF40002 		mov	r2, #8388608
 519 004a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART_1.c ****     CyIntDisable(USBUART_1_EP_0_VECT_NUM);
 520              		.loc 1 771 0
 521 004c 4FF08072 		mov	r2, #16777216
 522 0050 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART_1.c **** 
 773:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_SOF_VECT_NUM);
 523              		.loc 1 774 0
 524 0052 4FF40012 		mov	r2, #2097152
 525 0056 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART_1.c **** 
 777:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_1_VECT_NUM);
 526              		.loc 1 778 0
 527 0058 0122     		movs	r2, #1
 528 005a 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART_1.c **** 
 781:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_2_VECT_NUM);
 529              		.loc 1 782 0
 530 005c 0222     		movs	r2, #2
 531 005e 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART_1.c **** 
 785:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_3_VECT_NUM);
 532              		.loc 1 786 0
 533 0060 0422     		movs	r2, #4
 534 0062 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART_1.c **** 
 789:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART_1.c **** 
 793:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART_1.c **** 
 797:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* USBUART_1_EP6_ISR_REMOVE */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 25


 800:Generated_Source\PSoC5/USBUART_1.c **** 
 801:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART_1.c **** 
 805:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART_1.c **** 
 809:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART_1.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART_1.c ****         (void) USBUART_1_Dp_ClearInterrupt();
 535              		.loc 1 811 0
 536 0064 FFF7FEFF 		bl	USBUART_1_Dp_ClearInterrupt
 537              	.LVL30:
 812:Generated_Source\PSoC5/USBUART_1.c ****         CyIntClearPending(USBUART_1_DP_INTC_VECT_NUM);
 538              		.loc 1 812 0
 539 0068 0B4B     		ldr	r3, .L23+12
 540 006a 4FF48052 		mov	r2, #4096
 541 006e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART_1.c **** 
 815:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART_1.c **** 
 817:Generated_Source\PSoC5/USBUART_1.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_configurationChanged = 0u;
 542              		.loc 1 818 0
 543 0070 0A4A     		ldr	r2, .L23+16
 544 0072 0023     		movs	r3, #0
 545 0074 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_configuration   = 0u;
 546              		.loc 1 819 0
 547 0076 0A4A     		ldr	r2, .L23+20
 548 0078 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_interfaceNumber = 0u;
 549              		.loc 1 820 0
 550 007a 0A4A     		ldr	r2, .L23+24
 551 007c 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_deviceAddress   = 0u;
 552              		.loc 1 821 0
 553 007e 0A4A     		ldr	r2, .L23+28
 554 0080 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_deviceStatus    = 0u;
 555              		.loc 1 822 0
 556 0082 0A4A     		ldr	r2, .L23+32
 557 0084 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBUART_1.c **** 
 824:Generated_Source\PSoC5/USBUART_1.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_initVar = 0u;
 558              		.loc 1 825 0
 559 0086 0A4A     		ldr	r2, .L23+36
 560 0088 1370     		strb	r3, [r2]
 561 008a 08BD     		pop	{r3, pc}
 562              	.L24:
 563              		.align	2
 564              	.L23:
 565 008c 08600040 		.word	1073766408
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 26


 566 0090 F8510040 		.word	1073762808
 567 0094 80E100E0 		.word	-536813184
 568 0098 80E200E0 		.word	-536812928
 569 009c 00000000 		.word	USBUART_1_configurationChanged
 570 00a0 00000000 		.word	USBUART_1_configuration
 571 00a4 00000000 		.word	USBUART_1_interfaceNumber
 572 00a8 00000000 		.word	USBUART_1_deviceAddress
 573 00ac 00000000 		.word	USBUART_1_deviceStatus
 574 00b0 00000000 		.word	.LANCHOR0
 575              		.cfi_endproc
 576              	.LFE4:
 577              		.size	USBUART_1_Stop, .-USBUART_1_Stop
 578              		.section	.text.USBUART_1_CheckActivity,"ax",%progbits
 579              		.align	1
 580              		.global	USBUART_1_CheckActivity
 581              		.thumb
 582              		.thumb_func
 583              		.type	USBUART_1_CheckActivity, %function
 584              	USBUART_1_CheckActivity:
 585              	.LFB5:
 826:Generated_Source\PSoC5/USBUART_1.c **** }
 827:Generated_Source\PSoC5/USBUART_1.c **** 
 828:Generated_Source\PSoC5/USBUART_1.c **** 
 829:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_CheckActivity
 831:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART_1.c **** *
 833:Generated_Source\PSoC5/USBUART_1.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART_1.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART_1.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART_1.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART_1.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART_1.c **** *
 839:Generated_Source\PSoC5/USBUART_1.c **** *
 840:Generated_Source\PSoC5/USBUART_1.c **** * \return
 841:Generated_Source\PSoC5/USBUART_1.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART_1.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART_1.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART_1.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART_1.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART_1.c **** *
 847:Generated_Source\PSoC5/USBUART_1.c **** *
 848:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART_1.c **** {
 586              		.loc 1 850 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBUART_1.c ****     uint8 cr1Reg = USBUART_1_CR1_REG;
 591              		.loc 1 851 0
 592 0000 044B     		ldr	r3, .L26
 593 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 594 0004 C0B2     		uxtb	r0, r0
 595              	.LVL31:
 852:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 27


 853:Generated_Source\PSoC5/USBUART_1.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_CR1_REG = (cr1Reg & (uint8) ~USBUART_1_CR1_BUS_ACTIVITY);
 596              		.loc 1 854 0
 597 0006 00F0FB02 		and	r2, r0, #251
 598 000a 1A70     		strb	r2, [r3]
 855:Generated_Source\PSoC5/USBUART_1.c **** 
 856:Generated_Source\PSoC5/USBUART_1.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART_1.c ****     return ((0u != (cr1Reg & USBUART_1_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 858:Generated_Source\PSoC5/USBUART_1.c **** }
 599              		.loc 1 858 0
 600 000c C0F38000 		ubfx	r0, r0, #2, #1
 601              	.LVL32:
 602 0010 7047     		bx	lr
 603              	.L27:
 604 0012 00BF     		.align	2
 605              	.L26:
 606 0014 09600040 		.word	1073766409
 607              		.cfi_endproc
 608              	.LFE5:
 609              		.size	USBUART_1_CheckActivity, .-USBUART_1_CheckActivity
 610              		.section	.text.USBUART_1_GetConfiguration,"ax",%progbits
 611              		.align	1
 612              		.global	USBUART_1_GetConfiguration
 613              		.thumb
 614              		.thumb_func
 615              		.type	USBUART_1_GetConfiguration, %function
 616              	USBUART_1_GetConfiguration:
 617              	.LFB6:
 859:Generated_Source\PSoC5/USBUART_1.c **** 
 860:Generated_Source\PSoC5/USBUART_1.c **** 
 861:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_GetConfiguration
 863:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART_1.c **** *
 865:Generated_Source\PSoC5/USBUART_1.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART_1.c **** *
 867:Generated_Source\PSoC5/USBUART_1.c **** * \return
 868:Generated_Source\PSoC5/USBUART_1.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART_1.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART_1.c **** *
 871:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART_1.c **** {
 618              		.loc 1 873 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBUART_1.c ****     return (USBUART_1_configuration);
 623              		.loc 1 874 0
 624 0000 014B     		ldr	r3, .L29
 625 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBUART_1.c **** }
 626              		.loc 1 875 0
 627 0004 7047     		bx	lr
 628              	.L30:
 629 0006 00BF     		.align	2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 28


 630              	.L29:
 631 0008 00000000 		.word	USBUART_1_configuration
 632              		.cfi_endproc
 633              	.LFE6:
 634              		.size	USBUART_1_GetConfiguration, .-USBUART_1_GetConfiguration
 635              		.section	.text.USBUART_1_IsConfigurationChanged,"ax",%progbits
 636              		.align	1
 637              		.global	USBUART_1_IsConfigurationChanged
 638              		.thumb
 639              		.thumb_func
 640              		.type	USBUART_1_IsConfigurationChanged, %function
 641              	USBUART_1_IsConfigurationChanged:
 642              	.LFB7:
 876:Generated_Source\PSoC5/USBUART_1.c **** 
 877:Generated_Source\PSoC5/USBUART_1.c **** 
 878:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART_1.c **** *
 882:Generated_Source\PSoC5/USBUART_1.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART_1.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART_1.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART_1.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART_1.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART_1.c **** *
 888:Generated_Source\PSoC5/USBUART_1.c **** * \return
 889:Generated_Source\PSoC5/USBUART_1.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART_1.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART_1.c **** *
 892:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART_1.c **** *
 894:Generated_Source\PSoC5/USBUART_1.c **** *  \ref USBUART_1_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART_1.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART_1.c **** *
 897:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART_1.c **** {
 643              		.loc 1 899 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL33:
 900:Generated_Source\PSoC5/USBUART_1.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBUART_1.c **** 
 902:Generated_Source\PSoC5/USBUART_1.c ****     if (USBUART_1_configurationChanged != 0u)
 649              		.loc 1 902 0
 650 0000 044B     		ldr	r3, .L34
 651 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 652 0004 02F0FF00 		and	r0, r2, #255
 653 0008 1AB1     		cbz	r2, .L32
 903:Generated_Source\PSoC5/USBUART_1.c ****     {
 904:Generated_Source\PSoC5/USBUART_1.c ****         res = USBUART_1_configurationChanged;
 654              		.loc 1 904 0
 655 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 905:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_configurationChanged = 0u;
 656              		.loc 1 905 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 29


 657 000c 0022     		movs	r2, #0
 904:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_configurationChanged = 0u;
 658              		.loc 1 904 0
 659 000e C0B2     		uxtb	r0, r0
 660              	.LVL34:
 661              		.loc 1 905 0
 662 0010 1A70     		strb	r2, [r3]
 663              	.LVL35:
 664              	.L32:
 906:Generated_Source\PSoC5/USBUART_1.c ****     }
 907:Generated_Source\PSoC5/USBUART_1.c **** 
 908:Generated_Source\PSoC5/USBUART_1.c ****     return (res);
 909:Generated_Source\PSoC5/USBUART_1.c **** }
 665              		.loc 1 909 0
 666 0012 7047     		bx	lr
 667              	.L35:
 668              		.align	2
 669              	.L34:
 670 0014 00000000 		.word	USBUART_1_configurationChanged
 671              		.cfi_endproc
 672              	.LFE7:
 673              		.size	USBUART_1_IsConfigurationChanged, .-USBUART_1_IsConfigurationChanged
 674              		.section	.text.USBUART_1_GetInterfaceSetting,"ax",%progbits
 675              		.align	1
 676              		.global	USBUART_1_GetInterfaceSetting
 677              		.thumb
 678              		.thumb_func
 679              		.type	USBUART_1_GetInterfaceSetting, %function
 680              	USBUART_1_GetInterfaceSetting:
 681              	.LFB8:
 910:Generated_Source\PSoC5/USBUART_1.c **** 
 911:Generated_Source\PSoC5/USBUART_1.c **** 
 912:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART_1.c **** *
 916:Generated_Source\PSoC5/USBUART_1.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART_1.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART_1.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART_1.c **** *
 920:Generated_Source\PSoC5/USBUART_1.c **** *  \param
 921:Generated_Source\PSoC5/USBUART_1.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART_1.c **** *
 923:Generated_Source\PSoC5/USBUART_1.c **** * \return
 924:Generated_Source\PSoC5/USBUART_1.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART_1.c **** *
 926:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART_1.c **** uint8  USBUART_1_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART_1.c ****                                                     
 929:Generated_Source\PSoC5/USBUART_1.c **** {
 682              		.loc 1 929 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL36:
 930:Generated_Source\PSoC5/USBUART_1.c ****     return (USBUART_1_interfaceSetting[interfaceNumber]);
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 30


 688              		.loc 1 930 0
 689 0000 014B     		ldr	r3, .L37
 690 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 691              	.LVL37:
 931:Generated_Source\PSoC5/USBUART_1.c **** }
 692              		.loc 1 931 0
 693 0004 7047     		bx	lr
 694              	.L38:
 695 0006 00BF     		.align	2
 696              	.L37:
 697 0008 00000000 		.word	USBUART_1_interfaceSetting
 698              		.cfi_endproc
 699              	.LFE8:
 700              		.size	USBUART_1_GetInterfaceSetting, .-USBUART_1_GetInterfaceSetting
 701              		.section	.text.USBUART_1_GetEPState,"ax",%progbits
 702              		.align	1
 703              		.global	USBUART_1_GetEPState
 704              		.thumb
 705              		.thumb_func
 706              		.type	USBUART_1_GetEPState, %function
 707              	USBUART_1_GetEPState:
 708              	.LFB9:
 932:Generated_Source\PSoC5/USBUART_1.c **** 
 933:Generated_Source\PSoC5/USBUART_1.c **** 
 934:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_GetEPState
 936:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART_1.c **** *
 938:Generated_Source\PSoC5/USBUART_1.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART_1.c **** *
 940:Generated_Source\PSoC5/USBUART_1.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART_1.c **** *
 942:Generated_Source\PSoC5/USBUART_1.c **** * \return
 943:Generated_Source\PSoC5/USBUART_1.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART_1.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART_1.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART_1.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART_1.c **** *
 948:Generated_Source\PSoC5/USBUART_1.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART_1.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART_1.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART_1.c **** *
 958:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART_1.c **** {
 709              		.loc 1 960 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL38:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 31


 961:Generated_Source\PSoC5/USBUART_1.c ****     return (USBUART_1_EP[epNumber].apiEpState);
 715              		.loc 1 961 0
 716 0000 024A     		ldr	r2, .L40
 717 0002 0C23     		movs	r3, #12
 718 0004 03FB0020 		mla	r0, r3, r0, r2
 719              	.LVL39:
 720 0008 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBUART_1.c **** }
 721              		.loc 1 962 0
 722 000a 7047     		bx	lr
 723              	.L41:
 724              		.align	2
 725              	.L40:
 726 000c 00000000 		.word	USBUART_1_EP
 727              		.cfi_endproc
 728              	.LFE9:
 729              		.size	USBUART_1_GetEPState, .-USBUART_1_GetEPState
 730              		.section	.text.USBUART_1_GetEPCount,"ax",%progbits
 731              		.align	1
 732              		.global	USBUART_1_GetEPCount
 733              		.thumb
 734              		.thumb_func
 735              		.type	USBUART_1_GetEPCount, %function
 736              	USBUART_1_GetEPCount:
 737              	.LFB10:
 963:Generated_Source\PSoC5/USBUART_1.c **** 
 964:Generated_Source\PSoC5/USBUART_1.c **** 
 965:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_GetEPCount
 967:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART_1.c **** *
 969:Generated_Source\PSoC5/USBUART_1.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART_1.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART_1.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART_1.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART_1.c **** *
 974:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART_1.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART_1.c **** *
 977:Generated_Source\PSoC5/USBUART_1.c **** * \return
 978:Generated_Source\PSoC5/USBUART_1.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART_1.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART_1.c **** *
 981:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART_1.c **** uint16 USBUART_1_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART_1.c **** {
 738              		.loc 1 983 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743              	.LVL40:
 984:Generated_Source\PSoC5/USBUART_1.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBUART_1.c **** 
 986:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 744              		.loc 1 986 0
 745 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 32


 746 0002 072B     		cmp	r3, #7
 747 0004 0CD8     		bhi	.L44
 748              	.LVL41:
 749              	.LBB4:
 750              	.LBB5:
 987:Generated_Source\PSoC5/USBUART_1.c ****     {
 988:Generated_Source\PSoC5/USBUART_1.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART_1.c ****         cntr  = ((uint16) USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_1_EPX_CNT0_MASK;
 751              		.loc 1 989 0
 752 0006 074A     		ldr	r2, .L45
 753 0008 064B     		ldr	r3, .L45
 754 000a 0001     		lsls	r0, r0, #4
 755              	.LVL42:
 756 000c 0344     		add	r3, r3, r0
 757 000e 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 758              	.LVL43:
 990:Generated_Source\PSoC5/USBUART_1.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 759              		.loc 1 990 0
 760 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 761 0012 00F00F00 		and	r0, r0, #15
 762              	.LVL44:
 991:Generated_Source\PSoC5/USBUART_1.c ****         cntr -= USBUART_1_EPX_CNTX_CRC_COUNT;
 763              		.loc 1 991 0
 764 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 765              	.LVL45:
 766 001a 0238     		subs	r0, r0, #2
 767 001c 80B2     		uxth	r0, r0
 768              	.LVL46:
 769 001e 7047     		bx	lr
 770              	.LVL47:
 771              	.L44:
 772              	.LBE5:
 773              	.LBE4:
 984:Generated_Source\PSoC5/USBUART_1.c **** 
 774              		.loc 1 984 0
 775 0020 0020     		movs	r0, #0
 776              	.LVL48:
 992:Generated_Source\PSoC5/USBUART_1.c ****     }
 993:Generated_Source\PSoC5/USBUART_1.c **** 
 994:Generated_Source\PSoC5/USBUART_1.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBUART_1.c **** }
 777              		.loc 1 995 0
 778 0022 7047     		bx	lr
 779              	.L46:
 780              		.align	2
 781              	.L45:
 782 0024 FC5F0040 		.word	1073766396
 783              		.cfi_endproc
 784              	.LFE10:
 785              		.size	USBUART_1_GetEPCount, .-USBUART_1_GetEPCount
 786              		.section	.text.USBUART_1_LoadInEP,"ax",%progbits
 787              		.align	1
 788              		.global	USBUART_1_LoadInEP
 789              		.thumb
 790              		.thumb_func
 791              		.type	USBUART_1_LoadInEP, %function
 792              	USBUART_1_LoadInEP:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 33


 793              	.LFB11:
 996:Generated_Source\PSoC5/USBUART_1.c **** 
 997:Generated_Source\PSoC5/USBUART_1.c **** 
 998:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART_1.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART_1.c ****     * Function Name: USBUART_1_InitEpDma
1002:Generated_Source\PSoC5/USBUART_1.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART_1.c ****     *
1004:Generated_Source\PSoC5/USBUART_1.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART_1.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART_1.c ****     *
1007:Generated_Source\PSoC5/USBUART_1.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART_1.c ****     static void USBUART_1_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART_1.c ****     {
1010:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep1_dma_CHANNEL] = USBUART_1_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART_1.c **** 
1014:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep2_dma_CHANNEL] = USBUART_1_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART_1.c **** 
1018:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep3_dma_CHANNEL] = USBUART_1_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART_1.c **** 
1022:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep4_dma_CHANNEL] = USBUART_1_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART_1.c **** 
1026:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep5_dma_CHANNEL] = USBUART_1_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART_1.c **** 
1030:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep6_dma_CHANNEL] = USBUART_1_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART_1.c **** 
1034:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep7_dma_CHANNEL] = USBUART_1_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART_1.c **** 
1038:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_1_ep8_dma_CHANNEL] = USBUART_1_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART_1.c **** 
1042:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART_1.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep1_dma_SetInterruptCallback(&USBUART_1_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART_1.c **** 
1048:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep2_dma_SetInterruptCallback(&USBUART_1_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 34


1052:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep3_dma_SetInterruptCallback(&USBUART_1_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART_1.c **** 
1056:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep4_dma_SetInterruptCallback(&USBUART_1_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART_1.c **** 
1060:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep5_dma_SetInterruptCallback(&USBUART_1_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART_1.c **** 
1064:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep6_dma_SetInterruptCallback(&USBUART_1_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART_1.c **** 
1068:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep7_dma_SetInterruptCallback(&USBUART_1_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART_1.c **** 
1072:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART_1.c ****             (void) USBUART_1_ep8_dma_SetInterruptCallback(&USBUART_1_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART_1.c ****     }
1077:Generated_Source\PSoC5/USBUART_1.c **** #else
1078:Generated_Source\PSoC5/USBUART_1.c **** 
1079:Generated_Source\PSoC5/USBUART_1.c **** 
1080:Generated_Source\PSoC5/USBUART_1.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART_1.c ****     * Function Name: USBUART_1_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART_1.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART_1.c ****     *
1084:Generated_Source\PSoC5/USBUART_1.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART_1.c ****     *  USBUART_1_LoadInEP() or USBUART_1_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART_1.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART_1.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART_1.c ****     *
1089:Generated_Source\PSoC5/USBUART_1.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART_1.c ****     *
1091:Generated_Source\PSoC5/USBUART_1.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART_1.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART_1.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART_1.c ****     *
1095:Generated_Source\PSoC5/USBUART_1.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART_1.c ****     *
1097:Generated_Source\PSoC5/USBUART_1.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART_1.c ****     void USBUART_1_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART_1.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART_1.c ****     {
1101:Generated_Source\PSoC5/USBUART_1.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART_1.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART_1.c **** 
1104:Generated_Source\PSoC5/USBUART_1.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART_1.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART_1.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART_1.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART_1.c ****     #else
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 35


1109:Generated_Source\PSoC5/USBUART_1.c ****         if ((USBUART_1_EP[epNumber].addr & USBUART_1_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART_1.c ****         {
1111:Generated_Source\PSoC5/USBUART_1.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART_1.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART_1.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART_1.c ****         }
1115:Generated_Source\PSoC5/USBUART_1.c ****         else
1116:Generated_Source\PSoC5/USBUART_1.c ****         {
1117:Generated_Source\PSoC5/USBUART_1.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART_1.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART_1.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART_1.c ****         }
1121:Generated_Source\PSoC5/USBUART_1.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART_1.c **** 
1123:Generated_Source\PSoC5/USBUART_1.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART_1.c ****         {
1125:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART_1.c ****         case USBUART_1_EP1:
1127:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaChan[epNumber] = USBUART_1_ep1_DmaInitialize(USBUART_1_DMA_BYTES_PER_BURST
1128:Generated_Source\PSoC5/USBUART_1.c ****                                                                                     USBUART_1_DMA_R
1129:Generated_Source\PSoC5/USBUART_1.c ****             break;
1130:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART_1.c **** 
1132:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART_1.c ****         case USBUART_1_EP2:
1134:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaChan[epNumber] = USBUART_1_ep2_DmaInitialize(USBUART_1_DMA_BYTES_PER_BURST
1135:Generated_Source\PSoC5/USBUART_1.c ****                                                                                     USBUART_1_DMA_R
1136:Generated_Source\PSoC5/USBUART_1.c ****             break;
1137:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART_1.c **** 
1139:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART_1.c ****             case USBUART_1_EP3:
1141:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaChan[epNumber] = USBUART_1_ep3_DmaInitialize(USBUART_1_DMA_BYTES_PER_B
1142:Generated_Source\PSoC5/USBUART_1.c ****                                                                                         USBUART_1_D
1143:Generated_Source\PSoC5/USBUART_1.c ****             break;
1144:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART_1.c **** 
1146:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART_1.c ****             case USBUART_1_EP4:
1148:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaChan[epNumber] = USBUART_1_ep4_DmaInitialize(USBUART_1_DMA_BYTES_PER_B
1149:Generated_Source\PSoC5/USBUART_1.c ****                                                                                         USBUART_1_D
1150:Generated_Source\PSoC5/USBUART_1.c ****             break;
1151:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART_1.c **** 
1153:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART_1.c ****             case USBUART_1_EP5:
1155:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaChan[epNumber] = USBUART_1_ep5_DmaInitialize(USBUART_1_DMA_BYTES_PER_B
1156:Generated_Source\PSoC5/USBUART_1.c ****                                                                                         USBUART_1_D
1157:Generated_Source\PSoC5/USBUART_1.c ****             break;
1158:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART_1.c **** 
1160:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART_1.c ****         case USBUART_1_EP6:
1162:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaChan[epNumber] = USBUART_1_ep6_DmaInitialize(USBUART_1_DMA_BYTES_PER_BURST
1163:Generated_Source\PSoC5/USBUART_1.c ****                                                                                     USBUART_1_DMA_R
1164:Generated_Source\PSoC5/USBUART_1.c ****             break;
1165:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA6_ACTIVE) */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 36


1166:Generated_Source\PSoC5/USBUART_1.c **** 
1167:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART_1.c ****         case USBUART_1_EP7:
1169:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaChan[epNumber] = USBUART_1_ep7_DmaInitialize(USBUART_1_DMA_BYTES_PER_B
1170:Generated_Source\PSoC5/USBUART_1.c ****                                                                                         USBUART_1_D
1171:Generated_Source\PSoC5/USBUART_1.c ****             break;
1172:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART_1.c **** 
1174:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART_1.c ****         case USBUART_1_EP8:
1176:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaChan[epNumber] = USBUART_1_ep8_DmaInitialize(USBUART_1_DMA_BYTES_PER_B
1177:Generated_Source\PSoC5/USBUART_1.c ****                                                                                         USBUART_1_D
1178:Generated_Source\PSoC5/USBUART_1.c ****             break;
1179:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART_1.c **** 
1181:Generated_Source\PSoC5/USBUART_1.c ****         default:
1182:Generated_Source\PSoC5/USBUART_1.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART_1.c ****             break;
1184:Generated_Source\PSoC5/USBUART_1.c ****         }
1185:Generated_Source\PSoC5/USBUART_1.c **** 
1186:Generated_Source\PSoC5/USBUART_1.c ****         if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
1187:Generated_Source\PSoC5/USBUART_1.c ****         {
1188:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART_1.c **** 
1190:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART_1.c ****         }
1194:Generated_Source\PSoC5/USBUART_1.c ****     }
1195:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART_1.c **** 
1197:Generated_Source\PSoC5/USBUART_1.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART_1.c ****     * Function Name: USBUART_1_Stop_DMA
1199:Generated_Source\PSoC5/USBUART_1.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART_1.c ****     *  
1201:Generated_Source\PSoC5/USBUART_1.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART_1.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART_1.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART_1.c ****     *  to trigger DMA re-configuration when USBUART_1_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART_1.c ****     *  USBUART_1_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART_1.c ****     *  
1207:Generated_Source\PSoC5/USBUART_1.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART_1.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART_1.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART_1.c ****     *  USBUART_1_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART_1.c ****     *
1212:Generated_Source\PSoC5/USBUART_1.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART_1.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART_1.c ****     *
1215:Generated_Source\PSoC5/USBUART_1.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART_1.c ****     void USBUART_1_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART_1.c ****     {
1218:Generated_Source\PSoC5/USBUART_1.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART_1.c **** 
1220:Generated_Source\PSoC5/USBUART_1.c ****         i = (epNumber < USBUART_1_MAX_EP) ? epNumber : USBUART_1_EP1;
1221:Generated_Source\PSoC5/USBUART_1.c **** 
1222:Generated_Source\PSoC5/USBUART_1.c ****         do
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 37


1223:Generated_Source\PSoC5/USBUART_1.c ****         {
1224:Generated_Source\PSoC5/USBUART_1.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART_1.c ****             if (0u != USBUART_1_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART_1.c ****             {
1227:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChDisable(USBUART_1_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART_1.c ****             }
1229:Generated_Source\PSoC5/USBUART_1.c ****         #else
1230:Generated_Source\PSoC5/USBUART_1.c ****             if(USBUART_1_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART_1.c ****             {
1232:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChDisable(USBUART_1_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART_1.c ****                 CyDmaTdFree(USBUART_1_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART_1.c ****             }
1236:Generated_Source\PSoC5/USBUART_1.c **** 
1237:Generated_Source\PSoC5/USBUART_1.c ****             #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART_1.c ****                 if(USBUART_1_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART_1.c ****                 {
1240:Generated_Source\PSoC5/USBUART_1.c ****                     CyDmaTdFree(USBUART_1_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART_1.c ****                 }
1243:Generated_Source\PSoC5/USBUART_1.c ****             #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART_1.c **** 
1245:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART_1.c ****             i++;
1247:Generated_Source\PSoC5/USBUART_1.c ****         }
1248:Generated_Source\PSoC5/USBUART_1.c ****         while ((i < USBUART_1_MAX_EP) && (epNumber == USBUART_1_MAX_EP));
1249:Generated_Source\PSoC5/USBUART_1.c ****     }
1250:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART_1.c **** 
1252:Generated_Source\PSoC5/USBUART_1.c **** 
1253:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART_1.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART_1.c ****     * Function Name: USBUART_1_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART_1.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART_1.c ****     *
1259:Generated_Source\PSoC5/USBUART_1.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART_1.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART_1.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART_1.c ****     *
1263:Generated_Source\PSoC5/USBUART_1.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART_1.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART_1.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART_1.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART_1.c ****     *
1268:Generated_Source\PSoC5/USBUART_1.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART_1.c ****     void USBUART_1_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART_1.c ****     {
1271:Generated_Source\PSoC5/USBUART_1.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART_1.c **** 
1273:Generated_Source\PSoC5/USBUART_1.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART_1.c ****         {
1275:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_1_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART_1.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART_1.c ****             CY_SET_REG16(convert, USBUART_1_inLength[epNumber] - USBUART_1_DMA_BYTES_PER_BURST);
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 38


1280:Generated_Source\PSoC5/USBUART_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_1_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART_1.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_1_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART_1.c ****                                             USBUART_1_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART_1.c ****         }
1286:Generated_Source\PSoC5/USBUART_1.c ****         else
1287:Generated_Source\PSoC5/USBUART_1.c ****         {
1288:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_1_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART_1.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART_1.c ****             CY_SET_REG16(convert, USBUART_1_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_1_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART_1.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_1_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART_1.c ****                                    (USBUART_1_DMA_BYTES_PER_BURST - USBUART_1_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART_1.c ****         }
1298:Generated_Source\PSoC5/USBUART_1.c **** 
1299:Generated_Source\PSoC5/USBUART_1.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART_1.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_1_DmaChan[epNumber]].basic_status[1u] = USBUART_1_DmaTd[epNumb
1301:Generated_Source\PSoC5/USBUART_1.c ****     }
1302:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART_1.c **** 
1305:Generated_Source\PSoC5/USBUART_1.c **** 
1306:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_LoadInEP
1308:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART_1.c **** *
1310:Generated_Source\PSoC5/USBUART_1.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART_1.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART_1.c **** *
1314:Generated_Source\PSoC5/USBUART_1.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART_1.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART_1.c **** *
1318:Generated_Source\PSoC5/USBUART_1.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART_1.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART_1.c **** *
1322:Generated_Source\PSoC5/USBUART_1.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART_1.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART_1.c **** *
1328:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART_1.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART_1.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART_1.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART_1.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART_1.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART_1.c **** *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 39


1337:Generated_Source\PSoC5/USBUART_1.c **** *
1338:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART_1.c **** *  No.
1340:Generated_Source\PSoC5/USBUART_1.c **** *
1341:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART_1.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART_1.c **** {
 794              		.loc 1 1344 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              	.LVL49:
1345:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 799              		.loc 1 1345 0
 800 0000 431E     		subs	r3, r0, #1
 801 0002 072B     		cmp	r3, #7
1344:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 802              		.loc 1 1344 0
 803 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 804              		.cfi_def_cfa_offset 20
 805              		.cfi_offset 4, -20
 806              		.cfi_offset 5, -16
 807              		.cfi_offset 6, -12
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810              		.loc 1 1345 0
 811 0006 31D8     		bhi	.L47
1346:Generated_Source\PSoC5/USBUART_1.c ****     {
1347:Generated_Source\PSoC5/USBUART_1.c ****     #if (!USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART_1.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART_1.c ****         if (length > (USBUART_1_EPX_DATA_BUF_MAX - USBUART_1_EP[epNumber].buffOffset))
 812              		.loc 1 1349 0
 813 0008 194B     		ldr	r3, .L54
 814 000a 0C25     		movs	r5, #12
 815 000c 05FB0035 		mla	r5, r5, r0, r3
 816 0010 EC88     		ldrh	r4, [r5, #6]
1350:Generated_Source\PSoC5/USBUART_1.c ****         {
1351:Generated_Source\PSoC5/USBUART_1.c ****             length = USBUART_1_EPX_DATA_BUF_MAX - USBUART_1_EP[epNumber].buffOffset;
1352:Generated_Source\PSoC5/USBUART_1.c ****         }
1353:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (!USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART_1.c **** 
1355:Generated_Source\PSoC5/USBUART_1.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_1_EP[epNumber]
 817              		.loc 1 1356 0
 818 0012 184F     		ldr	r7, .L54+4
1349:Generated_Source\PSoC5/USBUART_1.c ****         {
 819              		.loc 1 1349 0
 820 0014 A4B2     		uxth	r4, r4
 821 0016 C4F50074 		rsb	r4, r4, #512
 822 001a A242     		cmp	r2, r4
 823              		.loc 1 1356 0
 824 001c 4FF00C04 		mov	r4, #12
 825 0020 04FB0034 		mla	r4, r4, r0, r3
1351:Generated_Source\PSoC5/USBUART_1.c ****         }
 826              		.loc 1 1351 0
 827 0024 88BF     		it	hi
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 40


 828 0026 EA88     		ldrhhi	r2, [r5, #6]
 829              	.LVL50:
 830              		.loc 1 1356 0
 831 0028 E678     		ldrb	r6, [r4, #3]	@ zero_extendqisi2
1351:Generated_Source\PSoC5/USBUART_1.c ****         }
 832              		.loc 1 1351 0
 833 002a 84BF     		itt	hi
 834 002c C2F50072 		rsbhi	r2, r2, #512
 835 0030 92B2     		uxthhi	r2, r2
 836              	.LVL51:
 837 0032 104C     		ldr	r4, .L54+4
 838              		.loc 1 1356 0
 839 0034 46EA1226 		orr	r6, r6, r2, lsr #8
 840 0038 0501     		lsls	r5, r0, #4
 841 003a EE55     		strb	r6, [r5, r7]
 842 003c 2C44     		add	r4, r4, r5
1357:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 843              		.loc 1 1357 0
 844 003e D6B2     		uxtb	r6, r2
 845 0040 6670     		strb	r6, [r4, #1]
1358:Generated_Source\PSoC5/USBUART_1.c **** 
1359:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART_1.c ****         if (NULL != pData)
 846              		.loc 1 1360 0
 847 0042 41B9     		cbnz	r1, .L50
 848              	.L53:
1361:Generated_Source\PSoC5/USBUART_1.c ****         {
1362:Generated_Source\PSoC5/USBUART_1.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART_1.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART_1.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBUART_1.c ****             {
1366:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
1367:Generated_Source\PSoC5/USBUART_1.c ****             }
1368:Generated_Source\PSoC5/USBUART_1.c ****         }
1369:Generated_Source\PSoC5/USBUART_1.c **** 
1370:Generated_Source\PSoC5/USBUART_1.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
 849              		.loc 1 1371 0
 850 0044 0C22     		movs	r2, #12
 851              	.LVL52:
 852 0046 02FB0030 		mla	r0, r2, r0, r3
 853              	.LVL53:
 854 004a 0023     		movs	r3, #0
 855 004c 4370     		strb	r3, [r0, #1]
1372:Generated_Source\PSoC5/USBUART_1.c **** 
1373:Generated_Source\PSoC5/USBUART_1.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
 856              		.loc 1 1374 0
 857 004e 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 858 0050 DBB2     		uxtb	r3, r3
 859 0052 A370     		strb	r3, [r4, #2]
 860 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 861              	.LVL54:
 862              	.L50:
1360:Generated_Source\PSoC5/USBUART_1.c ****         {
 863              		.loc 1 1360 0
 864 0056 0E46     		mov	r6, r1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 41


 865              	.LBB6:
1366:Generated_Source\PSoC5/USBUART_1.c ****             }
 866              		.loc 1 1366 0
 867 0058 074F     		ldr	r7, .L54+8
 868 005a 2F44     		add	r7, r7, r5
 869              	.L51:
 870              	.LVL55:
1364:Generated_Source\PSoC5/USBUART_1.c ****             {
 871              		.loc 1 1364 0 discriminator 1
 872 005c 751A     		subs	r5, r6, r1
 873 005e ADB2     		uxth	r5, r5
 874 0060 AA42     		cmp	r2, r5
 875 0062 EFD9     		bls	.L53
1366:Generated_Source\PSoC5/USBUART_1.c ****             }
 876              		.loc 1 1366 0 discriminator 3
 877 0064 16F8015B 		ldrb	r5, [r6], #1	@ zero_extendqisi2
 878              	.LVL56:
 879 0068 3D72     		strb	r5, [r7, #8]
 880              	.LVL57:
 881 006a F7E7     		b	.L51
 882              	.LVL58:
 883              	.L47:
 884 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 885              	.L55:
 886 006e 00BF     		.align	2
 887              	.L54:
 888 0070 00000000 		.word	USBUART_1_EP
 889 0074 FC5F0040 		.word	1073766396
 890 0078 70600040 		.word	1073766512
 891              	.LBE6:
 892              		.cfi_endproc
 893              	.LFE11:
 894              		.size	USBUART_1_LoadInEP, .-USBUART_1_LoadInEP
 895              		.section	.text.USBUART_1_EnableOutEP,"ax",%progbits
 896              		.align	1
 897              		.global	USBUART_1_EnableOutEP
 898              		.thumb
 899              		.thumb_func
 900              		.type	USBUART_1_EnableOutEP, %function
 901              	USBUART_1_EnableOutEP:
 902              	.LFB13:
1375:Generated_Source\PSoC5/USBUART_1.c **** 
1376:Generated_Source\PSoC5/USBUART_1.c ****     #else
1377:Generated_Source\PSoC5/USBUART_1.c **** 
1378:Generated_Source\PSoC5/USBUART_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART_1.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART_1.c ****             if (DMA_INVALID_TD == USBUART_1_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART_1.c ****             {
1382:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART_1.c ****             }
1384:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART_1.c **** 
1386:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART_1.c **** 
1390:Generated_Source\PSoC5/USBUART_1.c ****             if ((pData != NULL) && (length > 0u))
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 42


1391:Generated_Source\PSoC5/USBUART_1.c ****             {
1392:Generated_Source\PSoC5/USBUART_1.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART_1.c ****                 uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART_1.c **** 
1395:Generated_Source\PSoC5/USBUART_1.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART_1.c **** 
1398:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_A
1401:Generated_Source\PSoC5/USBUART_1.c **** 
1402:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART_1.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COM
1405:Generated_Source\PSoC5/USBUART_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART_1.c **** 
1407:Generated_Source\PSoC5/USBUART_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART_1.c **** 
1410:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART_1.c ****             #else
1413:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChDisable(USBUART_1_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaTdSetConfiguration(USBUART_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD
1416:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaTdSetAddress(USBUART_1_DmaTd[epNumber], LO16((uint32) pData), LO16((uin
1417:Generated_Source\PSoC5/USBUART_1.c **** 
1418:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChSetInitialTd(USBUART_1_DmaChan[epNumber], USBUART_1_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChEnable(USBUART_1_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART_1.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART_1.c **** 
1423:Generated_Source\PSoC5/USBUART_1.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_1_ARB_EPX_CFG_DMA_
1425:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_1_ARB_EPX_CFG_DMA_
1426:Generated_Source\PSoC5/USBUART_1.c **** 
1427:Generated_Source\PSoC5/USBUART_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART_1.c ****             }
1429:Generated_Source\PSoC5/USBUART_1.c ****             else
1430:Generated_Source\PSoC5/USBUART_1.c ****             {
1431:Generated_Source\PSoC5/USBUART_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART_1.c ****             }
1434:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART_1.c **** 
1436:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART_1.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART_1.c ****             {
1439:Generated_Source\PSoC5/USBUART_1.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART_1.c ****                 uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART_1.c **** 
1442:Generated_Source\PSoC5/USBUART_1.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART_1.c **** 
1445:Generated_Source\PSoC5/USBUART_1.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 43


1448:Generated_Source\PSoC5/USBUART_1.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_A
1450:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) &USBUART_1_A
1451:Generated_Source\PSoC5/USBUART_1.c **** 
1452:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COM
1454:Generated_Source\PSoC5/USBUART_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART_1.c **** 
1456:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR1, USBUART_1_DMA_COM
1458:Generated_Source\PSoC5/USBUART_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART_1.c **** 
1460:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART_1.c **** 
1463:Generated_Source\PSoC5/USBUART_1.c **** 
1464:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART_1.c **** 
1467:Generated_Source\PSoC5/USBUART_1.c ****             #else
1468:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChDisable(USBUART_1_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART_1.c **** 
1470:Generated_Source\PSoC5/USBUART_1.c ****                 #if (USBUART_1_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART_1.c **** 
1474:Generated_Source\PSoC5/USBUART_1.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetConfiguration(USBUART_1_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART_1.c ****                         (length > USBUART_1_DMA_BYTES_PER_BURST) ? USBUART_1_DMA_BYTES_PER_BURST : 
1477:Generated_Source\PSoC5/USBUART_1.c ****                         USBUART_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetAddress(USBUART_1_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART_1.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART_1.c **** 
1481:Generated_Source\PSoC5/USBUART_1.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART_1.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART_1.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART_1.c ****                     */
1485:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetConfiguration(USBUART_1_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART_1.c ****                                                    USBUART_1_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART_1.c ****                                                    USBUART_1_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART_1.c **** 
1489:Generated_Source\PSoC5/USBUART_1.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetAddress(USBUART_1_DmaNextTd[epNumber], LO16((uint32) &clearInD
1491:Generated_Source\PSoC5/USBUART_1.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART_1.c ****                 #else
1493:Generated_Source\PSoC5/USBUART_1.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetConfiguration(USBUART_1_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART_1.c ****                                                    USBUART_1_DmaTd[epNumber], TD_TERMIN_EN | TD_INC
1496:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetAddress(USBUART_1_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART_1.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART_1.c ****                 #endif /* (USBUART_1_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART_1.c **** 
1500:Generated_Source\PSoC5/USBUART_1.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaClearPendingDrq(USBUART_1_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChSetInitialTd(USBUART_1_DmaChan[epNumber], USBUART_1_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART_1.c ****                 (void) CyDmaChEnable(USBUART_1_DmaChan[epNumber], 1u);
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 44


1505:Generated_Source\PSoC5/USBUART_1.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART_1.c ****             }
1507:Generated_Source\PSoC5/USBUART_1.c ****             else
1508:Generated_Source\PSoC5/USBUART_1.c ****             {
1509:Generated_Source\PSoC5/USBUART_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART_1.c **** 
1512:Generated_Source\PSoC5/USBUART_1.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART_1.c ****                 {
1514:Generated_Source\PSoC5/USBUART_1.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART_1.c ****                     uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART_1.c **** 
1518:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_1_DMA_BYTES_PER_B
1520:Generated_Source\PSoC5/USBUART_1.c **** 
1521:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_1_DMA_BYTES_PE
1523:Generated_Source\PSoC5/USBUART_1.c **** 
1524:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpBurstCnt[epNumber] += (0u != USBUART_1_DmaEpLastBurstEl[epNumber
1526:Generated_Source\PSoC5/USBUART_1.c **** 
1527:Generated_Source\PSoC5/USBUART_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpLastBurstEl[epNumber] = (0u != USBUART_1_DmaEpLastBurstEl[epNumb
1529:Generated_Source\PSoC5/USBUART_1.c ****                                                                           (USBUART_1_DmaEpLastBurst
1530:Generated_Source\PSoC5/USBUART_1.c ****                                                                           (USBUART_1_DMA_BYTES_PER_
1531:Generated_Source\PSoC5/USBUART_1.c **** 
1532:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART_1.c ****                     lengthDescr0 = (1u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastB
1534:Generated_Source\PSoC5/USBUART_1.c ****                     lengthDescr1 = (2u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastB
1535:Generated_Source\PSoC5/USBUART_1.c **** 
1536:Generated_Source\PSoC5/USBUART_1.c **** 
1537:Generated_Source\PSoC5/USBUART_1.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_1_DmaEpBurstCnt[epNumbe
1539:Generated_Source\PSoC5/USBUART_1.c ****                                                                             USBUART_1_DMA_DESCR0_MA
1540:Generated_Source\PSoC5/USBUART_1.c **** 
1541:Generated_Source\PSoC5/USBUART_1.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART_1.c **** 
1544:Generated_Source\PSoC5/USBUART_1.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) ((uint32
1546:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) ((uint32
1547:Generated_Source\PSoC5/USBUART_1.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART_1.c **** 
1549:Generated_Source\PSoC5/USBUART_1.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetNumDataElements(channelNum, USBUART_1_DMA_DESCR0, lengthDescr
1551:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetNumDataElements(channelNum, USBUART_1_DMA_DESCR1, lengthDescr
1552:Generated_Source\PSoC5/USBUART_1.c **** 
1553:Generated_Source\PSoC5/USBUART_1.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART_1.c **** 
1557:Generated_Source\PSoC5/USBUART_1.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART_1.c ****                     if (USBUART_1_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART_1.c ****                     {
1560:Generated_Source\PSoC5/USBUART_1.c ****                         USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART_1.c ****                     }                   
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 45


1562:Generated_Source\PSoC5/USBUART_1.c **** 
1563:Generated_Source\PSoC5/USBUART_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpBurstCnt[epNumber] = USBUART_1_DMA_GET_BURST_CNT(USBUART_1_DmaEp
1565:Generated_Source\PSoC5/USBUART_1.c **** 
1566:Generated_Source\PSoC5/USBUART_1.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART_1.c **** 
1569:Generated_Source\PSoC5/USBUART_1.c ****                 #elif (USBUART_1_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART_1.c **** 
1573:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaChDisable(USBUART_1_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART_1.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART_1.c ****                         USBUART_1_DmaTd[epNumber], (length > USBUART_1_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART_1.c ****                         USBUART_1_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART_1.c ****                         USBUART_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaTdSetAddress(USBUART_1_DmaTd[epNumber], LO16((uint32)  USBUART_1_in
1580:Generated_Source\PSoC5/USBUART_1.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART_1.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaClearPendingDrq(USBUART_1_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART_1.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaChSetInitialTd(USBUART_1_DmaChan[epNumber], USBUART_1_DmaTd[epNumbe
1585:Generated_Source\PSoC5/USBUART_1.c ****                     (void) CyDmaChEnable(USBUART_1_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART_1.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART_1.c **** 
1588:Generated_Source\PSoC5/USBUART_1.c ****                 #if !defined (USBUART_1_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_1_ARB_EPX_CFG_IN_DATA_RD
1591:Generated_Source\PSoC5/USBUART_1.c ****                 #endif  /* (USBUART_1_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART_1.c **** 
1593:Generated_Source\PSoC5/USBUART_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART_1.c ****                 }
1595:Generated_Source\PSoC5/USBUART_1.c ****                 else
1596:Generated_Source\PSoC5/USBUART_1.c ****                 {
1597:Generated_Source\PSoC5/USBUART_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART_1.c ****                 }
1600:Generated_Source\PSoC5/USBUART_1.c ****             }
1601:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART_1.c ****     }
1604:Generated_Source\PSoC5/USBUART_1.c **** }
1605:Generated_Source\PSoC5/USBUART_1.c **** 
1606:Generated_Source\PSoC5/USBUART_1.c **** 
1607:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_ReadOutEP
1609:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART_1.c **** *
1611:Generated_Source\PSoC5/USBUART_1.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART_1.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART_1.c **** *
1615:Generated_Source\PSoC5/USBUART_1.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 46


1619:Generated_Source\PSoC5/USBUART_1.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART_1.c **** *
1621:Generated_Source\PSoC5/USBUART_1.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART_1.c **** *   transfer after calling the USBUART_1_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART_1.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART_1.c **** *
1627:Generated_Source\PSoC5/USBUART_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART_1.c **** *
1629:Generated_Source\PSoC5/USBUART_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART_1.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART_1.c **** *
1633:Generated_Source\PSoC5/USBUART_1.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART_1.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART_1.c **** *
1637:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART_1.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART_1.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART_1.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART_1.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART_1.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART_1.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART_1.c **** *
1646:Generated_Source\PSoC5/USBUART_1.c **** * \return
1647:Generated_Source\PSoC5/USBUART_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART_1.c **** *
1649:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART_1.c **** *  No.
1651:Generated_Source\PSoC5/USBUART_1.c **** *
1652:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART_1.c **** uint16 USBUART_1_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART_1.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART_1.c **** {
1656:Generated_Source\PSoC5/USBUART_1.c ****     if ((pData != NULL) && (epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
1657:Generated_Source\PSoC5/USBUART_1.c ****     {
1658:Generated_Source\PSoC5/USBUART_1.c ****     #if (!USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART_1.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART_1.c ****         length = (length > USBUART_1_GetEPCount(epNumber)) ? USBUART_1_GetEPCount(epNumber) : lengt
1661:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (!USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART_1.c **** 
1663:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART_1.c ****         {
1665:Generated_Source\PSoC5/USBUART_1.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART_1.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART_1.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBUART_1.c ****             {
1669:Generated_Source\PSoC5/USBUART_1.c ****                 pData[i] = (uint8) USBUART_1_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBUART_1.c ****             }
1671:Generated_Source\PSoC5/USBUART_1.c ****         }
1672:Generated_Source\PSoC5/USBUART_1.c **** 
1673:Generated_Source\PSoC5/USBUART_1.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART_1.c ****     #else
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 47


1676:Generated_Source\PSoC5/USBUART_1.c **** 
1677:Generated_Source\PSoC5/USBUART_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART_1.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART_1.c ****             if (DMA_INVALID_TD == USBUART_1_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART_1.c ****             {
1681:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART_1.c ****             }
1683:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART_1.c **** 
1685:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART_1.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART_1.c ****         {
1688:Generated_Source\PSoC5/USBUART_1.c ****             uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART_1.c **** 
1690:Generated_Source\PSoC5/USBUART_1.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART_1.c **** 
1693:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_ARB_E
1695:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART_1.c **** 
1697:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COMMON_
1699:Generated_Source\PSoC5/USBUART_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART_1.c **** 
1701:Generated_Source\PSoC5/USBUART_1.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART_1.c **** 
1704:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART_1.c ****         }
1707:Generated_Source\PSoC5/USBUART_1.c ****         #else
1708:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaChDisable(USBUART_1_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaTdSetConfiguration(USBUART_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD
1711:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaTdSetAddress(USBUART_1_DmaTd[epNumber], LO16((uint32) &USBUART_1_ARB_EP_BAS
1712:Generated_Source\PSoC5/USBUART_1.c **** 
1713:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaChSetInitialTd(USBUART_1_DmaChan[epNumber], USBUART_1_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaChEnable(USBUART_1_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART_1.c **** 
1718:Generated_Source\PSoC5/USBUART_1.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_1_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_1_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART_1.c **** 
1722:Generated_Source\PSoC5/USBUART_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART_1.c ****             */
1725:Generated_Source\PSoC5/USBUART_1.c **** 
1726:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART_1.c **** 
1728:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART_1.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART_1.c ****         {
1731:Generated_Source\PSoC5/USBUART_1.c ****             uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART_1.c ****             uint32 lengthDescr0, lengthDescr1;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 48


1733:Generated_Source\PSoC5/USBUART_1.c **** 
1734:Generated_Source\PSoC5/USBUART_1.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_1_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART_1.c **** 
1737:Generated_Source\PSoC5/USBUART_1.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_1_DMA_BYTES_PER_BURST)
1739:Generated_Source\PSoC5/USBUART_1.c **** 
1740:Generated_Source\PSoC5/USBUART_1.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCnt[epNumber] += (0u != USBUART_1_DmaEpLastBurstEl[epNumber]) ? 1u 
1742:Generated_Source\PSoC5/USBUART_1.c **** 
1743:Generated_Source\PSoC5/USBUART_1.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] = (0u != USBUART_1_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART_1.c ****                                                                   (USBUART_1_DmaEpLastBurstEl[epNum
1746:Generated_Source\PSoC5/USBUART_1.c ****                                                                   (USBUART_1_DMA_BYTES_PER_BURST - 
1747:Generated_Source\PSoC5/USBUART_1.c **** 
1748:Generated_Source\PSoC5/USBUART_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART_1.c ****             lengthDescr0 = (1u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastBurstEl[e
1750:Generated_Source\PSoC5/USBUART_1.c ****             lengthDescr1 = (2u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastBurstEl[e
1751:Generated_Source\PSoC5/USBUART_1.c **** 
1752:Generated_Source\PSoC5/USBUART_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] |= (USBUART_1_DmaEpBurstCnt[epNumber] > 2u) ? USBU
1754:Generated_Source\PSoC5/USBUART_1.c **** 
1755:Generated_Source\PSoC5/USBUART_1.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_1_DmaEpBurstCnt[epNumber] & 0x1
1757:Generated_Source\PSoC5/USBUART_1.c ****                                                                     USBUART_1_DMA_DESCR0_MASK : USB
1758:Generated_Source\PSoC5/USBUART_1.c **** 
1759:Generated_Source\PSoC5/USBUART_1.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCntBackup[epNumber]   = USBUART_1_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART_1.c **** 
1763:Generated_Source\PSoC5/USBUART_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCnt[epNumber] = USBUART_1_DMA_GET_BURST_CNT(USBUART_1_DmaEpBurstCnt
1765:Generated_Source\PSoC5/USBUART_1.c **** 
1766:Generated_Source\PSoC5/USBUART_1.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART_1.c **** 
1769:Generated_Source\PSoC5/USBUART_1.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_ARB_E
1771:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) &USBUART_1_ARB_E
1772:Generated_Source\PSoC5/USBUART_1.c **** 
1773:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) ((uint32) pData)
1774:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) ((uint32) pData 
1775:Generated_Source\PSoC5/USBUART_1.c **** 
1776:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COMMON_
1778:Generated_Source\PSoC5/USBUART_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART_1.c **** 
1780:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR1, USBUART_1_DMA_COMMON_
1782:Generated_Source\PSoC5/USBUART_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART_1.c **** 
1784:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART_1.c **** 
1787:Generated_Source\PSoC5/USBUART_1.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 49


1790:Generated_Source\PSoC5/USBUART_1.c ****             if (USBUART_1_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART_1.c ****             {
1792:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART_1.c ****             }
1794:Generated_Source\PSoC5/USBUART_1.c **** 
1795:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART_1.c ****         }
1798:Generated_Source\PSoC5/USBUART_1.c ****         #else
1799:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaChDisable(USBUART_1_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaTdSetConfiguration(USBUART_1_DmaTd[epNumber], length,  USBUART_1_DmaTd[epNu
1801:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaTdSetAddress(USBUART_1_DmaTd[epNumber], LO16((uint32) &USBUART_1_ARB_EP_BAS
1802:Generated_Source\PSoC5/USBUART_1.c **** 
1803:Generated_Source\PSoC5/USBUART_1.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaClearPendingDrq(USBUART_1_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART_1.c **** 
1806:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaChSetInitialTd(USBUART_1_DmaChan[epNumber], USBUART_1_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART_1.c ****             (void) CyDmaChEnable(USBUART_1_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART_1.c **** 
1811:Generated_Source\PSoC5/USBUART_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART_1.c ****             */
1814:Generated_Source\PSoC5/USBUART_1.c **** 
1815:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART_1.c ****     }
1818:Generated_Source\PSoC5/USBUART_1.c ****     else
1819:Generated_Source\PSoC5/USBUART_1.c ****     {
1820:Generated_Source\PSoC5/USBUART_1.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBUART_1.c ****     }
1822:Generated_Source\PSoC5/USBUART_1.c **** 
1823:Generated_Source\PSoC5/USBUART_1.c ****     return (length);
1824:Generated_Source\PSoC5/USBUART_1.c **** }
1825:Generated_Source\PSoC5/USBUART_1.c **** 
1826:Generated_Source\PSoC5/USBUART_1.c **** 
1827:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_LoadInEP16
1830:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART_1.c **** *
1832:Generated_Source\PSoC5/USBUART_1.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART_1.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART_1.c **** *
1836:Generated_Source\PSoC5/USBUART_1.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART_1.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART_1.c **** *
1840:Generated_Source\PSoC5/USBUART_1.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART_1.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART_1.c **** *
1844:Generated_Source\PSoC5/USBUART_1.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 50


1847:Generated_Source\PSoC5/USBUART_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART_1.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART_1.c **** *
1850:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART_1.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART_1.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART_1.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART_1.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART_1.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART_1.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART_1.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART_1.c **** *
1861:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART_1.c **** *  No.
1863:Generated_Source\PSoC5/USBUART_1.c **** *
1864:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART_1.c **** {
1867:Generated_Source\PSoC5/USBUART_1.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART_1.c **** 
1870:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
1871:Generated_Source\PSoC5/USBUART_1.c ****     {
1872:Generated_Source\PSoC5/USBUART_1.c ****     #if (!USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART_1.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART_1.c ****         if (length > (USBUART_1_EPX_DATA_BUF_MAX - USBUART_1_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART_1.c ****         {
1876:Generated_Source\PSoC5/USBUART_1.c ****             length = USBUART_1_EPX_DATA_BUF_MAX - USBUART_1_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART_1.c ****         }
1878:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (!USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART_1.c **** 
1880:Generated_Source\PSoC5/USBUART_1.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_1_EP[epNumber
1882:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART_1.c **** 
1884:Generated_Source\PSoC5/USBUART_1.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART_1.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART_1.c **** 
1887:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART_1.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART_1.c ****         {
1890:Generated_Source\PSoC5/USBUART_1.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART_1.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART_1.c **** 
1893:Generated_Source\PSoC5/USBUART_1.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART_1.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART_1.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART_1.c ****             {
1897:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART_1.c ****             }
1899:Generated_Source\PSoC5/USBUART_1.c ****         }
1900:Generated_Source\PSoC5/USBUART_1.c **** 
1901:Generated_Source\PSoC5/USBUART_1.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 51


1904:Generated_Source\PSoC5/USBUART_1.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART_1.c **** 
1907:Generated_Source\PSoC5/USBUART_1.c ****     #else
1908:Generated_Source\PSoC5/USBUART_1.c **** 
1909:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART_1.c **** 
1913:Generated_Source\PSoC5/USBUART_1.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART_1.c ****             {
1915:Generated_Source\PSoC5/USBUART_1.c ****                 uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART_1.c **** 
1917:Generated_Source\PSoC5/USBUART_1.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART_1.c **** 
1920:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_A
1923:Generated_Source\PSoC5/USBUART_1.c **** 
1924:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART_1.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COM
1927:Generated_Source\PSoC5/USBUART_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART_1.c **** 
1929:Generated_Source\PSoC5/USBUART_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART_1.c **** 
1932:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART_1.c **** 
1935:Generated_Source\PSoC5/USBUART_1.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_1_ARB_EPX_CFG_DMA
1937:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_1_ARB_EPX_CFG_DMA
1938:Generated_Source\PSoC5/USBUART_1.c **** 
1939:Generated_Source\PSoC5/USBUART_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART_1.c ****             }
1941:Generated_Source\PSoC5/USBUART_1.c ****             else
1942:Generated_Source\PSoC5/USBUART_1.c ****             {
1943:Generated_Source\PSoC5/USBUART_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART_1.c ****             }
1946:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART_1.c **** 
1948:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART_1.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART_1.c ****             {
1951:Generated_Source\PSoC5/USBUART_1.c ****                 uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART_1.c **** 
1953:Generated_Source\PSoC5/USBUART_1.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART_1.c **** 
1956:Generated_Source\PSoC5/USBUART_1.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART_1.c **** 
1959:Generated_Source\PSoC5/USBUART_1.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_A
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 52


1961:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) &USBUART_1_A
1962:Generated_Source\PSoC5/USBUART_1.c **** 
1963:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COM
1965:Generated_Source\PSoC5/USBUART_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART_1.c **** 
1967:Generated_Source\PSoC5/USBUART_1.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR1, USBUART_1_DMA_COM
1969:Generated_Source\PSoC5/USBUART_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART_1.c **** 
1971:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART_1.c **** 
1974:Generated_Source\PSoC5/USBUART_1.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART_1.c ****             }
1977:Generated_Source\PSoC5/USBUART_1.c ****             else
1978:Generated_Source\PSoC5/USBUART_1.c ****             {
1979:Generated_Source\PSoC5/USBUART_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART_1.c **** 
1982:Generated_Source\PSoC5/USBUART_1.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART_1.c ****                 {
1984:Generated_Source\PSoC5/USBUART_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART_1.c ****                     uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART_1.c **** 
1987:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_1_DMA_BYTES_PER_B
1989:Generated_Source\PSoC5/USBUART_1.c **** 
1990:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_1_DMA_BYTES_PE
1992:Generated_Source\PSoC5/USBUART_1.c **** 
1993:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpBurstCnt[epNumber] += (0u != USBUART_1_DmaEpLastBurstEl[epNumber
1995:Generated_Source\PSoC5/USBUART_1.c **** 
1996:Generated_Source\PSoC5/USBUART_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpLastBurstEl[epNumber] = (0u != USBUART_1_DmaEpLastBurstEl[epNumb
1998:Generated_Source\PSoC5/USBUART_1.c ****                                                                           ((USBUART_1_DmaEpLastBurs
1999:Generated_Source\PSoC5/USBUART_1.c ****                                                                            (USBUART_1_DMA_HALFWORDS
2000:Generated_Source\PSoC5/USBUART_1.c **** 
2001:Generated_Source\PSoC5/USBUART_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART_1.c ****                     lengthDescr0 = (1u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastB
2003:Generated_Source\PSoC5/USBUART_1.c ****                     lengthDescr1 = (2u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastB
2004:Generated_Source\PSoC5/USBUART_1.c **** 
2005:Generated_Source\PSoC5/USBUART_1.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_1_DmaEpBurstCnt[epNumbe
2007:Generated_Source\PSoC5/USBUART_1.c ****                                                                             USBUART_1_DMA_DESCR0_MA
2008:Generated_Source\PSoC5/USBUART_1.c **** 
2009:Generated_Source\PSoC5/USBUART_1.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART_1.c **** 
2012:Generated_Source\PSoC5/USBUART_1.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) ((uint32
2014:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) ((uint32
2015:Generated_Source\PSoC5/USBUART_1.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART_1.c **** 
2017:Generated_Source\PSoC5/USBUART_1.c ****                     /* Set number of elements to transfer. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 53


2018:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetNumDataElements(channelNum, USBUART_1_DMA_DESCR0, lengthDescr
2019:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetNumDataElements(channelNum, USBUART_1_DMA_DESCR1, lengthDescr
2020:Generated_Source\PSoC5/USBUART_1.c **** 
2021:Generated_Source\PSoC5/USBUART_1.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART_1.c **** 
2025:Generated_Source\PSoC5/USBUART_1.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART_1.c ****                     if (USBUART_1_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART_1.c ****                     {
2028:Generated_Source\PSoC5/USBUART_1.c ****                         USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART_1.c ****                     }
2030:Generated_Source\PSoC5/USBUART_1.c **** 
2031:Generated_Source\PSoC5/USBUART_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_DmaEpBurstCnt[epNumber] = USBUART_1_DMA_GET_BURST_CNT(USBUART_1_DmaEp
2033:Generated_Source\PSoC5/USBUART_1.c **** 
2034:Generated_Source\PSoC5/USBUART_1.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART_1.c **** 
2037:Generated_Source\PSoC5/USBUART_1.c ****                 #if !defined (USBUART_1_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_1_ARB_EPX_CFG_IN_DATA_RD
2040:Generated_Source\PSoC5/USBUART_1.c ****                 #endif  /* (USBUART_1_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART_1.c **** 
2042:Generated_Source\PSoC5/USBUART_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART_1.c ****                 }
2044:Generated_Source\PSoC5/USBUART_1.c ****                 else
2045:Generated_Source\PSoC5/USBUART_1.c ****                 {
2046:Generated_Source\PSoC5/USBUART_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART_1.c ****                     USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART_1.c ****                 }
2049:Generated_Source\PSoC5/USBUART_1.c ****             }
2050:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART_1.c ****     }
2053:Generated_Source\PSoC5/USBUART_1.c **** }
2054:Generated_Source\PSoC5/USBUART_1.c **** 
2055:Generated_Source\PSoC5/USBUART_1.c **** 
2056:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART_1.c **** *
2060:Generated_Source\PSoC5/USBUART_1.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART_1.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART_1.c **** *
2064:Generated_Source\PSoC5/USBUART_1.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART_1.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART_1.c **** *
2070:Generated_Source\PSoC5/USBUART_1.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART_1.c **** *   transfer after calling the USBUART_1_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART_1.c **** *   by checking EPstate:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 54


2075:Generated_Source\PSoC5/USBUART_1.c **** *
2076:Generated_Source\PSoC5/USBUART_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART_1.c **** *
2078:Generated_Source\PSoC5/USBUART_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART_1.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART_1.c **** *
2082:Generated_Source\PSoC5/USBUART_1.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART_1.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART_1.c **** *
2086:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART_1.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART_1.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART_1.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART_1.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART_1.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART_1.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART_1.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART_1.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART_1.c **** *
2097:Generated_Source\PSoC5/USBUART_1.c **** * \return
2098:Generated_Source\PSoC5/USBUART_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART_1.c **** *
2100:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART_1.c **** *  No.
2102:Generated_Source\PSoC5/USBUART_1.c **** *
2103:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART_1.c **** uint16 USBUART_1_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART_1.c **** {
2106:Generated_Source\PSoC5/USBUART_1.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART_1.c **** 
2108:Generated_Source\PSoC5/USBUART_1.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART_1.c **** 
2111:Generated_Source\PSoC5/USBUART_1.c ****     if ((pData != NULL) && (epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
2112:Generated_Source\PSoC5/USBUART_1.c ****     {
2113:Generated_Source\PSoC5/USBUART_1.c ****     #if (!USBUART_1_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART_1.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART_1.c ****         length = (length > USBUART_1_GetEPCount(epNumber)) ? USBUART_1_GetEPCount(epNumber) : lengt
2116:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (!USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART_1.c **** 
2118:Generated_Source\PSoC5/USBUART_1.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART_1.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART_1.c **** 
2121:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART_1.c ****         {
2123:Generated_Source\PSoC5/USBUART_1.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART_1.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART_1.c **** 
2126:Generated_Source\PSoC5/USBUART_1.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART_1.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART_1.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART_1.c ****             {
2130:Generated_Source\PSoC5/USBUART_1.c ****                 dataBuf[i] = (uint16) USBUART_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART_1.c ****             }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 55


2132:Generated_Source\PSoC5/USBUART_1.c ****         }
2133:Generated_Source\PSoC5/USBUART_1.c **** 
2134:Generated_Source\PSoC5/USBUART_1.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART_1.c ****     #else
2137:Generated_Source\PSoC5/USBUART_1.c **** 
2138:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART_1.c ****         {
2140:Generated_Source\PSoC5/USBUART_1.c ****             uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART_1.c **** 
2142:Generated_Source\PSoC5/USBUART_1.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART_1.c **** 
2145:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_ARB_E
2147:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART_1.c **** 
2149:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COMMON_
2151:Generated_Source\PSoC5/USBUART_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART_1.c **** 
2153:Generated_Source\PSoC5/USBUART_1.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART_1.c **** 
2156:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART_1.c **** 
2159:Generated_Source\PSoC5/USBUART_1.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_1_ARB_EPX_CFG_DMA_REQ
2161:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_1_ARB_EPX_CFG_DMA_REQ
2162:Generated_Source\PSoC5/USBUART_1.c **** 
2163:Generated_Source\PSoC5/USBUART_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART_1.c ****             */
2166:Generated_Source\PSoC5/USBUART_1.c ****         }
2167:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART_1.c **** 
2169:Generated_Source\PSoC5/USBUART_1.c ****         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART_1.c ****         {
2171:Generated_Source\PSoC5/USBUART_1.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART_1.c ****             uint32 channelNum = (uint32) USBUART_1_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART_1.c **** 
2174:Generated_Source\PSoC5/USBUART_1.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_1_DMA_BYTES_PER_BURST)
2176:Generated_Source\PSoC5/USBUART_1.c **** 
2177:Generated_Source\PSoC5/USBUART_1.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_1_DMA_BYTES_PER_BUR
2179:Generated_Source\PSoC5/USBUART_1.c **** 
2180:Generated_Source\PSoC5/USBUART_1.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCnt[epNumber] += (0u != USBUART_1_DmaEpLastBurstEl[epNumber]) ? 1u 
2182:Generated_Source\PSoC5/USBUART_1.c **** 
2183:Generated_Source\PSoC5/USBUART_1.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] = (0u != USBUART_1_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART_1.c ****                                                                   ((USBUART_1_DmaEpLastBurstEl[epNu
2186:Generated_Source\PSoC5/USBUART_1.c ****                                                                    (USBUART_1_DMA_HALFWORDS_PER_BUR
2187:Generated_Source\PSoC5/USBUART_1.c **** 
2188:Generated_Source\PSoC5/USBUART_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 56


2189:Generated_Source\PSoC5/USBUART_1.c ****             lengthDescr0 = (1u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastBurstEl[e
2190:Generated_Source\PSoC5/USBUART_1.c ****             lengthDescr1 = (2u == USBUART_1_DmaEpBurstCnt[epNumber]) ? USBUART_1_DmaEpLastBurstEl[e
2191:Generated_Source\PSoC5/USBUART_1.c **** 
2192:Generated_Source\PSoC5/USBUART_1.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_1_DmaEpBurstCnt[epNumber] & 0x1
2194:Generated_Source\PSoC5/USBUART_1.c ****                                                                     USBUART_1_DMA_DESCR0_MASK : USB
2195:Generated_Source\PSoC5/USBUART_1.c **** 
2196:Generated_Source\PSoC5/USBUART_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] |= (USBUART_1_DmaEpBurstCnt[epNumber] > 2u) ? USBU
2198:Generated_Source\PSoC5/USBUART_1.c **** 
2199:Generated_Source\PSoC5/USBUART_1.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpLastBurstEl[epNumber] |= USBUART_1_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART_1.c **** 
2202:Generated_Source\PSoC5/USBUART_1.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCntBackup[epNumber]   = USBUART_1_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART_1.c **** 
2206:Generated_Source\PSoC5/USBUART_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_DmaEpBurstCnt[epNumber] = USBUART_1_DMA_GET_BURST_CNT(USBUART_1_DmaEpBurstCnt
2208:Generated_Source\PSoC5/USBUART_1.c **** 
2209:Generated_Source\PSoC5/USBUART_1.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART_1.c **** 
2212:Generated_Source\PSoC5/USBUART_1.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) &USBUART_1_ARB_E
2214:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetSrcAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) &USBUART_1_ARB_E
2215:Generated_Source\PSoC5/USBUART_1.c **** 
2216:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) ((uint32) pData)
2217:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) ((uint32) pData 
2218:Generated_Source\PSoC5/USBUART_1.c **** 
2219:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR0, USBUART_1_DMA_COMMON_
2221:Generated_Source\PSoC5/USBUART_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART_1.c **** 
2223:Generated_Source\PSoC5/USBUART_1.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetConfiguration(channelNum, USBUART_1_DMA_DESCR1, USBUART_1_DMA_COMMON_
2225:Generated_Source\PSoC5/USBUART_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART_1.c **** 
2227:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART_1.c **** 
2230:Generated_Source\PSoC5/USBUART_1.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART_1.c ****             
2233:Generated_Source\PSoC5/USBUART_1.c ****             if (USBUART_1_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART_1.c ****             {
2235:Generated_Source\PSoC5/USBUART_1.c ****                 USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART_1.c ****             }
2237:Generated_Source\PSoC5/USBUART_1.c **** 
2238:Generated_Source\PSoC5/USBUART_1.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART_1.c ****             USBUART_1_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART_1.c **** 
2241:Generated_Source\PSoC5/USBUART_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART_1.c ****             */
2244:Generated_Source\PSoC5/USBUART_1.c ****         }
2245:Generated_Source\PSoC5/USBUART_1.c ****         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 57


2246:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART_1.c ****     }
2248:Generated_Source\PSoC5/USBUART_1.c ****     else
2249:Generated_Source\PSoC5/USBUART_1.c ****     {
2250:Generated_Source\PSoC5/USBUART_1.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART_1.c ****     }
2252:Generated_Source\PSoC5/USBUART_1.c **** 
2253:Generated_Source\PSoC5/USBUART_1.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART_1.c **** }
2255:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART_1.c **** 
2257:Generated_Source\PSoC5/USBUART_1.c **** 
2258:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_EnableOutEP
2260:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART_1.c **** *
2262:Generated_Source\PSoC5/USBUART_1.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART_1.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART_1.c **** *
2265:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART_1.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART_1.c **** *
2268:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART_1.c **** *
2270:Generated_Source\PSoC5/USBUART_1.c **** *  \ref USBUART_1_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART_1.c **** *
2272:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART_1.c **** *  No.
2274:Generated_Source\PSoC5/USBUART_1.c **** *
2275:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART_1.c **** {
 903              		.loc 1 2277 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908              	.LVL59:
2278:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 909              		.loc 1 2278 0
 910 0000 431E     		subs	r3, r0, #1
 911 0002 072B     		cmp	r3, #7
 912 0004 0AD8     		bhi	.L56
2279:Generated_Source\PSoC5/USBUART_1.c ****     {
2280:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_EP[epNumber].apiEpState = USBUART_1_NO_EVENT_PENDING;
 913              		.loc 1 2280 0
 914 0006 064A     		ldr	r2, .L58
 915 0008 0C23     		movs	r3, #12
 916 000a 03FB0023 		mla	r3, r3, r0, r2
 917 000e 0022     		movs	r2, #0
 918 0010 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBUART_1.c **** 
2282:Generated_Source\PSoC5/USBUART_1.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_EP[epNumber].epMode;
 919              		.loc 1 2283 0
 920 0012 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 921 0014 034B     		ldr	r3, .L58+4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 58


 922 0016 D2B2     		uxtb	r2, r2
 923 0018 0001     		lsls	r0, r0, #4
 924              	.LVL60:
 925 001a 1A54     		strb	r2, [r3, r0]
 926              	.L56:
 927 001c 7047     		bx	lr
 928              	.L59:
 929 001e 00BF     		.align	2
 930              	.L58:
 931 0020 00000000 		.word	USBUART_1_EP
 932 0024 FE5F0040 		.word	1073766398
 933              		.cfi_endproc
 934              	.LFE13:
 935              		.size	USBUART_1_EnableOutEP, .-USBUART_1_EnableOutEP
 936              		.section	.text.USBUART_1_ReadOutEP,"ax",%progbits
 937              		.align	1
 938              		.global	USBUART_1_ReadOutEP
 939              		.thumb
 940              		.thumb_func
 941              		.type	USBUART_1_ReadOutEP, %function
 942              	USBUART_1_ReadOutEP:
 943              	.LFB12:
1655:Generated_Source\PSoC5/USBUART_1.c ****     if ((pData != NULL) && (epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 944              		.loc 1 1655 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              	.LVL61:
 949 0000 38B5     		push	{r3, r4, r5, lr}
 950              		.cfi_def_cfa_offset 16
 951              		.cfi_offset 3, -16
 952              		.cfi_offset 4, -12
 953              		.cfi_offset 5, -8
 954              		.cfi_offset 14, -4
1655:Generated_Source\PSoC5/USBUART_1.c ****     if ((pData != NULL) && (epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 955              		.loc 1 1655 0
 956 0002 0546     		mov	r5, r0
 957 0004 1446     		mov	r4, r2
1656:Generated_Source\PSoC5/USBUART_1.c ****     {
 958              		.loc 1 1656 0
 959 0006 D1B1     		cbz	r1, .L65
1656:Generated_Source\PSoC5/USBUART_1.c ****     {
 960              		.loc 1 1656 0 is_stmt 0 discriminator 1
 961 0008 431E     		subs	r3, r0, #1
 962 000a 072B     		cmp	r3, #7
 963 000c 19D8     		bhi	.L66
1660:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (!USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 964              		.loc 1 1660 0 is_stmt 1
 965 000e FFF7FEFF 		bl	USBUART_1_GetEPCount
 966              	.LVL62:
 967 0012 A042     		cmp	r0, r4
 968 0014 03D2     		bcs	.L62
1660:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (!USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 969              		.loc 1 1660 0 is_stmt 0 discriminator 1
 970 0016 2846     		mov	r0, r5
 971 0018 FFF7FEFF 		bl	USBUART_1_GetEPCount
 972              	.LVL63:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 59


 973 001c 0446     		mov	r4, r0
 974              	.L62:
 975              	.LVL64:
 976              	.LBB7:
1667:Generated_Source\PSoC5/USBUART_1.c ****             {
 977              		.loc 1 1667 0 is_stmt 1 discriminator 4
 978 001e 0A46     		mov	r2, r1
1669:Generated_Source\PSoC5/USBUART_1.c ****             }
 979              		.loc 1 1669 0 discriminator 4
 980 0020 0948     		ldr	r0, .L68
 981 0022 2B01     		lsls	r3, r5, #4
 982 0024 1844     		add	r0, r0, r3
 983              	.LVL65:
 984              	.L63:
1667:Generated_Source\PSoC5/USBUART_1.c ****             {
 985              		.loc 1 1667 0 discriminator 1
 986 0026 531A     		subs	r3, r2, r1
 987 0028 9BB2     		uxth	r3, r3
 988 002a 9C42     		cmp	r4, r3
 989 002c 03D9     		bls	.L67
1669:Generated_Source\PSoC5/USBUART_1.c ****             }
 990              		.loc 1 1669 0 discriminator 3
 991 002e 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 992 0030 02F8013B 		strb	r3, [r2], #1
 993              	.LVL66:
 994 0034 F7E7     		b	.L63
 995              	.L67:
 996              	.LBE7:
1674:Generated_Source\PSoC5/USBUART_1.c ****     #else
 997              		.loc 1 1674 0
 998 0036 2846     		mov	r0, r5
 999 0038 FFF7FEFF 		bl	USBUART_1_EnableOutEP
 1000              	.LVL67:
 1001 003c 02E0     		b	.L61
 1002              	.LVL68:
 1003              	.L65:
1820:Generated_Source\PSoC5/USBUART_1.c ****     }
 1004              		.loc 1 1820 0
 1005 003e 0C46     		mov	r4, r1
 1006 0040 00E0     		b	.L61
 1007              	.L66:
 1008 0042 0024     		movs	r4, #0
 1009              	.LVL69:
 1010              	.L61:
1824:Generated_Source\PSoC5/USBUART_1.c **** 
 1011              		.loc 1 1824 0
 1012 0044 2046     		mov	r0, r4
 1013 0046 38BD     		pop	{r3, r4, r5, pc}
 1014              	.LVL70:
 1015              	.L69:
 1016              		.align	2
 1017              	.L68:
 1018 0048 70600040 		.word	1073766512
 1019              		.cfi_endproc
 1020              	.LFE12:
 1021              		.size	USBUART_1_ReadOutEP, .-USBUART_1_ReadOutEP
 1022              		.section	.text.USBUART_1_DisableOutEP,"ax",%progbits
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 60


 1023              		.align	1
 1024              		.global	USBUART_1_DisableOutEP
 1025              		.thumb
 1026              		.thumb_func
 1027              		.type	USBUART_1_DisableOutEP, %function
 1028              	USBUART_1_DisableOutEP:
 1029              	.LFB14:
2284:Generated_Source\PSoC5/USBUART_1.c ****         
2285:Generated_Source\PSoC5/USBUART_1.c ****     }
2286:Generated_Source\PSoC5/USBUART_1.c **** }
2287:Generated_Source\PSoC5/USBUART_1.c **** 
2288:Generated_Source\PSoC5/USBUART_1.c **** 
2289:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_DisableOutEP
2291:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART_1.c **** *
2293:Generated_Source\PSoC5/USBUART_1.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART_1.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART_1.c **** *
2296:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART_1.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART_1.c **** *
2299:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART_1.c **** {
 1030              		.loc 1 2301 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035              	.LVL71:
2302:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 1036              		.loc 1 2302 0
 1037 0000 431E     		subs	r3, r0, #1
 1038 0002 072B     		cmp	r3, #7
2303:Generated_Source\PSoC5/USBUART_1.c ****     {
2304:Generated_Source\PSoC5/USBUART_1.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_1_MODE_NAK_OUT;
 1039              		.loc 1 2305 0
 1040 0004 9FBF     		itttt	ls
 1041 0006 024B     		ldrls	r3, .L72
 1042 0008 0001     		lslls	r0, r0, #4
 1043              	.LVL72:
 1044 000a 0822     		movls	r2, #8
 1045 000c 1A54     		strbls	r2, [r3, r0]
 1046 000e 7047     		bx	lr
 1047              	.L73:
 1048              		.align	2
 1049              	.L72:
 1050 0010 FE5F0040 		.word	1073766398
 1051              		.cfi_endproc
 1052              	.LFE14:
 1053              		.size	USBUART_1_DisableOutEP, .-USBUART_1_DisableOutEP
 1054              		.section	.text.USBUART_1_Force,"ax",%progbits
 1055              		.align	1
 1056              		.global	USBUART_1_Force
 1057              		.thumb
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 61


 1058              		.thumb_func
 1059              		.type	USBUART_1_Force, %function
 1060              	USBUART_1_Force:
 1061              	.LFB15:
2306:Generated_Source\PSoC5/USBUART_1.c ****     }
2307:Generated_Source\PSoC5/USBUART_1.c **** }
2308:Generated_Source\PSoC5/USBUART_1.c **** 
2309:Generated_Source\PSoC5/USBUART_1.c **** 
2310:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_Force
2312:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART_1.c **** *
2314:Generated_Source\PSoC5/USBUART_1.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART_1.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART_1.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART_1.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART_1.c **** *
2319:Generated_Source\PSoC5/USBUART_1.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART_1.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART_1.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART_1.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART_1.c **** *    USBUART_1_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART_1.c **** *    USBUART_1_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART_1.c **** *    USBUART_1_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART_1.c **** *    USBUART_1_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART_1.c **** *
2328:Generated_Source\PSoC5/USBUART_1.c **** *
2329:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART_1.c **** {
 1062              		.loc 1 2331 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
 1067              	.LVL73:
2332:Generated_Source\PSoC5/USBUART_1.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART_1.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART_1.c ****     */
2335:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_USBIO_CR0_REG = bState;
 1068              		.loc 1 2335 0
 1069 0000 014B     		ldr	r3, .L75
 1070 0002 1870     		strb	r0, [r3]
 1071 0004 7047     		bx	lr
 1072              	.L76:
 1073 0006 00BF     		.align	2
 1074              	.L75:
 1075 0008 10600040 		.word	1073766416
 1076              		.cfi_endproc
 1077              	.LFE15:
 1078              		.size	USBUART_1_Force, .-USBUART_1_Force
 1079              		.section	.text.USBUART_1_GetEPAckState,"ax",%progbits
 1080              		.align	1
 1081              		.global	USBUART_1_GetEPAckState
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	USBUART_1_GetEPAckState, %function
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 62


 1085              	USBUART_1_GetEPAckState:
 1086              	.LFB16:
2336:Generated_Source\PSoC5/USBUART_1.c **** }
2337:Generated_Source\PSoC5/USBUART_1.c **** 
2338:Generated_Source\PSoC5/USBUART_1.c **** 
2339:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_GetEPAckState
2341:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART_1.c **** *
2343:Generated_Source\PSoC5/USBUART_1.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART_1.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART_1.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART_1.c **** *
2347:Generated_Source\PSoC5/USBUART_1.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART_1.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART_1.c **** *
2350:Generated_Source\PSoC5/USBUART_1.c **** *  \return
2351:Generated_Source\PSoC5/USBUART_1.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART_1.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART_1.c **** *
2354:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART_1.c **** {
 1087              		.loc 1 2356 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              		@ link register save eliminated.
 1092              	.LVL74:
2357:Generated_Source\PSoC5/USBUART_1.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBUART_1.c **** 
2359:Generated_Source\PSoC5/USBUART_1.c ****     if ((epNumber > USBUART_1_EP0) && (epNumber < USBUART_1_MAX_EP))
 1093              		.loc 1 2359 0
 1094 0000 431E     		subs	r3, r0, #1
 1095 0002 072B     		cmp	r3, #7
2360:Generated_Source\PSoC5/USBUART_1.c ****     {
2361:Generated_Source\PSoC5/USBUART_1.c ****         cr = USBUART_1_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_1_MODE_ACKD;
 1096              		.loc 1 2361 0
 1097 0004 9FBF     		itttt	ls
 1098 0006 044B     		ldrls	r3, .L80
 1099 0008 0001     		lslls	r0, r0, #4
 1100              	.LVL75:
 1101 000a 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 1102 000c 00F01000 		andls	r0, r0, #16
 1103 0010 94BF     		ite	ls
 1104 0012 C0B2     		uxtbls	r0, r0
 1105              	.LVL76:
2357:Generated_Source\PSoC5/USBUART_1.c ****     uint8 cr = 0u;
 1106              		.loc 1 2357 0
 1107 0014 0020     		movhi	r0, #0
 1108              	.LVL77:
2362:Generated_Source\PSoC5/USBUART_1.c ****     }
2363:Generated_Source\PSoC5/USBUART_1.c **** 
2364:Generated_Source\PSoC5/USBUART_1.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBUART_1.c **** }
 1109              		.loc 1 2365 0
 1110 0016 7047     		bx	lr
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 63


 1111              	.L81:
 1112              		.align	2
 1113              	.L80:
 1114 0018 FE5F0040 		.word	1073766398
 1115              		.cfi_endproc
 1116              	.LFE16:
 1117              		.size	USBUART_1_GetEPAckState, .-USBUART_1_GetEPAckState
 1118              		.section	.text.USBUART_1_SetPowerStatus,"ax",%progbits
 1119              		.align	1
 1120              		.global	USBUART_1_SetPowerStatus
 1121              		.thumb
 1122              		.thumb_func
 1123              		.type	USBUART_1_SetPowerStatus, %function
 1124              	USBUART_1_SetPowerStatus:
 1125              	.LFB17:
2366:Generated_Source\PSoC5/USBUART_1.c **** 
2367:Generated_Source\PSoC5/USBUART_1.c **** 
2368:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART_1.c **** *
2372:Generated_Source\PSoC5/USBUART_1.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART_1.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART_1.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART_1.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART_1.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART_1.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART_1.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART_1.c **** *
2380:Generated_Source\PSoC5/USBUART_1.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART_1.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART_1.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART_1.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART_1.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART_1.c **** *  USBUART_1_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART_1.c **** *  USBUART_1_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART_1.c **** *
2388:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART_1.c **** *
2390:Generated_Source\PSoC5/USBUART_1.c **** *  \ref USBUART_1_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART_1.c **** *
2392:Generated_Source\PSoC5/USBUART_1.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART_1.c **** *  No.
2394:Generated_Source\PSoC5/USBUART_1.c **** *
2395:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART_1.c **** {
 1126              		.loc 1 2397 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 1131              	.LVL78:
 1132 0000 044B     		ldr	r3, .L86
2398:Generated_Source\PSoC5/USBUART_1.c ****     if (powerStatus != USBUART_1_DEVICE_STATUS_BUS_POWERED)
2399:Generated_Source\PSoC5/USBUART_1.c ****     {
2400:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_deviceStatus |= (uint8)  USBUART_1_DEVICE_STATUS_SELF_POWERED;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 64


 1133              		.loc 1 2400 0
 1134 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
2398:Generated_Source\PSoC5/USBUART_1.c ****     if (powerStatus != USBUART_1_DEVICE_STATUS_BUS_POWERED)
 1135              		.loc 1 2398 0
 1136 0004 10B1     		cbz	r0, .L83
 1137              		.loc 1 2400 0
 1138 0006 42F00102 		orr	r2, r2, #1
 1139 000a 01E0     		b	.L85
 1140              	.L83:
2401:Generated_Source\PSoC5/USBUART_1.c ****     }
2402:Generated_Source\PSoC5/USBUART_1.c ****     else
2403:Generated_Source\PSoC5/USBUART_1.c ****     {
2404:Generated_Source\PSoC5/USBUART_1.c ****         USBUART_1_deviceStatus &= (uint8) ~USBUART_1_DEVICE_STATUS_SELF_POWERED;
 1141              		.loc 1 2404 0
 1142 000c 02F0FE02 		and	r2, r2, #254
 1143              	.L85:
 1144 0010 1A70     		strb	r2, [r3]
 1145 0012 7047     		bx	lr
 1146              	.L87:
 1147              		.align	2
 1148              	.L86:
 1149 0014 00000000 		.word	USBUART_1_deviceStatus
 1150              		.cfi_endproc
 1151              	.LFE17:
 1152              		.size	USBUART_1_SetPowerStatus, .-USBUART_1_SetPowerStatus
 1153              		.section	.text.USBUART_1_RWUEnabled,"ax",%progbits
 1154              		.align	1
 1155              		.global	USBUART_1_RWUEnabled
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	USBUART_1_RWUEnabled, %function
 1159              	USBUART_1_RWUEnabled:
 1160              	.LFB18:
2405:Generated_Source\PSoC5/USBUART_1.c ****     }
2406:Generated_Source\PSoC5/USBUART_1.c **** }
2407:Generated_Source\PSoC5/USBUART_1.c **** 
2408:Generated_Source\PSoC5/USBUART_1.c **** 
2409:Generated_Source\PSoC5/USBUART_1.c **** #if (USBUART_1_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART_1.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART_1.c ****     * Function Name: USBUART_1_VBusPresent
2412:Generated_Source\PSoC5/USBUART_1.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART_1.c ****     *
2414:Generated_Source\PSoC5/USBUART_1.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART_1.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART_1.c ****     *
2417:Generated_Source\PSoC5/USBUART_1.c ****     * \return
2418:Generated_Source\PSoC5/USBUART_1.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART_1.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART_1.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART_1.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART_1.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART_1.c ****     *
2424:Generated_Source\PSoC5/USBUART_1.c ****     *
2425:Generated_Source\PSoC5/USBUART_1.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART_1.c ****     uint8 USBUART_1_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART_1.c ****     {
2428:Generated_Source\PSoC5/USBUART_1.c ****         return ((0u != (USBUART_1_VBUS_STATUS_REG & USBUART_1_VBUS_VALID)) ? (uint8) 1u : (uint8) 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 65


2429:Generated_Source\PSoC5/USBUART_1.c ****     }
2430:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (USBUART_1_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART_1.c **** 
2432:Generated_Source\PSoC5/USBUART_1.c **** 
2433:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_RWUEnabled
2435:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART_1.c **** *
2437:Generated_Source\PSoC5/USBUART_1.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART_1.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART_1.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART_1.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART_1.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART_1.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART_1.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART_1.c **** *
2445:Generated_Source\PSoC5/USBUART_1.c **** *
2446:Generated_Source\PSoC5/USBUART_1.c **** * \return
2447:Generated_Source\PSoC5/USBUART_1.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART_1.c **** *
2449:Generated_Source\PSoC5/USBUART_1.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART_1.c **** *  USBUART_1_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART_1.c **** *
2452:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART_1.c **** {
 1161              		.loc 1 2454 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166              	.LVL79:
2455:Generated_Source\PSoC5/USBUART_1.c ****     uint8 result = USBUART_1_FALSE;
2456:Generated_Source\PSoC5/USBUART_1.c **** 
2457:Generated_Source\PSoC5/USBUART_1.c ****     if (0u != (USBUART_1_deviceStatus & USBUART_1_DEVICE_STATUS_REMOTE_WAKEUP))
 1167              		.loc 1 2457 0
 1168 0000 024B     		ldr	r3, .L89
 1169 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1170              	.LVL80:
2458:Generated_Source\PSoC5/USBUART_1.c ****     {
2459:Generated_Source\PSoC5/USBUART_1.c ****         result = USBUART_1_TRUE;
2460:Generated_Source\PSoC5/USBUART_1.c ****     }
2461:Generated_Source\PSoC5/USBUART_1.c **** 
2462:Generated_Source\PSoC5/USBUART_1.c ****     return (result);
2463:Generated_Source\PSoC5/USBUART_1.c **** }
 1171              		.loc 1 2463 0
 1172 0004 C0F34000 		ubfx	r0, r0, #1, #1
 1173              	.LVL81:
 1174 0008 7047     		bx	lr
 1175              	.L90:
 1176 000a 00BF     		.align	2
 1177              	.L89:
 1178 000c 00000000 		.word	USBUART_1_deviceStatus
 1179              		.cfi_endproc
 1180              	.LFE18:
 1181              		.size	USBUART_1_RWUEnabled, .-USBUART_1_RWUEnabled
 1182              		.section	.text.USBUART_1_GetDeviceAddress,"ax",%progbits
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 66


 1183              		.align	1
 1184              		.global	USBUART_1_GetDeviceAddress
 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	USBUART_1_GetDeviceAddress, %function
 1188              	USBUART_1_GetDeviceAddress:
 1189              	.LFB19:
2464:Generated_Source\PSoC5/USBUART_1.c **** 
2465:Generated_Source\PSoC5/USBUART_1.c **** 
2466:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART_1.c **** *
2470:Generated_Source\PSoC5/USBUART_1.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART_1.c **** *
2472:Generated_Source\PSoC5/USBUART_1.c **** * \return
2473:Generated_Source\PSoC5/USBUART_1.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART_1.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART_1.c **** *
2476:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART_1.c **** uint8 USBUART_1_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART_1.c **** {
 1190              		.loc 1 2478 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBUART_1.c ****     return (uint8)(USBUART_1_CR0_REG & USBUART_1_CR0_DEVICE_ADDRESS_MASK);
 1195              		.loc 1 2479 0
 1196 0000 024B     		ldr	r3, .L92
 1197 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBUART_1.c **** }
 1198              		.loc 1 2480 0
 1199 0004 00F07F00 		and	r0, r0, #127
 1200 0008 7047     		bx	lr
 1201              	.L93:
 1202 000a 00BF     		.align	2
 1203              	.L92:
 1204 000c 08600040 		.word	1073766408
 1205              		.cfi_endproc
 1206              	.LFE19:
 1207              		.size	USBUART_1_GetDeviceAddress, .-USBUART_1_GetDeviceAddress
 1208              		.section	.text.USBUART_1_EnableSofInt,"ax",%progbits
 1209              		.align	1
 1210              		.global	USBUART_1_EnableSofInt
 1211              		.thumb
 1212              		.thumb_func
 1213              		.type	USBUART_1_EnableSofInt, %function
 1214              	USBUART_1_EnableSofInt:
 1215              	.LFB20:
2481:Generated_Source\PSoC5/USBUART_1.c **** 
2482:Generated_Source\PSoC5/USBUART_1.c **** 
2483:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_EnableSofInt
2485:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART_1.c **** *
2487:Generated_Source\PSoC5/USBUART_1.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 67


2488:Generated_Source\PSoC5/USBUART_1.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART_1.c **** *
2490:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART_1.c **** {
 1216              		.loc 1 2492 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_INTR_SIE_MASK_REG |= (uint32) USBUART_1_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART_1.c **** #else
2497:Generated_Source\PSoC5/USBUART_1.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART_1.c ****         CyIntEnable(USBUART_1_SOF_VECT_NUM);
 1221              		.loc 1 2499 0
 1222 0000 024B     		ldr	r3, .L95
 1223 0002 4FF40012 		mov	r2, #2097152
 1224 0006 1A60     		str	r2, [r3]
 1225 0008 7047     		bx	lr
 1226              	.L96:
 1227 000a 00BF     		.align	2
 1228              	.L95:
 1229 000c 00E100E0 		.word	-536813312
 1230              		.cfi_endproc
 1231              	.LFE20:
 1232              		.size	USBUART_1_EnableSofInt, .-USBUART_1_EnableSofInt
 1233              		.section	.text.USBUART_1_DisableSofInt,"ax",%progbits
 1234              		.align	1
 1235              		.global	USBUART_1_DisableSofInt
 1236              		.thumb
 1237              		.thumb_func
 1238              		.type	USBUART_1_DisableSofInt, %function
 1239              	USBUART_1_DisableSofInt:
 1240              	.LFB21:
2500:Generated_Source\PSoC5/USBUART_1.c ****     #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART_1.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART_1.c **** }
2503:Generated_Source\PSoC5/USBUART_1.c **** 
2504:Generated_Source\PSoC5/USBUART_1.c **** 
2505:Generated_Source\PSoC5/USBUART_1.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART_1.c **** * Function Name: USBUART_1_DisableSofInt
2507:Generated_Source\PSoC5/USBUART_1.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART_1.c **** *
2509:Generated_Source\PSoC5/USBUART_1.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART_1.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART_1.c **** *
2512:Generated_Source\PSoC5/USBUART_1.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART_1.c **** void USBUART_1_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART_1.c **** {
 1241              		.loc 1 2514 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245              		@ link register save eliminated.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 68


2515:Generated_Source\PSoC5/USBUART_1.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART_1.c ****     USBUART_1_INTR_SIE_MASK_REG &= (uint32) ~USBUART_1_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART_1.c **** #else
2519:Generated_Source\PSoC5/USBUART_1.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART_1.c ****     #if (USBUART_1_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART_1.c ****         CyIntDisable(USBUART_1_SOF_VECT_NUM);
 1246              		.loc 1 2521 0
 1247 0000 024B     		ldr	r3, .L98
 1248 0002 4FF40012 		mov	r2, #2097152
 1249 0006 1A60     		str	r2, [r3]
 1250 0008 7047     		bx	lr
 1251              	.L99:
 1252 000a 00BF     		.align	2
 1253              	.L98:
 1254 000c 80E100E0 		.word	-536813184
 1255              		.cfi_endproc
 1256              	.LFE21:
 1257              		.size	USBUART_1_DisableSofInt, .-USBUART_1_DisableSofInt
 1258              		.global	USBUART_1_initVar
 1259              		.bss
 1260              		.set	.LANCHOR0,. + 0
 1261              		.type	USBUART_1_initVar, %object
 1262              		.size	USBUART_1_initVar, 1
 1263              	USBUART_1_initVar:
 1264 0000 00       		.space	1
 1265              		.text
 1266              	.Letext0:
 1267              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1268              		.file 3 "Generated_Source\\PSoC5\\USBUART_1.h"
 1269              		.file 4 "Generated_Source\\PSoC5\\USBUART_1_pvt.h"
 1270              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1271              		.file 6 "Generated_Source\\PSoC5\\USBUART_1_Dp.h"
 1272              		.section	.debug_info,"",%progbits
 1273              	.Ldebug_info0:
 1274 0000 C3090000 		.4byte	0x9c3
 1275 0004 0400     		.2byte	0x4
 1276 0006 00000000 		.4byte	.Ldebug_abbrev0
 1277 000a 04       		.byte	0x4
 1278 000b 01       		.uleb128 0x1
 1279 000c AD030000 		.4byte	.LASF97
 1280 0010 0C       		.byte	0xc
 1281 0011 B8010000 		.4byte	.LASF98
 1282 0015 77020000 		.4byte	.LASF99
 1283 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1284 001d 00000000 		.4byte	0
 1285 0021 00000000 		.4byte	.Ldebug_line0
 1286 0025 02       		.uleb128 0x2
 1287 0026 01       		.byte	0x1
 1288 0027 06       		.byte	0x6
 1289 0028 2F030000 		.4byte	.LASF0
 1290 002c 02       		.uleb128 0x2
 1291 002d 01       		.byte	0x1
 1292 002e 08       		.byte	0x8
 1293 002f FD020000 		.4byte	.LASF1
 1294 0033 02       		.uleb128 0x2
 1295 0034 02       		.byte	0x2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 69


 1296 0035 05       		.byte	0x5
 1297 0036 82000000 		.4byte	.LASF2
 1298 003a 02       		.uleb128 0x2
 1299 003b 02       		.byte	0x2
 1300 003c 07       		.byte	0x7
 1301 003d 41040000 		.4byte	.LASF3
 1302 0041 02       		.uleb128 0x2
 1303 0042 04       		.byte	0x4
 1304 0043 05       		.byte	0x5
 1305 0044 4D020000 		.4byte	.LASF4
 1306 0048 02       		.uleb128 0x2
 1307 0049 04       		.byte	0x4
 1308 004a 07       		.byte	0x7
 1309 004b 45050000 		.4byte	.LASF5
 1310 004f 02       		.uleb128 0x2
 1311 0050 08       		.byte	0x8
 1312 0051 05       		.byte	0x5
 1313 0052 00020000 		.4byte	.LASF6
 1314 0056 02       		.uleb128 0x2
 1315 0057 08       		.byte	0x8
 1316 0058 07       		.byte	0x7
 1317 0059 3B030000 		.4byte	.LASF7
 1318 005d 03       		.uleb128 0x3
 1319 005e 04       		.byte	0x4
 1320 005f 05       		.byte	0x5
 1321 0060 696E7400 		.ascii	"int\000"
 1322 0064 02       		.uleb128 0x2
 1323 0065 04       		.byte	0x4
 1324 0066 07       		.byte	0x7
 1325 0067 70030000 		.4byte	.LASF8
 1326 006b 04       		.uleb128 0x4
 1327 006c E7040000 		.4byte	.LASF9
 1328 0070 02       		.byte	0x2
 1329 0071 E401     		.2byte	0x1e4
 1330 0073 2C000000 		.4byte	0x2c
 1331 0077 04       		.uleb128 0x4
 1332 0078 38010000 		.4byte	.LASF10
 1333 007c 02       		.byte	0x2
 1334 007d E501     		.2byte	0x1e5
 1335 007f 3A000000 		.4byte	0x3a
 1336 0083 04       		.uleb128 0x4
 1337 0084 39050000 		.4byte	.LASF11
 1338 0088 02       		.byte	0x2
 1339 0089 E601     		.2byte	0x1e6
 1340 008b 48000000 		.4byte	0x48
 1341 008f 02       		.uleb128 0x2
 1342 0090 04       		.byte	0x4
 1343 0091 04       		.byte	0x4
 1344 0092 E9010000 		.4byte	.LASF12
 1345 0096 02       		.uleb128 0x2
 1346 0097 08       		.byte	0x8
 1347 0098 04       		.byte	0x4
 1348 0099 57050000 		.4byte	.LASF13
 1349 009d 02       		.uleb128 0x2
 1350 009e 01       		.byte	0x1
 1351 009f 08       		.byte	0x8
 1352 00a0 7F040000 		.4byte	.LASF14
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 70


 1353 00a4 04       		.uleb128 0x4
 1354 00a5 40050000 		.4byte	.LASF15
 1355 00a9 02       		.byte	0x2
 1356 00aa 8E02     		.2byte	0x28e
 1357 00ac B0000000 		.4byte	0xb0
 1358 00b0 05       		.uleb128 0x5
 1359 00b1 6B000000 		.4byte	0x6b
 1360 00b5 04       		.uleb128 0x4
 1361 00b6 3B040000 		.4byte	.LASF16
 1362 00ba 02       		.byte	0x2
 1363 00bb 9002     		.2byte	0x290
 1364 00bd C1000000 		.4byte	0xc1
 1365 00c1 05       		.uleb128 0x5
 1366 00c2 83000000 		.4byte	0x83
 1367 00c6 02       		.uleb128 0x2
 1368 00c7 08       		.byte	0x8
 1369 00c8 04       		.byte	0x4
 1370 00c9 CA000000 		.4byte	.LASF17
 1371 00cd 02       		.uleb128 0x2
 1372 00ce 04       		.byte	0x4
 1373 00cf 07       		.byte	0x7
 1374 00d0 CB050000 		.4byte	.LASF18
 1375 00d4 06       		.uleb128 0x6
 1376 00d5 0C       		.byte	0xc
 1377 00d6 03       		.byte	0x3
 1378 00d7 8D       		.byte	0x8d
 1379 00d8 49010000 		.4byte	0x149
 1380 00dc 07       		.uleb128 0x7
 1381 00dd 5C040000 		.4byte	.LASF19
 1382 00e1 03       		.byte	0x3
 1383 00e2 8F       		.byte	0x8f
 1384 00e3 6B000000 		.4byte	0x6b
 1385 00e7 00       		.byte	0
 1386 00e8 07       		.uleb128 0x7
 1387 00e9 5E050000 		.4byte	.LASF20
 1388 00ed 03       		.byte	0x3
 1389 00ee 90       		.byte	0x90
 1390 00ef 6B000000 		.4byte	0x6b
 1391 00f3 01       		.byte	0x1
 1392 00f4 07       		.uleb128 0x7
 1393 00f5 2F050000 		.4byte	.LASF21
 1394 00f9 03       		.byte	0x3
 1395 00fa 91       		.byte	0x91
 1396 00fb 6B000000 		.4byte	0x6b
 1397 00ff 02       		.byte	0x2
 1398 0100 07       		.uleb128 0x7
 1399 0101 00000000 		.4byte	.LASF22
 1400 0105 03       		.byte	0x3
 1401 0106 92       		.byte	0x92
 1402 0107 6B000000 		.4byte	0x6b
 1403 010b 03       		.byte	0x3
 1404 010c 07       		.uleb128 0x7
 1405 010d 6B020000 		.4byte	.LASF23
 1406 0111 03       		.byte	0x3
 1407 0112 93       		.byte	0x93
 1408 0113 6B000000 		.4byte	0x6b
 1409 0117 04       		.byte	0x4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 71


 1410 0118 07       		.uleb128 0x7
 1411 0119 9C000000 		.4byte	.LASF24
 1412 011d 03       		.byte	0x3
 1413 011e 94       		.byte	0x94
 1414 011f 6B000000 		.4byte	0x6b
 1415 0123 05       		.byte	0x5
 1416 0124 07       		.uleb128 0x7
 1417 0125 E8020000 		.4byte	.LASF25
 1418 0129 03       		.byte	0x3
 1419 012a 95       		.byte	0x95
 1420 012b 77000000 		.4byte	0x77
 1421 012f 06       		.byte	0x6
 1422 0130 07       		.uleb128 0x7
 1423 0131 82050000 		.4byte	.LASF26
 1424 0135 03       		.byte	0x3
 1425 0136 96       		.byte	0x96
 1426 0137 77000000 		.4byte	0x77
 1427 013b 08       		.byte	0x8
 1428 013c 07       		.uleb128 0x7
 1429 013d 4D060000 		.4byte	.LASF27
 1430 0141 03       		.byte	0x3
 1431 0142 97       		.byte	0x97
 1432 0143 6B000000 		.4byte	0x6b
 1433 0147 0A       		.byte	0xa
 1434 0148 00       		.byte	0
 1435 0149 08       		.uleb128 0x8
 1436 014a C6020000 		.4byte	.LASF28
 1437 014e 03       		.byte	0x3
 1438 014f 98       		.byte	0x98
 1439 0150 D4000000 		.4byte	0xd4
 1440 0154 06       		.uleb128 0x6
 1441 0155 10       		.byte	0x10
 1442 0156 03       		.byte	0x3
 1443 0157 D4       		.byte	0xd4
 1444 0158 8D010000 		.4byte	0x18d
 1445 015c 07       		.uleb128 0x7
 1446 015d E0040000 		.4byte	.LASF29
 1447 0161 03       		.byte	0x3
 1448 0162 D6       		.byte	0xd6
 1449 0163 6B000000 		.4byte	0x6b
 1450 0167 00       		.byte	0
 1451 0168 07       		.uleb128 0x7
 1452 0169 0D050000 		.4byte	.LASF30
 1453 016d 03       		.byte	0x3
 1454 016e D7       		.byte	0xd7
 1455 016f 6B000000 		.4byte	0x6b
 1456 0173 01       		.byte	0x1
 1457 0174 07       		.uleb128 0x7
 1458 0175 0E020000 		.4byte	.LASF31
 1459 0179 03       		.byte	0x3
 1460 017a D8       		.byte	0xd8
 1461 017b 6B000000 		.4byte	0x6b
 1462 017f 02       		.byte	0x2
 1463 0180 09       		.uleb128 0x9
 1464 0181 67617000 		.ascii	"gap\000"
 1465 0185 03       		.byte	0x3
 1466 0186 D9       		.byte	0xd9
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 72


 1467 0187 8D010000 		.4byte	0x18d
 1468 018b 03       		.byte	0x3
 1469 018c 00       		.byte	0
 1470 018d 0A       		.uleb128 0xa
 1471 018e 6B000000 		.4byte	0x6b
 1472 0192 9D010000 		.4byte	0x19d
 1473 0196 0B       		.uleb128 0xb
 1474 0197 CD000000 		.4byte	0xcd
 1475 019b 0C       		.byte	0xc
 1476 019c 00       		.byte	0
 1477 019d 08       		.uleb128 0x8
 1478 019e 14020000 		.4byte	.LASF32
 1479 01a2 03       		.byte	0x3
 1480 01a3 DA       		.byte	0xda
 1481 01a4 54010000 		.4byte	0x154
 1482 01a8 06       		.uleb128 0x6
 1483 01a9 10       		.byte	0x10
 1484 01aa 03       		.byte	0x3
 1485 01ab E6       		.byte	0xe6
 1486 01ac 29020000 		.4byte	0x229
 1487 01b0 07       		.uleb128 0x7
 1488 01b1 47020000 		.4byte	.LASF33
 1489 01b5 03       		.byte	0x3
 1490 01b6 E8       		.byte	0xe8
 1491 01b7 6B000000 		.4byte	0x6b
 1492 01bb 00       		.byte	0
 1493 01bc 07       		.uleb128 0x7
 1494 01bd 7A000000 		.4byte	.LASF34
 1495 01c1 03       		.byte	0x3
 1496 01c2 E9       		.byte	0xe9
 1497 01c3 6B000000 		.4byte	0x6b
 1498 01c7 01       		.byte	0x1
 1499 01c8 07       		.uleb128 0x7
 1500 01c9 13030000 		.4byte	.LASF35
 1501 01cd 03       		.byte	0x3
 1502 01ce EA       		.byte	0xea
 1503 01cf 6B000000 		.4byte	0x6b
 1504 01d3 02       		.byte	0x2
 1505 01d4 07       		.uleb128 0x7
 1506 01d5 44060000 		.4byte	.LASF36
 1507 01d9 03       		.byte	0x3
 1508 01da EB       		.byte	0xeb
 1509 01db 6B000000 		.4byte	0x6b
 1510 01df 03       		.byte	0x3
 1511 01e0 07       		.uleb128 0x7
 1512 01e1 82030000 		.4byte	.LASF37
 1513 01e5 03       		.byte	0x3
 1514 01e6 EC       		.byte	0xec
 1515 01e7 6B000000 		.4byte	0x6b
 1516 01eb 04       		.byte	0x4
 1517 01ec 07       		.uleb128 0x7
 1518 01ed 0B030000 		.4byte	.LASF38
 1519 01f1 03       		.byte	0x3
 1520 01f2 ED       		.byte	0xed
 1521 01f3 6B000000 		.4byte	0x6b
 1522 01f7 05       		.byte	0x5
 1523 01f8 07       		.uleb128 0x7
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 73


 1524 01f9 3F010000 		.4byte	.LASF39
 1525 01fd 03       		.byte	0x3
 1526 01fe EE       		.byte	0xee
 1527 01ff 6B000000 		.4byte	0x6b
 1528 0203 06       		.byte	0x6
 1529 0204 07       		.uleb128 0x7
 1530 0205 54040000 		.4byte	.LASF40
 1531 0209 03       		.byte	0x3
 1532 020a EF       		.byte	0xef
 1533 020b 6B000000 		.4byte	0x6b
 1534 020f 07       		.byte	0x7
 1535 0210 07       		.uleb128 0x7
 1536 0211 7D030000 		.4byte	.LASF41
 1537 0215 03       		.byte	0x3
 1538 0216 F0       		.byte	0xf0
 1539 0217 6B000000 		.4byte	0x6b
 1540 021b 08       		.byte	0x8
 1541 021c 09       		.uleb128 0x9
 1542 021d 67617000 		.ascii	"gap\000"
 1543 0221 03       		.byte	0x3
 1544 0222 F1       		.byte	0xf1
 1545 0223 29020000 		.4byte	0x229
 1546 0227 09       		.byte	0x9
 1547 0228 00       		.byte	0
 1548 0229 0A       		.uleb128 0xa
 1549 022a 6B000000 		.4byte	0x6b
 1550 022e 39020000 		.4byte	0x239
 1551 0232 0B       		.uleb128 0xb
 1552 0233 CD000000 		.4byte	0xcd
 1553 0237 06       		.byte	0x6
 1554 0238 00       		.byte	0
 1555 0239 08       		.uleb128 0x8
 1556 023a 6F060000 		.4byte	.LASF42
 1557 023e 03       		.byte	0x3
 1558 023f F2       		.byte	0xf2
 1559 0240 A8010000 		.4byte	0x1a8
 1560 0244 0C       		.uleb128 0xc
 1561 0245 90       		.byte	0x90
 1562 0246 03       		.byte	0x3
 1563 0247 0E01     		.2byte	0x10e
 1564 0249 5B020000 		.4byte	0x25b
 1565 024d 0D       		.uleb128 0xd
 1566 024e 76010000 		.4byte	.LASF43
 1567 0252 03       		.byte	0x3
 1568 0253 1001     		.2byte	0x110
 1569 0255 5B020000 		.4byte	0x25b
 1570 0259 00       		.byte	0
 1571 025a 00       		.byte	0
 1572 025b 0A       		.uleb128 0xa
 1573 025c 9D010000 		.4byte	0x19d
 1574 0260 6B020000 		.4byte	0x26b
 1575 0264 0B       		.uleb128 0xb
 1576 0265 CD000000 		.4byte	0xcd
 1577 0269 08       		.byte	0x8
 1578 026a 00       		.byte	0
 1579 026b 04       		.uleb128 0x4
 1580 026c 69050000 		.4byte	.LASF44
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 74


 1581 0270 03       		.byte	0x3
 1582 0271 1101     		.2byte	0x111
 1583 0273 44020000 		.4byte	0x244
 1584 0277 0C       		.uleb128 0xc
 1585 0278 90       		.byte	0x90
 1586 0279 03       		.byte	0x3
 1587 027a 1401     		.2byte	0x114
 1588 027c 8E020000 		.4byte	0x28e
 1589 0280 0D       		.uleb128 0xd
 1590 0281 A3000000 		.4byte	.LASF45
 1591 0285 03       		.byte	0x3
 1592 0286 1601     		.2byte	0x116
 1593 0288 8E020000 		.4byte	0x28e
 1594 028c 00       		.byte	0
 1595 028d 00       		.byte	0
 1596 028e 0A       		.uleb128 0xa
 1597 028f 39020000 		.4byte	0x239
 1598 0293 9E020000 		.4byte	0x29e
 1599 0297 0B       		.uleb128 0xb
 1600 0298 CD000000 		.4byte	0xcd
 1601 029c 08       		.byte	0x8
 1602 029d 00       		.byte	0
 1603 029e 04       		.uleb128 0x4
 1604 029f 08010000 		.4byte	.LASF46
 1605 02a3 03       		.byte	0x3
 1606 02a4 1701     		.2byte	0x117
 1607 02a6 77020000 		.4byte	0x277
 1608 02aa 0E       		.uleb128 0xe
 1609 02ab 56020000 		.4byte	.LASF100
 1610 02af 01       		.byte	0x1
 1611 02b0 D603     		.2byte	0x3d6
 1612 02b2 77000000 		.4byte	0x77
 1613 02b6 01       		.byte	0x1
 1614 02b7 D4020000 		.4byte	0x2d4
 1615 02bb 0F       		.uleb128 0xf
 1616 02bc DF020000 		.4byte	.LASF60
 1617 02c0 01       		.byte	0x1
 1618 02c1 D603     		.2byte	0x3d6
 1619 02c3 6B000000 		.4byte	0x6b
 1620 02c7 10       		.uleb128 0x10
 1621 02c8 19000000 		.4byte	.LASF101
 1622 02cc 01       		.byte	0x1
 1623 02cd D803     		.2byte	0x3d8
 1624 02cf 77000000 		.4byte	0x77
 1625 02d3 00       		.byte	0
 1626 02d4 11       		.uleb128 0x11
 1627 02d5 E6050000 		.4byte	.LASF47
 1628 02d9 01       		.byte	0x1
 1629 02da D3       		.byte	0xd3
 1630 02db 00000000 		.4byte	.LFB1
 1631 02df 3C010000 		.4byte	.LFE1-.LFB1
 1632 02e3 01       		.uleb128 0x1
 1633 02e4 9C       		.byte	0x9c
 1634 02e5 94040000 		.4byte	0x494
 1635 02e9 12       		.uleb128 0x12
 1636 02ea 5E060000 		.4byte	.LASF53
 1637 02ee 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 75


 1638 02ef FA       		.byte	0xfa
 1639 02f0 6B000000 		.4byte	0x6b
 1640 02f4 00000000 		.4byte	.LLST0
 1641 02f8 13       		.uleb128 0x13
 1642 02f9 06000000 		.4byte	.LVL0
 1643 02fd 79090000 		.4byte	0x979
 1644 0301 14       		.uleb128 0x14
 1645 0302 3C000000 		.4byte	.LVL2
 1646 0306 84090000 		.4byte	0x984
 1647 030a 14030000 		.4byte	0x314
 1648 030e 15       		.uleb128 0x15
 1649 030f 01       		.uleb128 0x1
 1650 0310 50       		.byte	0x50
 1651 0311 01       		.uleb128 0x1
 1652 0312 30       		.byte	0x30
 1653 0313 00       		.byte	0
 1654 0314 14       		.uleb128 0x14
 1655 0315 5A000000 		.4byte	.LVL3
 1656 0319 84090000 		.4byte	0x984
 1657 031d 28030000 		.4byte	0x328
 1658 0321 15       		.uleb128 0x15
 1659 0322 01       		.uleb128 0x1
 1660 0323 50       		.byte	0x50
 1661 0324 02       		.uleb128 0x2
 1662 0325 76       		.byte	0x76
 1663 0326 00       		.sleb128 0
 1664 0327 00       		.byte	0
 1665 0328 14       		.uleb128 0x14
 1666 0329 60000000 		.4byte	.LVL4
 1667 032d 84090000 		.4byte	0x984
 1668 0331 3C030000 		.4byte	0x33c
 1669 0335 15       		.uleb128 0x15
 1670 0336 01       		.uleb128 0x1
 1671 0337 50       		.byte	0x50
 1672 0338 02       		.uleb128 0x2
 1673 0339 08       		.byte	0x8
 1674 033a 28       		.byte	0x28
 1675 033b 00       		.byte	0
 1676 033c 14       		.uleb128 0x14
 1677 033d 7E000000 		.4byte	.LVL5
 1678 0341 84090000 		.4byte	0x984
 1679 0345 50030000 		.4byte	0x350
 1680 0349 15       		.uleb128 0x15
 1681 034a 01       		.uleb128 0x1
 1682 034b 50       		.byte	0x50
 1683 034c 02       		.uleb128 0x2
 1684 034d 75       		.byte	0x75
 1685 034e 00       		.sleb128 0
 1686 034f 00       		.byte	0
 1687 0350 14       		.uleb128 0x14
 1688 0351 94000000 		.4byte	.LVL6
 1689 0355 8F090000 		.4byte	0x98f
 1690 0359 64030000 		.4byte	0x364
 1691 035d 15       		.uleb128 0x15
 1692 035e 01       		.uleb128 0x1
 1693 035f 50       		.byte	0x50
 1694 0360 02       		.uleb128 0x2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 76


 1695 0361 77       		.byte	0x77
 1696 0362 00       		.sleb128 0
 1697 0363 00       		.byte	0
 1698 0364 14       		.uleb128 0x14
 1699 0365 9C000000 		.4byte	.LVL7
 1700 0369 9A090000 		.4byte	0x99a
 1701 036d 7C030000 		.4byte	0x37c
 1702 0371 15       		.uleb128 0x15
 1703 0372 01       		.uleb128 0x1
 1704 0373 50       		.byte	0x50
 1705 0374 01       		.uleb128 0x1
 1706 0375 47       		.byte	0x47
 1707 0376 15       		.uleb128 0x15
 1708 0377 01       		.uleb128 0x1
 1709 0378 51       		.byte	0x51
 1710 0379 01       		.uleb128 0x1
 1711 037a 37       		.byte	0x37
 1712 037b 00       		.byte	0
 1713 037c 14       		.uleb128 0x14
 1714 037d A4000000 		.4byte	.LVL8
 1715 0381 A5090000 		.4byte	0x9a5
 1716 0385 8F030000 		.4byte	0x38f
 1717 0389 15       		.uleb128 0x15
 1718 038a 01       		.uleb128 0x1
 1719 038b 50       		.byte	0x50
 1720 038c 01       		.uleb128 0x1
 1721 038d 47       		.byte	0x47
 1722 038e 00       		.byte	0
 1723 038f 14       		.uleb128 0x14
 1724 0390 AC000000 		.4byte	.LVL9
 1725 0394 9A090000 		.4byte	0x99a
 1726 0398 A7030000 		.4byte	0x3a7
 1727 039c 15       		.uleb128 0x15
 1728 039d 01       		.uleb128 0x1
 1729 039e 50       		.byte	0x50
 1730 039f 01       		.uleb128 0x1
 1731 03a0 48       		.byte	0x48
 1732 03a1 15       		.uleb128 0x15
 1733 03a2 01       		.uleb128 0x1
 1734 03a3 51       		.byte	0x51
 1735 03a4 01       		.uleb128 0x1
 1736 03a5 37       		.byte	0x37
 1737 03a6 00       		.byte	0
 1738 03a7 14       		.uleb128 0x14
 1739 03a8 B4000000 		.4byte	.LVL10
 1740 03ac A5090000 		.4byte	0x9a5
 1741 03b0 BA030000 		.4byte	0x3ba
 1742 03b4 15       		.uleb128 0x15
 1743 03b5 01       		.uleb128 0x1
 1744 03b6 50       		.byte	0x50
 1745 03b7 01       		.uleb128 0x1
 1746 03b8 48       		.byte	0x48
 1747 03b9 00       		.byte	0
 1748 03ba 14       		.uleb128 0x14
 1749 03bb BC000000 		.4byte	.LVL11
 1750 03bf 9A090000 		.4byte	0x99a
 1751 03c3 D2030000 		.4byte	0x3d2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 77


 1752 03c7 15       		.uleb128 0x15
 1753 03c8 01       		.uleb128 0x1
 1754 03c9 50       		.byte	0x50
 1755 03ca 01       		.uleb128 0x1
 1756 03cb 45       		.byte	0x45
 1757 03cc 15       		.uleb128 0x15
 1758 03cd 01       		.uleb128 0x1
 1759 03ce 51       		.byte	0x51
 1760 03cf 01       		.uleb128 0x1
 1761 03d0 37       		.byte	0x37
 1762 03d1 00       		.byte	0
 1763 03d2 14       		.uleb128 0x14
 1764 03d3 C4000000 		.4byte	.LVL12
 1765 03d7 A5090000 		.4byte	0x9a5
 1766 03db E5030000 		.4byte	0x3e5
 1767 03df 15       		.uleb128 0x15
 1768 03e0 01       		.uleb128 0x1
 1769 03e1 50       		.byte	0x50
 1770 03e2 01       		.uleb128 0x1
 1771 03e3 45       		.byte	0x45
 1772 03e4 00       		.byte	0
 1773 03e5 14       		.uleb128 0x14
 1774 03e6 CC000000 		.4byte	.LVL13
 1775 03ea 9A090000 		.4byte	0x99a
 1776 03ee FE030000 		.4byte	0x3fe
 1777 03f2 15       		.uleb128 0x15
 1778 03f3 01       		.uleb128 0x1
 1779 03f4 50       		.byte	0x50
 1780 03f5 02       		.uleb128 0x2
 1781 03f6 74       		.byte	0x74
 1782 03f7 00       		.sleb128 0
 1783 03f8 15       		.uleb128 0x15
 1784 03f9 01       		.uleb128 0x1
 1785 03fa 51       		.byte	0x51
 1786 03fb 01       		.uleb128 0x1
 1787 03fc 37       		.byte	0x37
 1788 03fd 00       		.byte	0
 1789 03fe 14       		.uleb128 0x14
 1790 03ff D4000000 		.4byte	.LVL14
 1791 0403 A5090000 		.4byte	0x9a5
 1792 0407 12040000 		.4byte	0x412
 1793 040b 15       		.uleb128 0x15
 1794 040c 01       		.uleb128 0x1
 1795 040d 50       		.byte	0x50
 1796 040e 02       		.uleb128 0x2
 1797 040f 74       		.byte	0x74
 1798 0410 00       		.sleb128 0
 1799 0411 00       		.byte	0
 1800 0412 14       		.uleb128 0x14
 1801 0413 DC000000 		.4byte	.LVL15
 1802 0417 9A090000 		.4byte	0x99a
 1803 041b 2B040000 		.4byte	0x42b
 1804 041f 15       		.uleb128 0x15
 1805 0420 01       		.uleb128 0x1
 1806 0421 50       		.byte	0x50
 1807 0422 02       		.uleb128 0x2
 1808 0423 76       		.byte	0x76
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 78


 1809 0424 00       		.sleb128 0
 1810 0425 15       		.uleb128 0x15
 1811 0426 01       		.uleb128 0x1
 1812 0427 51       		.byte	0x51
 1813 0428 01       		.uleb128 0x1
 1814 0429 37       		.byte	0x37
 1815 042a 00       		.byte	0
 1816 042b 14       		.uleb128 0x14
 1817 042c E4000000 		.4byte	.LVL16
 1818 0430 A5090000 		.4byte	0x9a5
 1819 0434 3F040000 		.4byte	0x43f
 1820 0438 15       		.uleb128 0x15
 1821 0439 01       		.uleb128 0x1
 1822 043a 50       		.byte	0x50
 1823 043b 02       		.uleb128 0x2
 1824 043c 76       		.byte	0x76
 1825 043d 00       		.sleb128 0
 1826 043e 00       		.byte	0
 1827 043f 14       		.uleb128 0x14
 1828 0440 EC000000 		.4byte	.LVL17
 1829 0444 9A090000 		.4byte	0x99a
 1830 0448 58040000 		.4byte	0x458
 1831 044c 15       		.uleb128 0x15
 1832 044d 01       		.uleb128 0x1
 1833 044e 50       		.byte	0x50
 1834 044f 02       		.uleb128 0x2
 1835 0450 75       		.byte	0x75
 1836 0451 00       		.sleb128 0
 1837 0452 15       		.uleb128 0x15
 1838 0453 01       		.uleb128 0x1
 1839 0454 51       		.byte	0x51
 1840 0455 01       		.uleb128 0x1
 1841 0456 37       		.byte	0x37
 1842 0457 00       		.byte	0
 1843 0458 14       		.uleb128 0x14
 1844 0459 F4000000 		.4byte	.LVL18
 1845 045d A5090000 		.4byte	0x9a5
 1846 0461 6C040000 		.4byte	0x46c
 1847 0465 15       		.uleb128 0x15
 1848 0466 01       		.uleb128 0x1
 1849 0467 50       		.byte	0x50
 1850 0468 02       		.uleb128 0x2
 1851 0469 75       		.byte	0x75
 1852 046a 00       		.sleb128 0
 1853 046b 00       		.byte	0
 1854 046c 14       		.uleb128 0x14
 1855 046d FC000000 		.4byte	.LVL19
 1856 0471 9A090000 		.4byte	0x99a
 1857 0475 84040000 		.4byte	0x484
 1858 0479 15       		.uleb128 0x15
 1859 047a 01       		.uleb128 0x1
 1860 047b 50       		.byte	0x50
 1861 047c 01       		.uleb128 0x1
 1862 047d 3C       		.byte	0x3c
 1863 047e 15       		.uleb128 0x15
 1864 047f 01       		.uleb128 0x1
 1865 0480 51       		.byte	0x51
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 79


 1866 0481 01       		.uleb128 0x1
 1867 0482 37       		.byte	0x37
 1868 0483 00       		.byte	0
 1869 0484 16       		.uleb128 0x16
 1870 0485 08010000 		.4byte	.LVL21
 1871 0489 A5090000 		.4byte	0x9a5
 1872 048d 15       		.uleb128 0x15
 1873 048e 01       		.uleb128 0x1
 1874 048f 50       		.byte	0x50
 1875 0490 01       		.uleb128 0x1
 1876 0491 3C       		.byte	0x3c
 1877 0492 00       		.byte	0
 1878 0493 00       		.byte	0
 1879 0494 17       		.uleb128 0x17
 1880 0495 0D060000 		.4byte	.LASF48
 1881 0499 01       		.byte	0x1
 1882 049a CC01     		.2byte	0x1cc
 1883 049c 00000000 		.4byte	.LFB2
 1884 04a0 A4000000 		.4byte	.LFE2-.LFB2
 1885 04a4 01       		.uleb128 0x1
 1886 04a5 9C       		.byte	0x9c
 1887 04a6 DA040000 		.4byte	0x4da
 1888 04aa 18       		.uleb128 0x18
 1889 04ab E2010000 		.4byte	.LASF49
 1890 04af 01       		.byte	0x1
 1891 04b0 CC01     		.2byte	0x1cc
 1892 04b2 6B000000 		.4byte	0x6b
 1893 04b6 13000000 		.4byte	.LLST1
 1894 04ba 18       		.uleb128 0x18
 1895 04bb D6000000 		.4byte	.LASF50
 1896 04bf 01       		.byte	0x1
 1897 04c0 CC01     		.2byte	0x1cc
 1898 04c2 6B000000 		.4byte	0x6b
 1899 04c6 34000000 		.4byte	.LLST2
 1900 04ca 19       		.uleb128 0x19
 1901 04cb 6A000000 		.4byte	.LVL24
 1902 04cf B0090000 		.4byte	0x9b0
 1903 04d3 15       		.uleb128 0x15
 1904 04d4 01       		.uleb128 0x1
 1905 04d5 50       		.byte	0x50
 1906 04d6 01       		.uleb128 0x1
 1907 04d7 31       		.byte	0x31
 1908 04d8 00       		.byte	0
 1909 04d9 00       		.byte	0
 1910 04da 11       		.uleb128 0x11
 1911 04db 9F060000 		.4byte	.LASF51
 1912 04df 01       		.byte	0x1
 1913 04e0 BA       		.byte	0xba
 1914 04e1 00000000 		.4byte	.LFB0
 1915 04e5 24000000 		.4byte	.LFE0-.LFB0
 1916 04e9 01       		.uleb128 0x1
 1917 04ea 9C       		.byte	0x9c
 1918 04eb 20050000 		.4byte	0x520
 1919 04ef 1A       		.uleb128 0x1a
 1920 04f0 E2010000 		.4byte	.LASF49
 1921 04f4 01       		.byte	0x1
 1922 04f5 BA       		.byte	0xba
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 80


 1923 04f6 6B000000 		.4byte	0x6b
 1924 04fa 55000000 		.4byte	.LLST3
 1925 04fe 1A       		.uleb128 0x1a
 1926 04ff D6000000 		.4byte	.LASF50
 1927 0503 01       		.byte	0x1
 1928 0504 BA       		.byte	0xba
 1929 0505 6B000000 		.4byte	0x6b
 1930 0509 76000000 		.4byte	.LLST4
 1931 050d 13       		.uleb128 0x13
 1932 050e 10000000 		.4byte	.LVL26
 1933 0512 D4020000 		.4byte	0x2d4
 1934 0516 1B       		.uleb128 0x1b
 1935 0517 20000000 		.4byte	.LVL27
 1936 051b 94040000 		.4byte	0x494
 1937 051f 00       		.byte	0
 1938 0520 1C       		.uleb128 0x1c
 1939 0521 DB000000 		.4byte	.LASF76
 1940 0525 01       		.byte	0x1
 1941 0526 9F02     		.2byte	0x29f
 1942 0528 00000000 		.4byte	.LFB3
 1943 052c 4C000000 		.4byte	.LFE3-.LFB3
 1944 0530 01       		.uleb128 0x1
 1945 0531 9C       		.byte	0x9c
 1946 0532 17       		.uleb128 0x17
 1947 0533 38000000 		.4byte	.LASF52
 1948 0537 01       		.byte	0x1
 1949 0538 D902     		.2byte	0x2d9
 1950 053a 00000000 		.4byte	.LFB4
 1951 053e B4000000 		.4byte	.LFE4-.LFB4
 1952 0542 01       		.uleb128 0x1
 1953 0543 9C       		.byte	0x9c
 1954 0544 74050000 		.4byte	0x574
 1955 0548 1D       		.uleb128 0x1d
 1956 0549 5E060000 		.4byte	.LASF53
 1957 054d 01       		.byte	0x1
 1958 054e DB02     		.2byte	0x2db
 1959 0550 6B000000 		.4byte	0x6b
 1960 0554 97000000 		.4byte	.LLST5
 1961 0558 13       		.uleb128 0x13
 1962 0559 06000000 		.4byte	.LVL28
 1963 055d 79090000 		.4byte	0x979
 1964 0561 13       		.uleb128 0x13
 1965 0562 44000000 		.4byte	.LVL29
 1966 0566 8F090000 		.4byte	0x98f
 1967 056a 13       		.uleb128 0x13
 1968 056b 68000000 		.4byte	.LVL30
 1969 056f BB090000 		.4byte	0x9bb
 1970 0573 00       		.byte	0
 1971 0574 1E       		.uleb128 0x1e
 1972 0575 87060000 		.4byte	.LASF55
 1973 0579 01       		.byte	0x1
 1974 057a 5103     		.2byte	0x351
 1975 057c 6B000000 		.4byte	0x6b
 1976 0580 00000000 		.4byte	.LFB5
 1977 0584 18000000 		.4byte	.LFE5-.LFB5
 1978 0588 01       		.uleb128 0x1
 1979 0589 9C       		.byte	0x9c
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 81


 1980 058a 9F050000 		.4byte	0x59f
 1981 058e 1D       		.uleb128 0x1d
 1982 058f 06050000 		.4byte	.LASF54
 1983 0593 01       		.byte	0x1
 1984 0594 5303     		.2byte	0x353
 1985 0596 6B000000 		.4byte	0x6b
 1986 059a AA000000 		.4byte	.LLST6
 1987 059e 00       		.byte	0
 1988 059f 1F       		.uleb128 0x1f
 1989 05a0 2C020000 		.4byte	.LASF74
 1990 05a4 01       		.byte	0x1
 1991 05a5 6803     		.2byte	0x368
 1992 05a7 6B000000 		.4byte	0x6b
 1993 05ab 00000000 		.4byte	.LFB6
 1994 05af 0C000000 		.4byte	.LFE6-.LFB6
 1995 05b3 01       		.uleb128 0x1
 1996 05b4 9C       		.byte	0x9c
 1997 05b5 1E       		.uleb128 0x1e
 1998 05b6 7C010000 		.4byte	.LASF56
 1999 05ba 01       		.byte	0x1
 2000 05bb 8203     		.2byte	0x382
 2001 05bd 6B000000 		.4byte	0x6b
 2002 05c1 00000000 		.4byte	.LFB7
 2003 05c5 18000000 		.4byte	.LFE7-.LFB7
 2004 05c9 01       		.uleb128 0x1
 2005 05ca 9C       		.byte	0x9c
 2006 05cb E0050000 		.4byte	0x5e0
 2007 05cf 20       		.uleb128 0x20
 2008 05d0 72657300 		.ascii	"res\000"
 2009 05d4 01       		.byte	0x1
 2010 05d5 8403     		.2byte	0x384
 2011 05d7 6B000000 		.4byte	0x6b
 2012 05db BD000000 		.4byte	.LLST7
 2013 05df 00       		.byte	0
 2014 05e0 1E       		.uleb128 0x1e
 2015 05e1 52030000 		.4byte	.LASF57
 2016 05e5 01       		.byte	0x1
 2017 05e6 9F03     		.2byte	0x39f
 2018 05e8 6B000000 		.4byte	0x6b
 2019 05ec 00000000 		.4byte	.LFB8
 2020 05f0 0C000000 		.4byte	.LFE8-.LFB8
 2021 05f4 01       		.uleb128 0x1
 2022 05f5 9C       		.byte	0x9c
 2023 05f6 0B060000 		.4byte	0x60b
 2024 05fa 18       		.uleb128 0x18
 2025 05fb 09000000 		.4byte	.LASF58
 2026 05ff 01       		.byte	0x1
 2027 0600 9F03     		.2byte	0x39f
 2028 0602 6B000000 		.4byte	0x6b
 2029 0606 DC000000 		.4byte	.LLST8
 2030 060a 00       		.byte	0
 2031 060b 1E       		.uleb128 0x1e
 2032 060c A9000000 		.4byte	.LASF59
 2033 0610 01       		.byte	0x1
 2034 0611 BF03     		.2byte	0x3bf
 2035 0613 6B000000 		.4byte	0x6b
 2036 0617 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 82


 2037 061b 10000000 		.4byte	.LFE9-.LFB9
 2038 061f 01       		.uleb128 0x1
 2039 0620 9C       		.byte	0x9c
 2040 0621 36060000 		.4byte	0x636
 2041 0625 18       		.uleb128 0x18
 2042 0626 DF020000 		.4byte	.LASF60
 2043 062a 01       		.byte	0x1
 2044 062b BF03     		.2byte	0x3bf
 2045 062d 6B000000 		.4byte	0x6b
 2046 0631 FD000000 		.4byte	.LLST9
 2047 0635 00       		.byte	0
 2048 0636 21       		.uleb128 0x21
 2049 0637 AA020000 		.4byte	0x2aa
 2050 063b 00000000 		.4byte	.LFB10
 2051 063f 28000000 		.4byte	.LFE10-.LFB10
 2052 0643 01       		.uleb128 0x1
 2053 0644 9C       		.byte	0x9c
 2054 0645 82060000 		.4byte	0x682
 2055 0649 22       		.uleb128 0x22
 2056 064a BB020000 		.4byte	0x2bb
 2057 064e 1E010000 		.4byte	.LLST10
 2058 0652 23       		.uleb128 0x23
 2059 0653 C7020000 		.4byte	0x2c7
 2060 0657 58010000 		.4byte	.LLST11
 2061 065b 24       		.uleb128 0x24
 2062 065c 06000000 		.4byte	.LBB4
 2063 0660 1A000000 		.4byte	.LBE4-.LBB4
 2064 0664 22       		.uleb128 0x22
 2065 0665 BB020000 		.4byte	0x2bb
 2066 0669 77010000 		.4byte	.LLST12
 2067 066d 24       		.uleb128 0x24
 2068 066e 06000000 		.4byte	.LBB5
 2069 0672 1A000000 		.4byte	.LBE5-.LBB5
 2070 0676 23       		.uleb128 0x23
 2071 0677 C7020000 		.4byte	0x2c7
 2072 067b 98010000 		.4byte	.LLST13
 2073 067f 00       		.byte	0
 2074 0680 00       		.byte	0
 2075 0681 00       		.byte	0
 2076 0682 17       		.uleb128 0x17
 2077 0683 F5000000 		.4byte	.LASF61
 2078 0687 01       		.byte	0x1
 2079 0688 3E05     		.2byte	0x53e
 2080 068a 00000000 		.4byte	.LFB11
 2081 068e 7C000000 		.4byte	.LFE11-.LFB11
 2082 0692 01       		.uleb128 0x1
 2083 0693 9C       		.byte	0x9c
 2084 0694 DF060000 		.4byte	0x6df
 2085 0698 18       		.uleb128 0x18
 2086 0699 DF020000 		.4byte	.LASF60
 2087 069d 01       		.byte	0x1
 2088 069e 3E05     		.2byte	0x53e
 2089 06a0 6B000000 		.4byte	0x6b
 2090 06a4 C7010000 		.4byte	.LLST14
 2091 06a8 25       		.uleb128 0x25
 2092 06a9 5D000000 		.4byte	.LASF62
 2093 06ad 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 83


 2094 06ae 3E05     		.2byte	0x53e
 2095 06b0 DF060000 		.4byte	0x6df
 2096 06b4 01       		.uleb128 0x1
 2097 06b5 51       		.byte	0x51
 2098 06b6 18       		.uleb128 0x18
 2099 06b7 DB010000 		.4byte	.LASF63
 2100 06bb 01       		.byte	0x1
 2101 06bc 3E05     		.2byte	0x53e
 2102 06be 77000000 		.4byte	0x77
 2103 06c2 F3010000 		.4byte	.LLST15
 2104 06c6 24       		.uleb128 0x24
 2105 06c7 58000000 		.4byte	.LBB6
 2106 06cb 24000000 		.4byte	.LBE6-.LBB6
 2107 06cf 20       		.uleb128 0x20
 2108 06d0 6900     		.ascii	"i\000"
 2109 06d2 01       		.byte	0x1
 2110 06d3 5305     		.2byte	0x553
 2111 06d5 77000000 		.4byte	0x77
 2112 06d9 2A020000 		.4byte	.LLST16
 2113 06dd 00       		.byte	0
 2114 06de 00       		.byte	0
 2115 06df 26       		.uleb128 0x26
 2116 06e0 04       		.byte	0x4
 2117 06e1 E5060000 		.4byte	0x6e5
 2118 06e5 27       		.uleb128 0x27
 2119 06e6 6B000000 		.4byte	0x6b
 2120 06ea 17       		.uleb128 0x17
 2121 06eb A6050000 		.4byte	.LASF64
 2122 06ef 01       		.byte	0x1
 2123 06f0 E408     		.2byte	0x8e4
 2124 06f2 00000000 		.4byte	.LFB13
 2125 06f6 28000000 		.4byte	.LFE13-.LFB13
 2126 06fa 01       		.uleb128 0x1
 2127 06fb 9C       		.byte	0x9c
 2128 06fc 11070000 		.4byte	0x711
 2129 0700 18       		.uleb128 0x18
 2130 0701 DF020000 		.4byte	.LASF60
 2131 0705 01       		.byte	0x1
 2132 0706 E408     		.2byte	0x8e4
 2133 0708 6B000000 		.4byte	0x6b
 2134 070c 52020000 		.4byte	.LLST17
 2135 0710 00       		.byte	0
 2136 0711 1E       		.uleb128 0x1e
 2137 0712 55010000 		.4byte	.LASF65
 2138 0716 01       		.byte	0x1
 2139 0717 7506     		.2byte	0x675
 2140 0719 77000000 		.4byte	0x77
 2141 071d 00000000 		.4byte	.LFB12
 2142 0721 4C000000 		.4byte	.LFE12-.LFB12
 2143 0725 01       		.uleb128 0x1
 2144 0726 9C       		.byte	0x9c
 2145 0727 B0070000 		.4byte	0x7b0
 2146 072b 18       		.uleb128 0x18
 2147 072c DF020000 		.4byte	.LASF60
 2148 0730 01       		.byte	0x1
 2149 0731 7506     		.2byte	0x675
 2150 0733 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 84


 2151 0737 73020000 		.4byte	.LLST18
 2152 073b 18       		.uleb128 0x18
 2153 073c 5D000000 		.4byte	.LASF62
 2154 0740 01       		.byte	0x1
 2155 0741 7506     		.2byte	0x675
 2156 0743 B0070000 		.4byte	0x7b0
 2157 0747 AD020000 		.4byte	.LLST19
 2158 074b 18       		.uleb128 0x18
 2159 074c DB010000 		.4byte	.LASF63
 2160 0750 01       		.byte	0x1
 2161 0751 7506     		.2byte	0x675
 2162 0753 77000000 		.4byte	0x77
 2163 0757 E7020000 		.4byte	.LLST20
 2164 075b 28       		.uleb128 0x28
 2165 075c 1E000000 		.4byte	.LBB7
 2166 0760 18000000 		.4byte	.LBE7-.LBB7
 2167 0764 77070000 		.4byte	0x777
 2168 0768 20       		.uleb128 0x20
 2169 0769 6900     		.ascii	"i\000"
 2170 076b 01       		.byte	0x1
 2171 076c 8206     		.2byte	0x682
 2172 076e 77000000 		.4byte	0x77
 2173 0772 29030000 		.4byte	.LLST21
 2174 0776 00       		.byte	0
 2175 0777 14       		.uleb128 0x14
 2176 0778 12000000 		.4byte	.LVL62
 2177 077c AA020000 		.4byte	0x2aa
 2178 0780 8B070000 		.4byte	0x78b
 2179 0784 15       		.uleb128 0x15
 2180 0785 01       		.uleb128 0x1
 2181 0786 50       		.byte	0x50
 2182 0787 02       		.uleb128 0x2
 2183 0788 75       		.byte	0x75
 2184 0789 00       		.sleb128 0
 2185 078a 00       		.byte	0
 2186 078b 14       		.uleb128 0x14
 2187 078c 1C000000 		.4byte	.LVL63
 2188 0790 AA020000 		.4byte	0x2aa
 2189 0794 9F070000 		.4byte	0x79f
 2190 0798 15       		.uleb128 0x15
 2191 0799 01       		.uleb128 0x1
 2192 079a 50       		.byte	0x50
 2193 079b 02       		.uleb128 0x2
 2194 079c 75       		.byte	0x75
 2195 079d 00       		.sleb128 0
 2196 079e 00       		.byte	0
 2197 079f 19       		.uleb128 0x19
 2198 07a0 3C000000 		.4byte	.LVL67
 2199 07a4 EA060000 		.4byte	0x6ea
 2200 07a8 15       		.uleb128 0x15
 2201 07a9 01       		.uleb128 0x1
 2202 07aa 50       		.byte	0x50
 2203 07ab 02       		.uleb128 0x2
 2204 07ac 75       		.byte	0x75
 2205 07ad 00       		.sleb128 0
 2206 07ae 00       		.byte	0
 2207 07af 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 85


 2208 07b0 26       		.uleb128 0x26
 2209 07b1 04       		.byte	0x4
 2210 07b2 6B000000 		.4byte	0x6b
 2211 07b6 17       		.uleb128 0x17
 2212 07b7 18030000 		.4byte	.LASF66
 2213 07bb 01       		.byte	0x1
 2214 07bc FC08     		.2byte	0x8fc
 2215 07be 00000000 		.4byte	.LFB14
 2216 07c2 14000000 		.4byte	.LFE14-.LFB14
 2217 07c6 01       		.uleb128 0x1
 2218 07c7 9C       		.byte	0x9c
 2219 07c8 DD070000 		.4byte	0x7dd
 2220 07cc 18       		.uleb128 0x18
 2221 07cd DF020000 		.4byte	.LASF60
 2222 07d1 01       		.byte	0x1
 2223 07d2 FC08     		.2byte	0x8fc
 2224 07d4 6B000000 		.4byte	0x6b
 2225 07d8 4E030000 		.4byte	.LLST22
 2226 07dc 00       		.byte	0
 2227 07dd 17       		.uleb128 0x17
 2228 07de 8C000000 		.4byte	.LASF67
 2229 07e2 01       		.byte	0x1
 2230 07e3 1A09     		.2byte	0x91a
 2231 07e5 00000000 		.4byte	.LFB15
 2232 07e9 0C000000 		.4byte	.LFE15-.LFB15
 2233 07ed 01       		.uleb128 0x1
 2234 07ee 9C       		.byte	0x9c
 2235 07ef 02080000 		.4byte	0x802
 2236 07f3 25       		.uleb128 0x25
 2237 07f4 57060000 		.4byte	.LASF68
 2238 07f8 01       		.byte	0x1
 2239 07f9 1A09     		.2byte	0x91a
 2240 07fb 6B000000 		.4byte	0x6b
 2241 07ff 01       		.uleb128 0x1
 2242 0800 50       		.byte	0x50
 2243 0801 00       		.byte	0
 2244 0802 1E       		.uleb128 0x1e
 2245 0803 9C040000 		.4byte	.LASF69
 2246 0807 01       		.byte	0x1
 2247 0808 3309     		.2byte	0x933
 2248 080a 6B000000 		.4byte	0x6b
 2249 080e 00000000 		.4byte	.LFB16
 2250 0812 1C000000 		.4byte	.LFE16-.LFB16
 2251 0816 01       		.uleb128 0x1
 2252 0817 9C       		.byte	0x9c
 2253 0818 3C080000 		.4byte	0x83c
 2254 081c 18       		.uleb128 0x18
 2255 081d DF020000 		.4byte	.LASF60
 2256 0821 01       		.byte	0x1
 2257 0822 3309     		.2byte	0x933
 2258 0824 6B000000 		.4byte	0x6b
 2259 0828 6F030000 		.4byte	.LLST23
 2260 082c 20       		.uleb128 0x20
 2261 082d 637200   		.ascii	"cr\000"
 2262 0830 01       		.byte	0x1
 2263 0831 3509     		.2byte	0x935
 2264 0833 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 86


 2265 0837 90030000 		.4byte	.LLST24
 2266 083b 00       		.byte	0
 2267 083c 17       		.uleb128 0x17
 2268 083d 8D050000 		.4byte	.LASF70
 2269 0841 01       		.byte	0x1
 2270 0842 5C09     		.2byte	0x95c
 2271 0844 00000000 		.4byte	.LFB17
 2272 0848 18000000 		.4byte	.LFE17-.LFB17
 2273 084c 01       		.uleb128 0x1
 2274 084d 9C       		.byte	0x9c
 2275 084e 61080000 		.4byte	0x861
 2276 0852 25       		.uleb128 0x25
 2277 0853 BE000000 		.4byte	.LASF71
 2278 0857 01       		.byte	0x1
 2279 0858 5C09     		.2byte	0x95c
 2280 085a 6B000000 		.4byte	0x6b
 2281 085e 01       		.uleb128 0x1
 2282 085f 50       		.byte	0x50
 2283 0860 00       		.byte	0
 2284 0861 1E       		.uleb128 0x1e
 2285 0862 B4040000 		.4byte	.LASF72
 2286 0866 01       		.byte	0x1
 2287 0867 9509     		.2byte	0x995
 2288 0869 6B000000 		.4byte	0x6b
 2289 086d 00000000 		.4byte	.LFB18
 2290 0871 10000000 		.4byte	.LFE18-.LFB18
 2291 0875 01       		.uleb128 0x1
 2292 0876 9C       		.byte	0x9c
 2293 0877 8C080000 		.4byte	0x88c
 2294 087b 1D       		.uleb128 0x1d
 2295 087c 70020000 		.4byte	.LASF73
 2296 0880 01       		.byte	0x1
 2297 0881 9709     		.2byte	0x997
 2298 0883 6B000000 		.4byte	0x6b
 2299 0887 AF030000 		.4byte	.LLST25
 2300 088b 00       		.byte	0
 2301 088c 1F       		.uleb128 0x1f
 2302 088d 9D010000 		.4byte	.LASF75
 2303 0891 01       		.byte	0x1
 2304 0892 AD09     		.2byte	0x9ad
 2305 0894 6B000000 		.4byte	0x6b
 2306 0898 00000000 		.4byte	.LFB19
 2307 089c 10000000 		.4byte	.LFE19-.LFB19
 2308 08a0 01       		.uleb128 0x1
 2309 08a1 9C       		.byte	0x9c
 2310 08a2 1C       		.uleb128 0x1c
 2311 08a3 21010000 		.4byte	.LASF77
 2312 08a7 01       		.byte	0x1
 2313 08a8 BB09     		.2byte	0x9bb
 2314 08aa 00000000 		.4byte	.LFB20
 2315 08ae 10000000 		.4byte	.LFE20-.LFB20
 2316 08b2 01       		.uleb128 0x1
 2317 08b3 9C       		.byte	0x9c
 2318 08b4 1C       		.uleb128 0x1c
 2319 08b5 F5050000 		.4byte	.LASF78
 2320 08b9 01       		.byte	0x1
 2321 08ba D109     		.2byte	0x9d1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 87


 2322 08bc 00000000 		.4byte	.LFB21
 2323 08c0 10000000 		.4byte	.LFE21-.LFB21
 2324 08c4 01       		.uleb128 0x1
 2325 08c5 9C       		.byte	0x9c
 2326 08c6 29       		.uleb128 0x29
 2327 08c7 D4050000 		.4byte	.LASF79
 2328 08cb 01       		.byte	0x1
 2329 08cc 28       		.byte	0x28
 2330 08cd 6B000000 		.4byte	0x6b
 2331 08d1 05       		.uleb128 0x5
 2332 08d2 03       		.byte	0x3
 2333 08d3 00000000 		.4byte	USBUART_1_initVar
 2334 08d7 2A       		.uleb128 0x2a
 2335 08d8 EF010000 		.4byte	.LASF80
 2336 08dc 03       		.byte	0x3
 2337 08dd D202     		.2byte	0x2d2
 2338 08df B0000000 		.4byte	0xb0
 2339 08e3 2A       		.uleb128 0x2a
 2340 08e4 AE020000 		.4byte	.LASF81
 2341 08e8 03       		.byte	0x3
 2342 08e9 D302     		.2byte	0x2d3
 2343 08eb B0000000 		.4byte	0xb0
 2344 08ef 2A       		.uleb128 0x2a
 2345 08f0 84040000 		.4byte	.LASF82
 2346 08f4 03       		.byte	0x3
 2347 08f5 D402     		.2byte	0x2d4
 2348 08f7 B0000000 		.4byte	0xb0
 2349 08fb 2A       		.uleb128 0x2a
 2350 08fc 25060000 		.4byte	.LASF83
 2351 0900 03       		.byte	0x3
 2352 0901 D502     		.2byte	0x2d5
 2353 0903 B0000000 		.4byte	0xb0
 2354 0907 2A       		.uleb128 0x2a
 2355 0908 63000000 		.4byte	.LASF84
 2356 090c 03       		.byte	0x3
 2357 090d D602     		.2byte	0x2d6
 2358 090f B0000000 		.4byte	0xb0
 2359 0913 2B       		.uleb128 0x2b
 2360 0914 1E000000 		.4byte	.LASF85
 2361 0918 04       		.byte	0x4
 2362 0919 72       		.byte	0x72
 2363 091a B0000000 		.4byte	0xb0
 2364 091e 0A       		.uleb128 0xa
 2365 091f B0000000 		.4byte	0xb0
 2366 0923 2E090000 		.4byte	0x92e
 2367 0927 0B       		.uleb128 0xb
 2368 0928 CD000000 		.4byte	0xcd
 2369 092c 01       		.byte	0x1
 2370 092d 00       		.byte	0
 2371 092e 2B       		.uleb128 0x2b
 2372 092f 14050000 		.4byte	.LASF86
 2373 0933 04       		.byte	0x4
 2374 0934 73       		.byte	0x73
 2375 0935 39090000 		.4byte	0x939
 2376 0939 05       		.uleb128 0x5
 2377 093a 1E090000 		.4byte	0x91e
 2378 093e 2B       		.uleb128 0x2b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 88


 2379 093f 95030000 		.4byte	.LASF87
 2380 0943 04       		.byte	0x4
 2381 0944 75       		.byte	0x75
 2382 0945 B0000000 		.4byte	0xb0
 2383 0949 0A       		.uleb128 0xa
 2384 094a 59090000 		.4byte	0x959
 2385 094e 59090000 		.4byte	0x959
 2386 0952 0B       		.uleb128 0xb
 2387 0953 CD000000 		.4byte	0xcd
 2388 0957 08       		.byte	0x8
 2389 0958 00       		.byte	0
 2390 0959 05       		.uleb128 0x5
 2391 095a 49010000 		.4byte	0x149
 2392 095e 2B       		.uleb128 0x2b
 2393 095f 69010000 		.4byte	.LASF88
 2394 0963 04       		.byte	0x4
 2395 0964 79       		.byte	0x79
 2396 0965 69090000 		.4byte	0x969
 2397 0969 05       		.uleb128 0x5
 2398 096a 49090000 		.4byte	0x949
 2399 096e 2B       		.uleb128 0x2b
 2400 096f ED040000 		.4byte	.LASF89
 2401 0973 04       		.byte	0x4
 2402 0974 9B       		.byte	0x9b
 2403 0975 B0000000 		.4byte	0xb0
 2404 0979 2C       		.uleb128 0x2c
 2405 097a C9040000 		.4byte	.LASF90
 2406 097e C9040000 		.4byte	.LASF90
 2407 0982 05       		.byte	0x5
 2408 0983 7D       		.byte	0x7d
 2409 0984 2C       		.uleb128 0x2c
 2410 0985 F3020000 		.4byte	.LASF91
 2411 0989 F3020000 		.4byte	.LASF91
 2412 098d 05       		.byte	0x5
 2413 098e 77       		.byte	0x77
 2414 098f 2C       		.uleb128 0x2c
 2415 0990 47000000 		.4byte	.LASF92
 2416 0994 47000000 		.4byte	.LASF92
 2417 0998 05       		.byte	0x5
 2418 0999 7E       		.byte	0x7e
 2419 099a 2C       		.uleb128 0x2c
 2420 099b 44010000 		.4byte	.LASF93
 2421 099f 44010000 		.4byte	.LASF93
 2422 09a3 05       		.byte	0x5
 2423 09a4 8B       		.byte	0x8b
 2424 09a5 2C       		.uleb128 0x2c
 2425 09a6 BC050000 		.4byte	.LASF94
 2426 09aa BC050000 		.4byte	.LASF94
 2427 09ae 05       		.byte	0x5
 2428 09af 88       		.byte	0x88
 2429 09b0 2C       		.uleb128 0x2c
 2430 09b1 87030000 		.4byte	.LASF95
 2431 09b5 87030000 		.4byte	.LASF95
 2432 09b9 05       		.byte	0x5
 2433 09ba 79       		.byte	0x79
 2434 09bb 2C       		.uleb128 0x2c
 2435 09bc 63040000 		.4byte	.LASF96
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 89


 2436 09c0 63040000 		.4byte	.LASF96
 2437 09c4 06       		.byte	0x6
 2438 09c5 2B       		.byte	0x2b
 2439 09c6 00       		.byte	0
 2440              		.section	.debug_abbrev,"",%progbits
 2441              	.Ldebug_abbrev0:
 2442 0000 01       		.uleb128 0x1
 2443 0001 11       		.uleb128 0x11
 2444 0002 01       		.byte	0x1
 2445 0003 25       		.uleb128 0x25
 2446 0004 0E       		.uleb128 0xe
 2447 0005 13       		.uleb128 0x13
 2448 0006 0B       		.uleb128 0xb
 2449 0007 03       		.uleb128 0x3
 2450 0008 0E       		.uleb128 0xe
 2451 0009 1B       		.uleb128 0x1b
 2452 000a 0E       		.uleb128 0xe
 2453 000b 55       		.uleb128 0x55
 2454 000c 17       		.uleb128 0x17
 2455 000d 11       		.uleb128 0x11
 2456 000e 01       		.uleb128 0x1
 2457 000f 10       		.uleb128 0x10
 2458 0010 17       		.uleb128 0x17
 2459 0011 00       		.byte	0
 2460 0012 00       		.byte	0
 2461 0013 02       		.uleb128 0x2
 2462 0014 24       		.uleb128 0x24
 2463 0015 00       		.byte	0
 2464 0016 0B       		.uleb128 0xb
 2465 0017 0B       		.uleb128 0xb
 2466 0018 3E       		.uleb128 0x3e
 2467 0019 0B       		.uleb128 0xb
 2468 001a 03       		.uleb128 0x3
 2469 001b 0E       		.uleb128 0xe
 2470 001c 00       		.byte	0
 2471 001d 00       		.byte	0
 2472 001e 03       		.uleb128 0x3
 2473 001f 24       		.uleb128 0x24
 2474 0020 00       		.byte	0
 2475 0021 0B       		.uleb128 0xb
 2476 0022 0B       		.uleb128 0xb
 2477 0023 3E       		.uleb128 0x3e
 2478 0024 0B       		.uleb128 0xb
 2479 0025 03       		.uleb128 0x3
 2480 0026 08       		.uleb128 0x8
 2481 0027 00       		.byte	0
 2482 0028 00       		.byte	0
 2483 0029 04       		.uleb128 0x4
 2484 002a 16       		.uleb128 0x16
 2485 002b 00       		.byte	0
 2486 002c 03       		.uleb128 0x3
 2487 002d 0E       		.uleb128 0xe
 2488 002e 3A       		.uleb128 0x3a
 2489 002f 0B       		.uleb128 0xb
 2490 0030 3B       		.uleb128 0x3b
 2491 0031 05       		.uleb128 0x5
 2492 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 90


 2493 0033 13       		.uleb128 0x13
 2494 0034 00       		.byte	0
 2495 0035 00       		.byte	0
 2496 0036 05       		.uleb128 0x5
 2497 0037 35       		.uleb128 0x35
 2498 0038 00       		.byte	0
 2499 0039 49       		.uleb128 0x49
 2500 003a 13       		.uleb128 0x13
 2501 003b 00       		.byte	0
 2502 003c 00       		.byte	0
 2503 003d 06       		.uleb128 0x6
 2504 003e 13       		.uleb128 0x13
 2505 003f 01       		.byte	0x1
 2506 0040 0B       		.uleb128 0xb
 2507 0041 0B       		.uleb128 0xb
 2508 0042 3A       		.uleb128 0x3a
 2509 0043 0B       		.uleb128 0xb
 2510 0044 3B       		.uleb128 0x3b
 2511 0045 0B       		.uleb128 0xb
 2512 0046 01       		.uleb128 0x1
 2513 0047 13       		.uleb128 0x13
 2514 0048 00       		.byte	0
 2515 0049 00       		.byte	0
 2516 004a 07       		.uleb128 0x7
 2517 004b 0D       		.uleb128 0xd
 2518 004c 00       		.byte	0
 2519 004d 03       		.uleb128 0x3
 2520 004e 0E       		.uleb128 0xe
 2521 004f 3A       		.uleb128 0x3a
 2522 0050 0B       		.uleb128 0xb
 2523 0051 3B       		.uleb128 0x3b
 2524 0052 0B       		.uleb128 0xb
 2525 0053 49       		.uleb128 0x49
 2526 0054 13       		.uleb128 0x13
 2527 0055 38       		.uleb128 0x38
 2528 0056 0B       		.uleb128 0xb
 2529 0057 00       		.byte	0
 2530 0058 00       		.byte	0
 2531 0059 08       		.uleb128 0x8
 2532 005a 16       		.uleb128 0x16
 2533 005b 00       		.byte	0
 2534 005c 03       		.uleb128 0x3
 2535 005d 0E       		.uleb128 0xe
 2536 005e 3A       		.uleb128 0x3a
 2537 005f 0B       		.uleb128 0xb
 2538 0060 3B       		.uleb128 0x3b
 2539 0061 0B       		.uleb128 0xb
 2540 0062 49       		.uleb128 0x49
 2541 0063 13       		.uleb128 0x13
 2542 0064 00       		.byte	0
 2543 0065 00       		.byte	0
 2544 0066 09       		.uleb128 0x9
 2545 0067 0D       		.uleb128 0xd
 2546 0068 00       		.byte	0
 2547 0069 03       		.uleb128 0x3
 2548 006a 08       		.uleb128 0x8
 2549 006b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 91


 2550 006c 0B       		.uleb128 0xb
 2551 006d 3B       		.uleb128 0x3b
 2552 006e 0B       		.uleb128 0xb
 2553 006f 49       		.uleb128 0x49
 2554 0070 13       		.uleb128 0x13
 2555 0071 38       		.uleb128 0x38
 2556 0072 0B       		.uleb128 0xb
 2557 0073 00       		.byte	0
 2558 0074 00       		.byte	0
 2559 0075 0A       		.uleb128 0xa
 2560 0076 01       		.uleb128 0x1
 2561 0077 01       		.byte	0x1
 2562 0078 49       		.uleb128 0x49
 2563 0079 13       		.uleb128 0x13
 2564 007a 01       		.uleb128 0x1
 2565 007b 13       		.uleb128 0x13
 2566 007c 00       		.byte	0
 2567 007d 00       		.byte	0
 2568 007e 0B       		.uleb128 0xb
 2569 007f 21       		.uleb128 0x21
 2570 0080 00       		.byte	0
 2571 0081 49       		.uleb128 0x49
 2572 0082 13       		.uleb128 0x13
 2573 0083 2F       		.uleb128 0x2f
 2574 0084 0B       		.uleb128 0xb
 2575 0085 00       		.byte	0
 2576 0086 00       		.byte	0
 2577 0087 0C       		.uleb128 0xc
 2578 0088 13       		.uleb128 0x13
 2579 0089 01       		.byte	0x1
 2580 008a 0B       		.uleb128 0xb
 2581 008b 0B       		.uleb128 0xb
 2582 008c 3A       		.uleb128 0x3a
 2583 008d 0B       		.uleb128 0xb
 2584 008e 3B       		.uleb128 0x3b
 2585 008f 05       		.uleb128 0x5
 2586 0090 01       		.uleb128 0x1
 2587 0091 13       		.uleb128 0x13
 2588 0092 00       		.byte	0
 2589 0093 00       		.byte	0
 2590 0094 0D       		.uleb128 0xd
 2591 0095 0D       		.uleb128 0xd
 2592 0096 00       		.byte	0
 2593 0097 03       		.uleb128 0x3
 2594 0098 0E       		.uleb128 0xe
 2595 0099 3A       		.uleb128 0x3a
 2596 009a 0B       		.uleb128 0xb
 2597 009b 3B       		.uleb128 0x3b
 2598 009c 05       		.uleb128 0x5
 2599 009d 49       		.uleb128 0x49
 2600 009e 13       		.uleb128 0x13
 2601 009f 38       		.uleb128 0x38
 2602 00a0 0B       		.uleb128 0xb
 2603 00a1 00       		.byte	0
 2604 00a2 00       		.byte	0
 2605 00a3 0E       		.uleb128 0xe
 2606 00a4 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 92


 2607 00a5 01       		.byte	0x1
 2608 00a6 3F       		.uleb128 0x3f
 2609 00a7 19       		.uleb128 0x19
 2610 00a8 03       		.uleb128 0x3
 2611 00a9 0E       		.uleb128 0xe
 2612 00aa 3A       		.uleb128 0x3a
 2613 00ab 0B       		.uleb128 0xb
 2614 00ac 3B       		.uleb128 0x3b
 2615 00ad 05       		.uleb128 0x5
 2616 00ae 27       		.uleb128 0x27
 2617 00af 19       		.uleb128 0x19
 2618 00b0 49       		.uleb128 0x49
 2619 00b1 13       		.uleb128 0x13
 2620 00b2 20       		.uleb128 0x20
 2621 00b3 0B       		.uleb128 0xb
 2622 00b4 01       		.uleb128 0x1
 2623 00b5 13       		.uleb128 0x13
 2624 00b6 00       		.byte	0
 2625 00b7 00       		.byte	0
 2626 00b8 0F       		.uleb128 0xf
 2627 00b9 05       		.uleb128 0x5
 2628 00ba 00       		.byte	0
 2629 00bb 03       		.uleb128 0x3
 2630 00bc 0E       		.uleb128 0xe
 2631 00bd 3A       		.uleb128 0x3a
 2632 00be 0B       		.uleb128 0xb
 2633 00bf 3B       		.uleb128 0x3b
 2634 00c0 05       		.uleb128 0x5
 2635 00c1 49       		.uleb128 0x49
 2636 00c2 13       		.uleb128 0x13
 2637 00c3 00       		.byte	0
 2638 00c4 00       		.byte	0
 2639 00c5 10       		.uleb128 0x10
 2640 00c6 34       		.uleb128 0x34
 2641 00c7 00       		.byte	0
 2642 00c8 03       		.uleb128 0x3
 2643 00c9 0E       		.uleb128 0xe
 2644 00ca 3A       		.uleb128 0x3a
 2645 00cb 0B       		.uleb128 0xb
 2646 00cc 3B       		.uleb128 0x3b
 2647 00cd 05       		.uleb128 0x5
 2648 00ce 49       		.uleb128 0x49
 2649 00cf 13       		.uleb128 0x13
 2650 00d0 00       		.byte	0
 2651 00d1 00       		.byte	0
 2652 00d2 11       		.uleb128 0x11
 2653 00d3 2E       		.uleb128 0x2e
 2654 00d4 01       		.byte	0x1
 2655 00d5 3F       		.uleb128 0x3f
 2656 00d6 19       		.uleb128 0x19
 2657 00d7 03       		.uleb128 0x3
 2658 00d8 0E       		.uleb128 0xe
 2659 00d9 3A       		.uleb128 0x3a
 2660 00da 0B       		.uleb128 0xb
 2661 00db 3B       		.uleb128 0x3b
 2662 00dc 0B       		.uleb128 0xb
 2663 00dd 27       		.uleb128 0x27
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 93


 2664 00de 19       		.uleb128 0x19
 2665 00df 11       		.uleb128 0x11
 2666 00e0 01       		.uleb128 0x1
 2667 00e1 12       		.uleb128 0x12
 2668 00e2 06       		.uleb128 0x6
 2669 00e3 40       		.uleb128 0x40
 2670 00e4 18       		.uleb128 0x18
 2671 00e5 9742     		.uleb128 0x2117
 2672 00e7 19       		.uleb128 0x19
 2673 00e8 01       		.uleb128 0x1
 2674 00e9 13       		.uleb128 0x13
 2675 00ea 00       		.byte	0
 2676 00eb 00       		.byte	0
 2677 00ec 12       		.uleb128 0x12
 2678 00ed 34       		.uleb128 0x34
 2679 00ee 00       		.byte	0
 2680 00ef 03       		.uleb128 0x3
 2681 00f0 0E       		.uleb128 0xe
 2682 00f1 3A       		.uleb128 0x3a
 2683 00f2 0B       		.uleb128 0xb
 2684 00f3 3B       		.uleb128 0x3b
 2685 00f4 0B       		.uleb128 0xb
 2686 00f5 49       		.uleb128 0x49
 2687 00f6 13       		.uleb128 0x13
 2688 00f7 02       		.uleb128 0x2
 2689 00f8 17       		.uleb128 0x17
 2690 00f9 00       		.byte	0
 2691 00fa 00       		.byte	0
 2692 00fb 13       		.uleb128 0x13
 2693 00fc 898201   		.uleb128 0x4109
 2694 00ff 00       		.byte	0
 2695 0100 11       		.uleb128 0x11
 2696 0101 01       		.uleb128 0x1
 2697 0102 31       		.uleb128 0x31
 2698 0103 13       		.uleb128 0x13
 2699 0104 00       		.byte	0
 2700 0105 00       		.byte	0
 2701 0106 14       		.uleb128 0x14
 2702 0107 898201   		.uleb128 0x4109
 2703 010a 01       		.byte	0x1
 2704 010b 11       		.uleb128 0x11
 2705 010c 01       		.uleb128 0x1
 2706 010d 31       		.uleb128 0x31
 2707 010e 13       		.uleb128 0x13
 2708 010f 01       		.uleb128 0x1
 2709 0110 13       		.uleb128 0x13
 2710 0111 00       		.byte	0
 2711 0112 00       		.byte	0
 2712 0113 15       		.uleb128 0x15
 2713 0114 8A8201   		.uleb128 0x410a
 2714 0117 00       		.byte	0
 2715 0118 02       		.uleb128 0x2
 2716 0119 18       		.uleb128 0x18
 2717 011a 9142     		.uleb128 0x2111
 2718 011c 18       		.uleb128 0x18
 2719 011d 00       		.byte	0
 2720 011e 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 94


 2721 011f 16       		.uleb128 0x16
 2722 0120 898201   		.uleb128 0x4109
 2723 0123 01       		.byte	0x1
 2724 0124 11       		.uleb128 0x11
 2725 0125 01       		.uleb128 0x1
 2726 0126 9542     		.uleb128 0x2115
 2727 0128 19       		.uleb128 0x19
 2728 0129 31       		.uleb128 0x31
 2729 012a 13       		.uleb128 0x13
 2730 012b 00       		.byte	0
 2731 012c 00       		.byte	0
 2732 012d 17       		.uleb128 0x17
 2733 012e 2E       		.uleb128 0x2e
 2734 012f 01       		.byte	0x1
 2735 0130 3F       		.uleb128 0x3f
 2736 0131 19       		.uleb128 0x19
 2737 0132 03       		.uleb128 0x3
 2738 0133 0E       		.uleb128 0xe
 2739 0134 3A       		.uleb128 0x3a
 2740 0135 0B       		.uleb128 0xb
 2741 0136 3B       		.uleb128 0x3b
 2742 0137 05       		.uleb128 0x5
 2743 0138 27       		.uleb128 0x27
 2744 0139 19       		.uleb128 0x19
 2745 013a 11       		.uleb128 0x11
 2746 013b 01       		.uleb128 0x1
 2747 013c 12       		.uleb128 0x12
 2748 013d 06       		.uleb128 0x6
 2749 013e 40       		.uleb128 0x40
 2750 013f 18       		.uleb128 0x18
 2751 0140 9742     		.uleb128 0x2117
 2752 0142 19       		.uleb128 0x19
 2753 0143 01       		.uleb128 0x1
 2754 0144 13       		.uleb128 0x13
 2755 0145 00       		.byte	0
 2756 0146 00       		.byte	0
 2757 0147 18       		.uleb128 0x18
 2758 0148 05       		.uleb128 0x5
 2759 0149 00       		.byte	0
 2760 014a 03       		.uleb128 0x3
 2761 014b 0E       		.uleb128 0xe
 2762 014c 3A       		.uleb128 0x3a
 2763 014d 0B       		.uleb128 0xb
 2764 014e 3B       		.uleb128 0x3b
 2765 014f 05       		.uleb128 0x5
 2766 0150 49       		.uleb128 0x49
 2767 0151 13       		.uleb128 0x13
 2768 0152 02       		.uleb128 0x2
 2769 0153 17       		.uleb128 0x17
 2770 0154 00       		.byte	0
 2771 0155 00       		.byte	0
 2772 0156 19       		.uleb128 0x19
 2773 0157 898201   		.uleb128 0x4109
 2774 015a 01       		.byte	0x1
 2775 015b 11       		.uleb128 0x11
 2776 015c 01       		.uleb128 0x1
 2777 015d 31       		.uleb128 0x31
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 95


 2778 015e 13       		.uleb128 0x13
 2779 015f 00       		.byte	0
 2780 0160 00       		.byte	0
 2781 0161 1A       		.uleb128 0x1a
 2782 0162 05       		.uleb128 0x5
 2783 0163 00       		.byte	0
 2784 0164 03       		.uleb128 0x3
 2785 0165 0E       		.uleb128 0xe
 2786 0166 3A       		.uleb128 0x3a
 2787 0167 0B       		.uleb128 0xb
 2788 0168 3B       		.uleb128 0x3b
 2789 0169 0B       		.uleb128 0xb
 2790 016a 49       		.uleb128 0x49
 2791 016b 13       		.uleb128 0x13
 2792 016c 02       		.uleb128 0x2
 2793 016d 17       		.uleb128 0x17
 2794 016e 00       		.byte	0
 2795 016f 00       		.byte	0
 2796 0170 1B       		.uleb128 0x1b
 2797 0171 898201   		.uleb128 0x4109
 2798 0174 00       		.byte	0
 2799 0175 11       		.uleb128 0x11
 2800 0176 01       		.uleb128 0x1
 2801 0177 9542     		.uleb128 0x2115
 2802 0179 19       		.uleb128 0x19
 2803 017a 31       		.uleb128 0x31
 2804 017b 13       		.uleb128 0x13
 2805 017c 00       		.byte	0
 2806 017d 00       		.byte	0
 2807 017e 1C       		.uleb128 0x1c
 2808 017f 2E       		.uleb128 0x2e
 2809 0180 00       		.byte	0
 2810 0181 3F       		.uleb128 0x3f
 2811 0182 19       		.uleb128 0x19
 2812 0183 03       		.uleb128 0x3
 2813 0184 0E       		.uleb128 0xe
 2814 0185 3A       		.uleb128 0x3a
 2815 0186 0B       		.uleb128 0xb
 2816 0187 3B       		.uleb128 0x3b
 2817 0188 05       		.uleb128 0x5
 2818 0189 27       		.uleb128 0x27
 2819 018a 19       		.uleb128 0x19
 2820 018b 11       		.uleb128 0x11
 2821 018c 01       		.uleb128 0x1
 2822 018d 12       		.uleb128 0x12
 2823 018e 06       		.uleb128 0x6
 2824 018f 40       		.uleb128 0x40
 2825 0190 18       		.uleb128 0x18
 2826 0191 9742     		.uleb128 0x2117
 2827 0193 19       		.uleb128 0x19
 2828 0194 00       		.byte	0
 2829 0195 00       		.byte	0
 2830 0196 1D       		.uleb128 0x1d
 2831 0197 34       		.uleb128 0x34
 2832 0198 00       		.byte	0
 2833 0199 03       		.uleb128 0x3
 2834 019a 0E       		.uleb128 0xe
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 96


 2835 019b 3A       		.uleb128 0x3a
 2836 019c 0B       		.uleb128 0xb
 2837 019d 3B       		.uleb128 0x3b
 2838 019e 05       		.uleb128 0x5
 2839 019f 49       		.uleb128 0x49
 2840 01a0 13       		.uleb128 0x13
 2841 01a1 02       		.uleb128 0x2
 2842 01a2 17       		.uleb128 0x17
 2843 01a3 00       		.byte	0
 2844 01a4 00       		.byte	0
 2845 01a5 1E       		.uleb128 0x1e
 2846 01a6 2E       		.uleb128 0x2e
 2847 01a7 01       		.byte	0x1
 2848 01a8 3F       		.uleb128 0x3f
 2849 01a9 19       		.uleb128 0x19
 2850 01aa 03       		.uleb128 0x3
 2851 01ab 0E       		.uleb128 0xe
 2852 01ac 3A       		.uleb128 0x3a
 2853 01ad 0B       		.uleb128 0xb
 2854 01ae 3B       		.uleb128 0x3b
 2855 01af 05       		.uleb128 0x5
 2856 01b0 27       		.uleb128 0x27
 2857 01b1 19       		.uleb128 0x19
 2858 01b2 49       		.uleb128 0x49
 2859 01b3 13       		.uleb128 0x13
 2860 01b4 11       		.uleb128 0x11
 2861 01b5 01       		.uleb128 0x1
 2862 01b6 12       		.uleb128 0x12
 2863 01b7 06       		.uleb128 0x6
 2864 01b8 40       		.uleb128 0x40
 2865 01b9 18       		.uleb128 0x18
 2866 01ba 9742     		.uleb128 0x2117
 2867 01bc 19       		.uleb128 0x19
 2868 01bd 01       		.uleb128 0x1
 2869 01be 13       		.uleb128 0x13
 2870 01bf 00       		.byte	0
 2871 01c0 00       		.byte	0
 2872 01c1 1F       		.uleb128 0x1f
 2873 01c2 2E       		.uleb128 0x2e
 2874 01c3 00       		.byte	0
 2875 01c4 3F       		.uleb128 0x3f
 2876 01c5 19       		.uleb128 0x19
 2877 01c6 03       		.uleb128 0x3
 2878 01c7 0E       		.uleb128 0xe
 2879 01c8 3A       		.uleb128 0x3a
 2880 01c9 0B       		.uleb128 0xb
 2881 01ca 3B       		.uleb128 0x3b
 2882 01cb 05       		.uleb128 0x5
 2883 01cc 27       		.uleb128 0x27
 2884 01cd 19       		.uleb128 0x19
 2885 01ce 49       		.uleb128 0x49
 2886 01cf 13       		.uleb128 0x13
 2887 01d0 11       		.uleb128 0x11
 2888 01d1 01       		.uleb128 0x1
 2889 01d2 12       		.uleb128 0x12
 2890 01d3 06       		.uleb128 0x6
 2891 01d4 40       		.uleb128 0x40
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 97


 2892 01d5 18       		.uleb128 0x18
 2893 01d6 9742     		.uleb128 0x2117
 2894 01d8 19       		.uleb128 0x19
 2895 01d9 00       		.byte	0
 2896 01da 00       		.byte	0
 2897 01db 20       		.uleb128 0x20
 2898 01dc 34       		.uleb128 0x34
 2899 01dd 00       		.byte	0
 2900 01de 03       		.uleb128 0x3
 2901 01df 08       		.uleb128 0x8
 2902 01e0 3A       		.uleb128 0x3a
 2903 01e1 0B       		.uleb128 0xb
 2904 01e2 3B       		.uleb128 0x3b
 2905 01e3 05       		.uleb128 0x5
 2906 01e4 49       		.uleb128 0x49
 2907 01e5 13       		.uleb128 0x13
 2908 01e6 02       		.uleb128 0x2
 2909 01e7 17       		.uleb128 0x17
 2910 01e8 00       		.byte	0
 2911 01e9 00       		.byte	0
 2912 01ea 21       		.uleb128 0x21
 2913 01eb 2E       		.uleb128 0x2e
 2914 01ec 01       		.byte	0x1
 2915 01ed 31       		.uleb128 0x31
 2916 01ee 13       		.uleb128 0x13
 2917 01ef 11       		.uleb128 0x11
 2918 01f0 01       		.uleb128 0x1
 2919 01f1 12       		.uleb128 0x12
 2920 01f2 06       		.uleb128 0x6
 2921 01f3 40       		.uleb128 0x40
 2922 01f4 18       		.uleb128 0x18
 2923 01f5 9742     		.uleb128 0x2117
 2924 01f7 19       		.uleb128 0x19
 2925 01f8 01       		.uleb128 0x1
 2926 01f9 13       		.uleb128 0x13
 2927 01fa 00       		.byte	0
 2928 01fb 00       		.byte	0
 2929 01fc 22       		.uleb128 0x22
 2930 01fd 05       		.uleb128 0x5
 2931 01fe 00       		.byte	0
 2932 01ff 31       		.uleb128 0x31
 2933 0200 13       		.uleb128 0x13
 2934 0201 02       		.uleb128 0x2
 2935 0202 17       		.uleb128 0x17
 2936 0203 00       		.byte	0
 2937 0204 00       		.byte	0
 2938 0205 23       		.uleb128 0x23
 2939 0206 34       		.uleb128 0x34
 2940 0207 00       		.byte	0
 2941 0208 31       		.uleb128 0x31
 2942 0209 13       		.uleb128 0x13
 2943 020a 02       		.uleb128 0x2
 2944 020b 17       		.uleb128 0x17
 2945 020c 00       		.byte	0
 2946 020d 00       		.byte	0
 2947 020e 24       		.uleb128 0x24
 2948 020f 0B       		.uleb128 0xb
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 98


 2949 0210 01       		.byte	0x1
 2950 0211 11       		.uleb128 0x11
 2951 0212 01       		.uleb128 0x1
 2952 0213 12       		.uleb128 0x12
 2953 0214 06       		.uleb128 0x6
 2954 0215 00       		.byte	0
 2955 0216 00       		.byte	0
 2956 0217 25       		.uleb128 0x25
 2957 0218 05       		.uleb128 0x5
 2958 0219 00       		.byte	0
 2959 021a 03       		.uleb128 0x3
 2960 021b 0E       		.uleb128 0xe
 2961 021c 3A       		.uleb128 0x3a
 2962 021d 0B       		.uleb128 0xb
 2963 021e 3B       		.uleb128 0x3b
 2964 021f 05       		.uleb128 0x5
 2965 0220 49       		.uleb128 0x49
 2966 0221 13       		.uleb128 0x13
 2967 0222 02       		.uleb128 0x2
 2968 0223 18       		.uleb128 0x18
 2969 0224 00       		.byte	0
 2970 0225 00       		.byte	0
 2971 0226 26       		.uleb128 0x26
 2972 0227 0F       		.uleb128 0xf
 2973 0228 00       		.byte	0
 2974 0229 0B       		.uleb128 0xb
 2975 022a 0B       		.uleb128 0xb
 2976 022b 49       		.uleb128 0x49
 2977 022c 13       		.uleb128 0x13
 2978 022d 00       		.byte	0
 2979 022e 00       		.byte	0
 2980 022f 27       		.uleb128 0x27
 2981 0230 26       		.uleb128 0x26
 2982 0231 00       		.byte	0
 2983 0232 49       		.uleb128 0x49
 2984 0233 13       		.uleb128 0x13
 2985 0234 00       		.byte	0
 2986 0235 00       		.byte	0
 2987 0236 28       		.uleb128 0x28
 2988 0237 0B       		.uleb128 0xb
 2989 0238 01       		.byte	0x1
 2990 0239 11       		.uleb128 0x11
 2991 023a 01       		.uleb128 0x1
 2992 023b 12       		.uleb128 0x12
 2993 023c 06       		.uleb128 0x6
 2994 023d 01       		.uleb128 0x1
 2995 023e 13       		.uleb128 0x13
 2996 023f 00       		.byte	0
 2997 0240 00       		.byte	0
 2998 0241 29       		.uleb128 0x29
 2999 0242 34       		.uleb128 0x34
 3000 0243 00       		.byte	0
 3001 0244 03       		.uleb128 0x3
 3002 0245 0E       		.uleb128 0xe
 3003 0246 3A       		.uleb128 0x3a
 3004 0247 0B       		.uleb128 0xb
 3005 0248 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 99


 3006 0249 0B       		.uleb128 0xb
 3007 024a 49       		.uleb128 0x49
 3008 024b 13       		.uleb128 0x13
 3009 024c 3F       		.uleb128 0x3f
 3010 024d 19       		.uleb128 0x19
 3011 024e 02       		.uleb128 0x2
 3012 024f 18       		.uleb128 0x18
 3013 0250 00       		.byte	0
 3014 0251 00       		.byte	0
 3015 0252 2A       		.uleb128 0x2a
 3016 0253 34       		.uleb128 0x34
 3017 0254 00       		.byte	0
 3018 0255 03       		.uleb128 0x3
 3019 0256 0E       		.uleb128 0xe
 3020 0257 3A       		.uleb128 0x3a
 3021 0258 0B       		.uleb128 0xb
 3022 0259 3B       		.uleb128 0x3b
 3023 025a 05       		.uleb128 0x5
 3024 025b 49       		.uleb128 0x49
 3025 025c 13       		.uleb128 0x13
 3026 025d 3F       		.uleb128 0x3f
 3027 025e 19       		.uleb128 0x19
 3028 025f 3C       		.uleb128 0x3c
 3029 0260 19       		.uleb128 0x19
 3030 0261 00       		.byte	0
 3031 0262 00       		.byte	0
 3032 0263 2B       		.uleb128 0x2b
 3033 0264 34       		.uleb128 0x34
 3034 0265 00       		.byte	0
 3035 0266 03       		.uleb128 0x3
 3036 0267 0E       		.uleb128 0xe
 3037 0268 3A       		.uleb128 0x3a
 3038 0269 0B       		.uleb128 0xb
 3039 026a 3B       		.uleb128 0x3b
 3040 026b 0B       		.uleb128 0xb
 3041 026c 49       		.uleb128 0x49
 3042 026d 13       		.uleb128 0x13
 3043 026e 3F       		.uleb128 0x3f
 3044 026f 19       		.uleb128 0x19
 3045 0270 3C       		.uleb128 0x3c
 3046 0271 19       		.uleb128 0x19
 3047 0272 00       		.byte	0
 3048 0273 00       		.byte	0
 3049 0274 2C       		.uleb128 0x2c
 3050 0275 2E       		.uleb128 0x2e
 3051 0276 00       		.byte	0
 3052 0277 3F       		.uleb128 0x3f
 3053 0278 19       		.uleb128 0x19
 3054 0279 3C       		.uleb128 0x3c
 3055 027a 19       		.uleb128 0x19
 3056 027b 6E       		.uleb128 0x6e
 3057 027c 0E       		.uleb128 0xe
 3058 027d 03       		.uleb128 0x3
 3059 027e 0E       		.uleb128 0xe
 3060 027f 3A       		.uleb128 0x3a
 3061 0280 0B       		.uleb128 0xb
 3062 0281 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 100


 3063 0282 0B       		.uleb128 0xb
 3064 0283 00       		.byte	0
 3065 0284 00       		.byte	0
 3066 0285 00       		.byte	0
 3067              		.section	.debug_loc,"",%progbits
 3068              	.Ldebug_loc0:
 3069              	.LLST0:
 3070 0000 30000000 		.4byte	.LVL1
 3071 0004 00010000 		.4byte	.LVL20
 3072 0008 0100     		.2byte	0x1
 3073 000a 57       		.byte	0x57
 3074 000b 00000000 		.4byte	0
 3075 000f 00000000 		.4byte	0
 3076              	.LLST1:
 3077 0013 00000000 		.4byte	.LVL22
 3078 0017 66000000 		.4byte	.LVL23
 3079 001b 0100     		.2byte	0x1
 3080 001d 50       		.byte	0x50
 3081 001e 66000000 		.4byte	.LVL23
 3082 0022 A4000000 		.4byte	.LFE2
 3083 0026 0400     		.2byte	0x4
 3084 0028 F3       		.byte	0xf3
 3085 0029 01       		.uleb128 0x1
 3086 002a 50       		.byte	0x50
 3087 002b 9F       		.byte	0x9f
 3088 002c 00000000 		.4byte	0
 3089 0030 00000000 		.4byte	0
 3090              	.LLST2:
 3091 0034 00000000 		.4byte	.LVL22
 3092 0038 69000000 		.4byte	.LVL24-1
 3093 003c 0100     		.2byte	0x1
 3094 003e 51       		.byte	0x51
 3095 003f 69000000 		.4byte	.LVL24-1
 3096 0043 A4000000 		.4byte	.LFE2
 3097 0047 0400     		.2byte	0x4
 3098 0049 F3       		.byte	0xf3
 3099 004a 01       		.uleb128 0x1
 3100 004b 51       		.byte	0x51
 3101 004c 9F       		.byte	0x9f
 3102 004d 00000000 		.4byte	0
 3103 0051 00000000 		.4byte	0
 3104              	.LLST3:
 3105 0055 00000000 		.4byte	.LVL25
 3106 0059 0F000000 		.4byte	.LVL26-1
 3107 005d 0100     		.2byte	0x1
 3108 005f 50       		.byte	0x50
 3109 0060 0F000000 		.4byte	.LVL26-1
 3110 0064 24000000 		.4byte	.LFE0
 3111 0068 0400     		.2byte	0x4
 3112 006a F3       		.byte	0xf3
 3113 006b 01       		.uleb128 0x1
 3114 006c 50       		.byte	0x50
 3115 006d 9F       		.byte	0x9f
 3116 006e 00000000 		.4byte	0
 3117 0072 00000000 		.4byte	0
 3118              	.LLST4:
 3119 0076 00000000 		.4byte	.LVL25
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 101


 3120 007a 0F000000 		.4byte	.LVL26-1
 3121 007e 0100     		.2byte	0x1
 3122 0080 51       		.byte	0x51
 3123 0081 0F000000 		.4byte	.LVL26-1
 3124 0085 24000000 		.4byte	.LFE0
 3125 0089 0400     		.2byte	0x4
 3126 008b F3       		.byte	0xf3
 3127 008c 01       		.uleb128 0x1
 3128 008d 51       		.byte	0x51
 3129 008e 9F       		.byte	0x9f
 3130 008f 00000000 		.4byte	0
 3131 0093 00000000 		.4byte	0
 3132              	.LLST5:
 3133 0097 06000000 		.4byte	.LVL28
 3134 009b 43000000 		.4byte	.LVL29-1
 3135 009f 0100     		.2byte	0x1
 3136 00a1 50       		.byte	0x50
 3137 00a2 00000000 		.4byte	0
 3138 00a6 00000000 		.4byte	0
 3139              	.LLST6:
 3140 00aa 06000000 		.4byte	.LVL31
 3141 00ae 10000000 		.4byte	.LVL32
 3142 00b2 0100     		.2byte	0x1
 3143 00b4 50       		.byte	0x50
 3144 00b5 00000000 		.4byte	0
 3145 00b9 00000000 		.4byte	0
 3146              	.LLST7:
 3147 00bd 00000000 		.4byte	.LVL33
 3148 00c1 10000000 		.4byte	.LVL34
 3149 00c5 0200     		.2byte	0x2
 3150 00c7 30       		.byte	0x30
 3151 00c8 9F       		.byte	0x9f
 3152 00c9 10000000 		.4byte	.LVL34
 3153 00cd 18000000 		.4byte	.LFE7
 3154 00d1 0100     		.2byte	0x1
 3155 00d3 50       		.byte	0x50
 3156 00d4 00000000 		.4byte	0
 3157 00d8 00000000 		.4byte	0
 3158              	.LLST8:
 3159 00dc 00000000 		.4byte	.LVL36
 3160 00e0 04000000 		.4byte	.LVL37
 3161 00e4 0100     		.2byte	0x1
 3162 00e6 50       		.byte	0x50
 3163 00e7 04000000 		.4byte	.LVL37
 3164 00eb 0C000000 		.4byte	.LFE8
 3165 00ef 0400     		.2byte	0x4
 3166 00f1 F3       		.byte	0xf3
 3167 00f2 01       		.uleb128 0x1
 3168 00f3 50       		.byte	0x50
 3169 00f4 9F       		.byte	0x9f
 3170 00f5 00000000 		.4byte	0
 3171 00f9 00000000 		.4byte	0
 3172              	.LLST9:
 3173 00fd 00000000 		.4byte	.LVL38
 3174 0101 08000000 		.4byte	.LVL39
 3175 0105 0100     		.2byte	0x1
 3176 0107 50       		.byte	0x50
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 102


 3177 0108 08000000 		.4byte	.LVL39
 3178 010c 10000000 		.4byte	.LFE9
 3179 0110 0400     		.2byte	0x4
 3180 0112 F3       		.byte	0xf3
 3181 0113 01       		.uleb128 0x1
 3182 0114 50       		.byte	0x50
 3183 0115 9F       		.byte	0x9f
 3184 0116 00000000 		.4byte	0
 3185 011a 00000000 		.4byte	0
 3186              	.LLST10:
 3187 011e 00000000 		.4byte	.LVL40
 3188 0122 0C000000 		.4byte	.LVL42
 3189 0126 0100     		.2byte	0x1
 3190 0128 50       		.byte	0x50
 3191 0129 0C000000 		.4byte	.LVL42
 3192 012d 20000000 		.4byte	.LVL47
 3193 0131 0400     		.2byte	0x4
 3194 0133 F3       		.byte	0xf3
 3195 0134 01       		.uleb128 0x1
 3196 0135 50       		.byte	0x50
 3197 0136 9F       		.byte	0x9f
 3198 0137 20000000 		.4byte	.LVL47
 3199 013b 22000000 		.4byte	.LVL48
 3200 013f 0100     		.2byte	0x1
 3201 0141 50       		.byte	0x50
 3202 0142 22000000 		.4byte	.LVL48
 3203 0146 28000000 		.4byte	.LFE10
 3204 014a 0400     		.2byte	0x4
 3205 014c F3       		.byte	0xf3
 3206 014d 01       		.uleb128 0x1
 3207 014e 50       		.byte	0x50
 3208 014f 9F       		.byte	0x9f
 3209 0150 00000000 		.4byte	0
 3210 0154 00000000 		.4byte	0
 3211              	.LLST11:
 3212 0158 00000000 		.4byte	.LVL40
 3213 015c 22000000 		.4byte	.LVL48
 3214 0160 0200     		.2byte	0x2
 3215 0162 30       		.byte	0x30
 3216 0163 9F       		.byte	0x9f
 3217 0164 22000000 		.4byte	.LVL48
 3218 0168 28000000 		.4byte	.LFE10
 3219 016c 0100     		.2byte	0x1
 3220 016e 50       		.byte	0x50
 3221 016f 00000000 		.4byte	0
 3222 0173 00000000 		.4byte	0
 3223              	.LLST12:
 3224 0177 06000000 		.4byte	.LVL41
 3225 017b 0C000000 		.4byte	.LVL42
 3226 017f 0100     		.2byte	0x1
 3227 0181 50       		.byte	0x50
 3228 0182 0C000000 		.4byte	.LVL42
 3229 0186 1E000000 		.4byte	.LVL46
 3230 018a 0400     		.2byte	0x4
 3231 018c F3       		.byte	0xf3
 3232 018d 01       		.uleb128 0x1
 3233 018e 50       		.byte	0x50
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 103


 3234 018f 9F       		.byte	0x9f
 3235 0190 00000000 		.4byte	0
 3236 0194 00000000 		.4byte	0
 3237              	.LLST13:
 3238 0198 10000000 		.4byte	.LVL43
 3239 019c 16000000 		.4byte	.LVL44
 3240 01a0 0800     		.2byte	0x8
 3241 01a2 70       		.byte	0x70
 3242 01a3 00       		.sleb128 0
 3243 01a4 3F       		.byte	0x3f
 3244 01a5 1A       		.byte	0x1a
 3245 01a6 08       		.byte	0x8
 3246 01a7 FF       		.byte	0xff
 3247 01a8 1A       		.byte	0x1a
 3248 01a9 9F       		.byte	0x9f
 3249 01aa 16000000 		.4byte	.LVL44
 3250 01ae 1A000000 		.4byte	.LVL45
 3251 01b2 0B00     		.2byte	0xb
 3252 01b4 73       		.byte	0x73
 3253 01b5 00       		.sleb128 0
 3254 01b6 08       		.byte	0x8
 3255 01b7 FF       		.byte	0xff
 3256 01b8 1A       		.byte	0x1a
 3257 01b9 70       		.byte	0x70
 3258 01ba 00       		.sleb128 0
 3259 01bb 38       		.byte	0x38
 3260 01bc 24       		.byte	0x24
 3261 01bd 21       		.byte	0x21
 3262 01be 9F       		.byte	0x9f
 3263 01bf 00000000 		.4byte	0
 3264 01c3 00000000 		.4byte	0
 3265              	.LLST14:
 3266 01c7 00000000 		.4byte	.LVL49
 3267 01cb 4A000000 		.4byte	.LVL53
 3268 01cf 0100     		.2byte	0x1
 3269 01d1 50       		.byte	0x50
 3270 01d2 4A000000 		.4byte	.LVL53
 3271 01d6 56000000 		.4byte	.LVL54
 3272 01da 0400     		.2byte	0x4
 3273 01dc F3       		.byte	0xf3
 3274 01dd 01       		.uleb128 0x1
 3275 01de 50       		.byte	0x50
 3276 01df 9F       		.byte	0x9f
 3277 01e0 56000000 		.4byte	.LVL54
 3278 01e4 7C000000 		.4byte	.LFE11
 3279 01e8 0100     		.2byte	0x1
 3280 01ea 50       		.byte	0x50
 3281 01eb 00000000 		.4byte	0
 3282 01ef 00000000 		.4byte	0
 3283              	.LLST15:
 3284 01f3 00000000 		.4byte	.LVL49
 3285 01f7 28000000 		.4byte	.LVL50
 3286 01fb 0100     		.2byte	0x1
 3287 01fd 52       		.byte	0x52
 3288 01fe 28000000 		.4byte	.LVL50
 3289 0202 32000000 		.4byte	.LVL51
 3290 0206 0400     		.2byte	0x4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 104


 3291 0208 F3       		.byte	0xf3
 3292 0209 01       		.uleb128 0x1
 3293 020a 52       		.byte	0x52
 3294 020b 9F       		.byte	0x9f
 3295 020c 32000000 		.4byte	.LVL51
 3296 0210 46000000 		.4byte	.LVL52
 3297 0214 0100     		.2byte	0x1
 3298 0216 52       		.byte	0x52
 3299 0217 56000000 		.4byte	.LVL54
 3300 021b 7C000000 		.4byte	.LFE11
 3301 021f 0100     		.2byte	0x1
 3302 0221 52       		.byte	0x52
 3303 0222 00000000 		.4byte	0
 3304 0226 00000000 		.4byte	0
 3305              	.LLST16:
 3306 022a 5C000000 		.4byte	.LVL55
 3307 022e 68000000 		.4byte	.LVL56
 3308 0232 0600     		.2byte	0x6
 3309 0234 76       		.byte	0x76
 3310 0235 00       		.sleb128 0
 3311 0236 71       		.byte	0x71
 3312 0237 00       		.sleb128 0
 3313 0238 1C       		.byte	0x1c
 3314 0239 9F       		.byte	0x9f
 3315 023a 6A000000 		.4byte	.LVL57
 3316 023e 6C000000 		.4byte	.LVL58
 3317 0242 0600     		.2byte	0x6
 3318 0244 76       		.byte	0x76
 3319 0245 00       		.sleb128 0
 3320 0246 71       		.byte	0x71
 3321 0247 00       		.sleb128 0
 3322 0248 1C       		.byte	0x1c
 3323 0249 9F       		.byte	0x9f
 3324 024a 00000000 		.4byte	0
 3325 024e 00000000 		.4byte	0
 3326              	.LLST17:
 3327 0252 00000000 		.4byte	.LVL59
 3328 0256 1A000000 		.4byte	.LVL60
 3329 025a 0100     		.2byte	0x1
 3330 025c 50       		.byte	0x50
 3331 025d 1A000000 		.4byte	.LVL60
 3332 0261 28000000 		.4byte	.LFE13
 3333 0265 0400     		.2byte	0x4
 3334 0267 F3       		.byte	0xf3
 3335 0268 01       		.uleb128 0x1
 3336 0269 50       		.byte	0x50
 3337 026a 9F       		.byte	0x9f
 3338 026b 00000000 		.4byte	0
 3339 026f 00000000 		.4byte	0
 3340              	.LLST18:
 3341 0273 00000000 		.4byte	.LVL61
 3342 0277 11000000 		.4byte	.LVL62-1
 3343 027b 0100     		.2byte	0x1
 3344 027d 50       		.byte	0x50
 3345 027e 11000000 		.4byte	.LVL62-1
 3346 0282 3E000000 		.4byte	.LVL68
 3347 0286 0400     		.2byte	0x4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 105


 3348 0288 F3       		.byte	0xf3
 3349 0289 01       		.uleb128 0x1
 3350 028a 50       		.byte	0x50
 3351 028b 9F       		.byte	0x9f
 3352 028c 3E000000 		.4byte	.LVL68
 3353 0290 44000000 		.4byte	.LVL69
 3354 0294 0100     		.2byte	0x1
 3355 0296 50       		.byte	0x50
 3356 0297 44000000 		.4byte	.LVL69
 3357 029b 4C000000 		.4byte	.LFE12
 3358 029f 0400     		.2byte	0x4
 3359 02a1 F3       		.byte	0xf3
 3360 02a2 01       		.uleb128 0x1
 3361 02a3 50       		.byte	0x50
 3362 02a4 9F       		.byte	0x9f
 3363 02a5 00000000 		.4byte	0
 3364 02a9 00000000 		.4byte	0
 3365              	.LLST19:
 3366 02ad 00000000 		.4byte	.LVL61
 3367 02b1 11000000 		.4byte	.LVL62-1
 3368 02b5 0100     		.2byte	0x1
 3369 02b7 51       		.byte	0x51
 3370 02b8 11000000 		.4byte	.LVL62-1
 3371 02bc 3E000000 		.4byte	.LVL68
 3372 02c0 0400     		.2byte	0x4
 3373 02c2 F3       		.byte	0xf3
 3374 02c3 01       		.uleb128 0x1
 3375 02c4 51       		.byte	0x51
 3376 02c5 9F       		.byte	0x9f
 3377 02c6 3E000000 		.4byte	.LVL68
 3378 02ca 44000000 		.4byte	.LVL69
 3379 02ce 0100     		.2byte	0x1
 3380 02d0 51       		.byte	0x51
 3381 02d1 44000000 		.4byte	.LVL69
 3382 02d5 4C000000 		.4byte	.LFE12
 3383 02d9 0400     		.2byte	0x4
 3384 02db F3       		.byte	0xf3
 3385 02dc 01       		.uleb128 0x1
 3386 02dd 51       		.byte	0x51
 3387 02de 9F       		.byte	0x9f
 3388 02df 00000000 		.4byte	0
 3389 02e3 00000000 		.4byte	0
 3390              	.LLST20:
 3391 02e7 00000000 		.4byte	.LVL61
 3392 02eb 11000000 		.4byte	.LVL62-1
 3393 02ef 0100     		.2byte	0x1
 3394 02f1 52       		.byte	0x52
 3395 02f2 11000000 		.4byte	.LVL62-1
 3396 02f6 1E000000 		.4byte	.LVL64
 3397 02fa 0400     		.2byte	0x4
 3398 02fc F3       		.byte	0xf3
 3399 02fd 01       		.uleb128 0x1
 3400 02fe 52       		.byte	0x52
 3401 02ff 9F       		.byte	0x9f
 3402 0300 1E000000 		.4byte	.LVL64
 3403 0304 3E000000 		.4byte	.LVL68
 3404 0308 0100     		.2byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 106


 3405 030a 54       		.byte	0x54
 3406 030b 3E000000 		.4byte	.LVL68
 3407 030f 44000000 		.4byte	.LVL69
 3408 0313 0100     		.2byte	0x1
 3409 0315 52       		.byte	0x52
 3410 0316 44000000 		.4byte	.LVL69
 3411 031a 48000000 		.4byte	.LVL70
 3412 031e 0100     		.2byte	0x1
 3413 0320 54       		.byte	0x54
 3414 0321 00000000 		.4byte	0
 3415 0325 00000000 		.4byte	0
 3416              	.LLST21:
 3417 0329 1E000000 		.4byte	.LVL64
 3418 032d 26000000 		.4byte	.LVL65
 3419 0331 0200     		.2byte	0x2
 3420 0333 30       		.byte	0x30
 3421 0334 9F       		.byte	0x9f
 3422 0335 26000000 		.4byte	.LVL65
 3423 0339 3B000000 		.4byte	.LVL67-1
 3424 033d 0700     		.2byte	0x7
 3425 033f 72       		.byte	0x72
 3426 0340 00       		.sleb128 0
 3427 0341 F3       		.byte	0xf3
 3428 0342 01       		.uleb128 0x1
 3429 0343 51       		.byte	0x51
 3430 0344 1C       		.byte	0x1c
 3431 0345 9F       		.byte	0x9f
 3432 0346 00000000 		.4byte	0
 3433 034a 00000000 		.4byte	0
 3434              	.LLST22:
 3435 034e 00000000 		.4byte	.LVL71
 3436 0352 0A000000 		.4byte	.LVL72
 3437 0356 0100     		.2byte	0x1
 3438 0358 50       		.byte	0x50
 3439 0359 0A000000 		.4byte	.LVL72
 3440 035d 14000000 		.4byte	.LFE14
 3441 0361 0400     		.2byte	0x4
 3442 0363 F3       		.byte	0xf3
 3443 0364 01       		.uleb128 0x1
 3444 0365 50       		.byte	0x50
 3445 0366 9F       		.byte	0x9f
 3446 0367 00000000 		.4byte	0
 3447 036b 00000000 		.4byte	0
 3448              	.LLST23:
 3449 036f 00000000 		.4byte	.LVL74
 3450 0373 0A000000 		.4byte	.LVL75
 3451 0377 0100     		.2byte	0x1
 3452 0379 50       		.byte	0x50
 3453 037a 0A000000 		.4byte	.LVL75
 3454 037e 1C000000 		.4byte	.LFE16
 3455 0382 0400     		.2byte	0x4
 3456 0384 F3       		.byte	0xf3
 3457 0385 01       		.uleb128 0x1
 3458 0386 50       		.byte	0x50
 3459 0387 9F       		.byte	0x9f
 3460 0388 00000000 		.4byte	0
 3461 038c 00000000 		.4byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 107


 3462              	.LLST24:
 3463 0390 00000000 		.4byte	.LVL74
 3464 0394 14000000 		.4byte	.LVL76
 3465 0398 0200     		.2byte	0x2
 3466 039a 30       		.byte	0x30
 3467 039b 9F       		.byte	0x9f
 3468 039c 14000000 		.4byte	.LVL76
 3469 03a0 1C000000 		.4byte	.LFE16
 3470 03a4 0100     		.2byte	0x1
 3471 03a6 50       		.byte	0x50
 3472 03a7 00000000 		.4byte	0
 3473 03ab 00000000 		.4byte	0
 3474              	.LLST25:
 3475 03af 00000000 		.4byte	.LVL79
 3476 03b3 04000000 		.4byte	.LVL80
 3477 03b7 0200     		.2byte	0x2
 3478 03b9 30       		.byte	0x30
 3479 03ba 9F       		.byte	0x9f
 3480 03bb 04000000 		.4byte	.LVL80
 3481 03bf 08000000 		.4byte	.LVL81
 3482 03c3 0900     		.2byte	0x9
 3483 03c5 70       		.byte	0x70
 3484 03c6 00       		.sleb128 0
 3485 03c7 32       		.byte	0x32
 3486 03c8 1A       		.byte	0x1a
 3487 03c9 48       		.byte	0x48
 3488 03ca 24       		.byte	0x24
 3489 03cb 30       		.byte	0x30
 3490 03cc 2E       		.byte	0x2e
 3491 03cd 9F       		.byte	0x9f
 3492 03ce 00000000 		.4byte	0
 3493 03d2 00000000 		.4byte	0
 3494              		.section	.debug_aranges,"",%progbits
 3495 0000 C4000000 		.4byte	0xc4
 3496 0004 0200     		.2byte	0x2
 3497 0006 00000000 		.4byte	.Ldebug_info0
 3498 000a 04       		.byte	0x4
 3499 000b 00       		.byte	0
 3500 000c 0000     		.2byte	0
 3501 000e 0000     		.2byte	0
 3502 0010 00000000 		.4byte	.LFB1
 3503 0014 3C010000 		.4byte	.LFE1-.LFB1
 3504 0018 00000000 		.4byte	.LFB2
 3505 001c A4000000 		.4byte	.LFE2-.LFB2
 3506 0020 00000000 		.4byte	.LFB0
 3507 0024 24000000 		.4byte	.LFE0-.LFB0
 3508 0028 00000000 		.4byte	.LFB3
 3509 002c 4C000000 		.4byte	.LFE3-.LFB3
 3510 0030 00000000 		.4byte	.LFB4
 3511 0034 B4000000 		.4byte	.LFE4-.LFB4
 3512 0038 00000000 		.4byte	.LFB5
 3513 003c 18000000 		.4byte	.LFE5-.LFB5
 3514 0040 00000000 		.4byte	.LFB6
 3515 0044 0C000000 		.4byte	.LFE6-.LFB6
 3516 0048 00000000 		.4byte	.LFB7
 3517 004c 18000000 		.4byte	.LFE7-.LFB7
 3518 0050 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 108


 3519 0054 0C000000 		.4byte	.LFE8-.LFB8
 3520 0058 00000000 		.4byte	.LFB9
 3521 005c 10000000 		.4byte	.LFE9-.LFB9
 3522 0060 00000000 		.4byte	.LFB10
 3523 0064 28000000 		.4byte	.LFE10-.LFB10
 3524 0068 00000000 		.4byte	.LFB11
 3525 006c 7C000000 		.4byte	.LFE11-.LFB11
 3526 0070 00000000 		.4byte	.LFB13
 3527 0074 28000000 		.4byte	.LFE13-.LFB13
 3528 0078 00000000 		.4byte	.LFB12
 3529 007c 4C000000 		.4byte	.LFE12-.LFB12
 3530 0080 00000000 		.4byte	.LFB14
 3531 0084 14000000 		.4byte	.LFE14-.LFB14
 3532 0088 00000000 		.4byte	.LFB15
 3533 008c 0C000000 		.4byte	.LFE15-.LFB15
 3534 0090 00000000 		.4byte	.LFB16
 3535 0094 1C000000 		.4byte	.LFE16-.LFB16
 3536 0098 00000000 		.4byte	.LFB17
 3537 009c 18000000 		.4byte	.LFE17-.LFB17
 3538 00a0 00000000 		.4byte	.LFB18
 3539 00a4 10000000 		.4byte	.LFE18-.LFB18
 3540 00a8 00000000 		.4byte	.LFB19
 3541 00ac 10000000 		.4byte	.LFE19-.LFB19
 3542 00b0 00000000 		.4byte	.LFB20
 3543 00b4 10000000 		.4byte	.LFE20-.LFB20
 3544 00b8 00000000 		.4byte	.LFB21
 3545 00bc 10000000 		.4byte	.LFE21-.LFB21
 3546 00c0 00000000 		.4byte	0
 3547 00c4 00000000 		.4byte	0
 3548              		.section	.debug_ranges,"",%progbits
 3549              	.Ldebug_ranges0:
 3550 0000 00000000 		.4byte	.LFB1
 3551 0004 3C010000 		.4byte	.LFE1
 3552 0008 00000000 		.4byte	.LFB2
 3553 000c A4000000 		.4byte	.LFE2
 3554 0010 00000000 		.4byte	.LFB0
 3555 0014 24000000 		.4byte	.LFE0
 3556 0018 00000000 		.4byte	.LFB3
 3557 001c 4C000000 		.4byte	.LFE3
 3558 0020 00000000 		.4byte	.LFB4
 3559 0024 B4000000 		.4byte	.LFE4
 3560 0028 00000000 		.4byte	.LFB5
 3561 002c 18000000 		.4byte	.LFE5
 3562 0030 00000000 		.4byte	.LFB6
 3563 0034 0C000000 		.4byte	.LFE6
 3564 0038 00000000 		.4byte	.LFB7
 3565 003c 18000000 		.4byte	.LFE7
 3566 0040 00000000 		.4byte	.LFB8
 3567 0044 0C000000 		.4byte	.LFE8
 3568 0048 00000000 		.4byte	.LFB9
 3569 004c 10000000 		.4byte	.LFE9
 3570 0050 00000000 		.4byte	.LFB10
 3571 0054 28000000 		.4byte	.LFE10
 3572 0058 00000000 		.4byte	.LFB11
 3573 005c 7C000000 		.4byte	.LFE11
 3574 0060 00000000 		.4byte	.LFB13
 3575 0064 28000000 		.4byte	.LFE13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 109


 3576 0068 00000000 		.4byte	.LFB12
 3577 006c 4C000000 		.4byte	.LFE12
 3578 0070 00000000 		.4byte	.LFB14
 3579 0074 14000000 		.4byte	.LFE14
 3580 0078 00000000 		.4byte	.LFB15
 3581 007c 0C000000 		.4byte	.LFE15
 3582 0080 00000000 		.4byte	.LFB16
 3583 0084 1C000000 		.4byte	.LFE16
 3584 0088 00000000 		.4byte	.LFB17
 3585 008c 18000000 		.4byte	.LFE17
 3586 0090 00000000 		.4byte	.LFB18
 3587 0094 10000000 		.4byte	.LFE18
 3588 0098 00000000 		.4byte	.LFB19
 3589 009c 10000000 		.4byte	.LFE19
 3590 00a0 00000000 		.4byte	.LFB20
 3591 00a4 10000000 		.4byte	.LFE20
 3592 00a8 00000000 		.4byte	.LFB21
 3593 00ac 10000000 		.4byte	.LFE21
 3594 00b0 00000000 		.4byte	0
 3595 00b4 00000000 		.4byte	0
 3596              		.section	.debug_line,"",%progbits
 3597              	.Ldebug_line0:
 3598 0000 03030000 		.section	.debug_str,"MS",%progbits,1
 3598      02008500 
 3598      00000201 
 3598      FB0E0D00 
 3598      01010101 
 3599              	.LASF22:
 3600 0000 6570546F 		.ascii	"epToggle\000"
 3600      67676C65 
 3600      00
 3601              	.LASF58:
 3602 0009 696E7465 		.ascii	"interfaceNumber\000"
 3602      72666163 
 3602      654E756D 
 3602      62657200 
 3603              	.LASF101:
 3604 0019 636E7472 		.ascii	"cntr\000"
 3604      00
 3605              	.LASF85:
 3606 001e 55534255 		.ascii	"USBUART_1_interfaceNumber\000"
 3606      4152545F 
 3606      315F696E 
 3606      74657266 
 3606      6163654E 
 3607              	.LASF52:
 3608 0038 55534255 		.ascii	"USBUART_1_Stop\000"
 3608      4152545F 
 3608      315F5374 
 3608      6F7000
 3609              	.LASF92:
 3610 0047 43794578 		.ascii	"CyExitCriticalSection\000"
 3610      69744372 
 3610      69746963 
 3610      616C5365 
 3610      6374696F 
 3611              	.LASF62:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 110


 3612 005d 70446174 		.ascii	"pData\000"
 3612      6100
 3613              	.LASF84:
 3614 0063 55534255 		.ascii	"USBUART_1_deviceStatus\000"
 3614      4152545F 
 3614      315F6465 
 3614      76696365 
 3614      53746174 
 3615              	.LASF34:
 3616 007a 6570496E 		.ascii	"epIntEn\000"
 3616      74456E00 
 3617              	.LASF2:
 3618 0082 73686F72 		.ascii	"short int\000"
 3618      7420696E 
 3618      7400
 3619              	.LASF67:
 3620 008c 55534255 		.ascii	"USBUART_1_Force\000"
 3620      4152545F 
 3620      315F466F 
 3620      72636500 
 3621              	.LASF24:
 3622 009c 65704D6F 		.ascii	"epMode\000"
 3622      646500
 3623              	.LASF45:
 3624 00a3 61726245 		.ascii	"arbEp\000"
 3624      7000
 3625              	.LASF59:
 3626 00a9 55534255 		.ascii	"USBUART_1_GetEPState\000"
 3626      4152545F 
 3626      315F4765 
 3626      74455053 
 3626      74617465 
 3627              	.LASF71:
 3628 00be 706F7765 		.ascii	"powerStatus\000"
 3628      72537461 
 3628      74757300 
 3629              	.LASF17:
 3630 00ca 6C6F6E67 		.ascii	"long double\000"
 3630      20646F75 
 3630      626C6500 
 3631              	.LASF50:
 3632 00d6 6D6F6465 		.ascii	"mode\000"
 3632      00
 3633              	.LASF76:
 3634 00db 55534255 		.ascii	"USBUART_1_ReInitComponent\000"
 3634      4152545F 
 3634      315F5265 
 3634      496E6974 
 3634      436F6D70 
 3635              	.LASF61:
 3636 00f5 55534255 		.ascii	"USBUART_1_LoadInEP\000"
 3636      4152545F 
 3636      315F4C6F 
 3636      6164496E 
 3636      455000
 3637              	.LASF46:
 3638 0108 55534255 		.ascii	"USBUART_1_arb_eps_struct\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 111


 3638      4152545F 
 3638      315F6172 
 3638      625F6570 
 3638      735F7374 
 3639              	.LASF77:
 3640 0121 55534255 		.ascii	"USBUART_1_EnableSofInt\000"
 3640      4152545F 
 3640      315F456E 
 3640      61626C65 
 3640      536F6649 
 3641              	.LASF10:
 3642 0138 75696E74 		.ascii	"uint16\000"
 3642      313600
 3643              	.LASF39:
 3644 013f 72775261 		.ascii	"rwRa\000"
 3644      00
 3645              	.LASF93:
 3646 0144 4379496E 		.ascii	"CyIntSetPriority\000"
 3646      74536574 
 3646      5072696F 
 3646      72697479 
 3646      00
 3647              	.LASF65:
 3648 0155 55534255 		.ascii	"USBUART_1_ReadOutEP\000"
 3648      4152545F 
 3648      315F5265 
 3648      61644F75 
 3648      74455000 
 3649              	.LASF88:
 3650 0169 55534255 		.ascii	"USBUART_1_EP\000"
 3650      4152545F 
 3650      315F4550 
 3650      00
 3651              	.LASF43:
 3652 0176 73696545 		.ascii	"sieEp\000"
 3652      7000
 3653              	.LASF56:
 3654 017c 55534255 		.ascii	"USBUART_1_IsConfigurationChanged\000"
 3654      4152545F 
 3654      315F4973 
 3654      436F6E66 
 3654      69677572 
 3655              	.LASF75:
 3656 019d 55534255 		.ascii	"USBUART_1_GetDeviceAddress\000"
 3656      4152545F 
 3656      315F4765 
 3656      74446576 
 3656      69636541 
 3657              	.LASF98:
 3658 01b8 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_1.c\000"
 3658      72617465 
 3658      645F536F 
 3658      75726365 
 3658      5C50536F 
 3659              	.LASF63:
 3660 01db 6C656E67 		.ascii	"length\000"
 3660      746800
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 112


 3661              	.LASF49:
 3662 01e2 64657669 		.ascii	"device\000"
 3662      636500
 3663              	.LASF12:
 3664 01e9 666C6F61 		.ascii	"float\000"
 3664      7400
 3665              	.LASF80:
 3666 01ef 55534255 		.ascii	"USBUART_1_device\000"
 3666      4152545F 
 3666      315F6465 
 3666      76696365 
 3666      00
 3667              	.LASF6:
 3668 0200 6C6F6E67 		.ascii	"long long int\000"
 3668      206C6F6E 
 3668      6720696E 
 3668      7400
 3669              	.LASF31:
 3670 020e 65704372 		.ascii	"epCr0\000"
 3670      3000
 3671              	.LASF32:
 3672 0214 55534255 		.ascii	"USBUART_1_sie_ep_struct\000"
 3672      4152545F 
 3672      315F7369 
 3672      655F6570 
 3672      5F737472 
 3673              	.LASF74:
 3674 022c 55534255 		.ascii	"USBUART_1_GetConfiguration\000"
 3674      4152545F 
 3674      315F4765 
 3674      74436F6E 
 3674      66696775 
 3675              	.LASF33:
 3676 0247 65704366 		.ascii	"epCfg\000"
 3676      6700
 3677              	.LASF4:
 3678 024d 6C6F6E67 		.ascii	"long int\000"
 3678      20696E74 
 3678      00
 3679              	.LASF100:
 3680 0256 55534255 		.ascii	"USBUART_1_GetEPCount\000"
 3680      4152545F 
 3680      315F4765 
 3680      74455043 
 3680      6F756E74 
 3681              	.LASF23:
 3682 026b 61646472 		.ascii	"addr\000"
 3682      00
 3683              	.LASF73:
 3684 0270 72657375 		.ascii	"result\000"
 3684      6C7400
 3685              	.LASF99:
 3686 0277 433A5C55 		.ascii	"C:\\Users\\jon\\Sync\\Research\\PSoC Projects\\Bala"
 3686      73657273 
 3686      5C6A6F6E 
 3686      5C53796E 
 3686      635C5265 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 113


 3687 02a4 6E63652E 		.ascii	"nce.cydsn\000"
 3687      63796473 
 3687      6E00
 3688              	.LASF81:
 3689 02ae 55534255 		.ascii	"USBUART_1_transferState\000"
 3689      4152545F 
 3689      315F7472 
 3689      616E7366 
 3689      65725374 
 3690              	.LASF28:
 3691 02c6 545F5553 		.ascii	"T_USBUART_1_EP_CTL_BLOCK\000"
 3691      42554152 
 3691      545F315F 
 3691      45505F43 
 3691      544C5F42 
 3692              	.LASF60:
 3693 02df 65704E75 		.ascii	"epNumber\000"
 3693      6D626572 
 3693      00
 3694              	.LASF25:
 3695 02e8 62756666 		.ascii	"buffOffset\000"
 3695      4F666673 
 3695      657400
 3696              	.LASF91:
 3697 02f3 43794465 		.ascii	"CyDelayUs\000"
 3697      6C617955 
 3697      7300
 3698              	.LASF1:
 3699 02fd 756E7369 		.ascii	"unsigned char\000"
 3699      676E6564 
 3699      20636861 
 3699      7200
 3700              	.LASF38:
 3701 030b 72775761 		.ascii	"rwWaMsb\000"
 3701      4D736200 
 3702              	.LASF35:
 3703 0313 65705372 		.ascii	"epSr\000"
 3703      00
 3704              	.LASF66:
 3705 0318 55534255 		.ascii	"USBUART_1_DisableOutEP\000"
 3705      4152545F 
 3705      315F4469 
 3705      7361626C 
 3705      654F7574 
 3706              	.LASF0:
 3707 032f 7369676E 		.ascii	"signed char\000"
 3707      65642063 
 3707      68617200 
 3708              	.LASF7:
 3709 033b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3709      206C6F6E 
 3709      6720756E 
 3709      7369676E 
 3709      65642069 
 3710              	.LASF57:
 3711 0352 55534255 		.ascii	"USBUART_1_GetInterfaceSetting\000"
 3711      4152545F 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 114


 3711      315F4765 
 3711      74496E74 
 3711      65726661 
 3712              	.LASF8:
 3713 0370 756E7369 		.ascii	"unsigned int\000"
 3713      676E6564 
 3713      20696E74 
 3713      00
 3714              	.LASF41:
 3715 037d 72774472 		.ascii	"rwDr\000"
 3715      00
 3716              	.LASF37:
 3717 0382 72775761 		.ascii	"rwWa\000"
 3717      00
 3718              	.LASF95:
 3719 0387 43794465 		.ascii	"CyDelayCycles\000"
 3719      6C617943 
 3719      79636C65 
 3719      7300
 3720              	.LASF87:
 3721 0395 55534255 		.ascii	"USBUART_1_deviceAddress\000"
 3721      4152545F 
 3721      315F6465 
 3721      76696365 
 3721      41646472 
 3722              	.LASF97:
 3723 03ad 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3723      43313120 
 3723      352E342E 
 3723      31203230 
 3723      31363036 
 3724 03e0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3724      20726576 
 3724      6973696F 
 3724      6E203233 
 3724      37373135 
 3725 0413 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3725      66756E63 
 3725      74696F6E 
 3725      2D736563 
 3725      74696F6E 
 3726              	.LASF16:
 3727 043b 72656733 		.ascii	"reg32\000"
 3727      3200
 3728              	.LASF3:
 3729 0441 73686F72 		.ascii	"short unsigned int\000"
 3729      7420756E 
 3729      7369676E 
 3729      65642069 
 3729      6E7400
 3730              	.LASF40:
 3731 0454 72775261 		.ascii	"rwRaMsb\000"
 3731      4D736200 
 3732              	.LASF19:
 3733 045c 61747472 		.ascii	"attrib\000"
 3733      696200
 3734              	.LASF96:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 115


 3735 0463 55534255 		.ascii	"USBUART_1_Dp_ClearInterrupt\000"
 3735      4152545F 
 3735      315F4470 
 3735      5F436C65 
 3735      6172496E 
 3736              	.LASF14:
 3737 047f 63686172 		.ascii	"char\000"
 3737      00
 3738              	.LASF82:
 3739 0484 55534255 		.ascii	"USBUART_1_configuration\000"
 3739      4152545F 
 3739      315F636F 
 3739      6E666967 
 3739      75726174 
 3740              	.LASF69:
 3741 049c 55534255 		.ascii	"USBUART_1_GetEPAckState\000"
 3741      4152545F 
 3741      315F4765 
 3741      74455041 
 3741      636B5374 
 3742              	.LASF72:
 3743 04b4 55534255 		.ascii	"USBUART_1_RWUEnabled\000"
 3743      4152545F 
 3743      315F5257 
 3743      55456E61 
 3743      626C6564 
 3744              	.LASF90:
 3745 04c9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3745      74657243 
 3745      72697469 
 3745      63616C53 
 3745      65637469 
 3746              	.LASF29:
 3747 04e0 6570436E 		.ascii	"epCnt0\000"
 3747      743000
 3748              	.LASF9:
 3749 04e7 75696E74 		.ascii	"uint8\000"
 3749      3800
 3750              	.LASF89:
 3751 04ed 55534255 		.ascii	"USBUART_1_lastPacketSize\000"
 3751      4152545F 
 3751      315F6C61 
 3751      73745061 
 3751      636B6574 
 3752              	.LASF54:
 3753 0506 63723152 		.ascii	"cr1Reg\000"
 3753      656700
 3754              	.LASF30:
 3755 050d 6570436E 		.ascii	"epCnt1\000"
 3755      743100
 3756              	.LASF86:
 3757 0514 55534255 		.ascii	"USBUART_1_interfaceSetting\000"
 3757      4152545F 
 3757      315F696E 
 3757      74657266 
 3757      61636553 
 3758              	.LASF21:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 116


 3759 052f 68774570 		.ascii	"hwEpState\000"
 3759      53746174 
 3759      6500
 3760              	.LASF11:
 3761 0539 75696E74 		.ascii	"uint32\000"
 3761      333200
 3762              	.LASF15:
 3763 0540 72656738 		.ascii	"reg8\000"
 3763      00
 3764              	.LASF5:
 3765 0545 6C6F6E67 		.ascii	"long unsigned int\000"
 3765      20756E73 
 3765      69676E65 
 3765      6420696E 
 3765      7400
 3766              	.LASF13:
 3767 0557 646F7562 		.ascii	"double\000"
 3767      6C6500
 3768              	.LASF20:
 3769 055e 61706945 		.ascii	"apiEpState\000"
 3769      70537461 
 3769      746500
 3770              	.LASF44:
 3771 0569 55534255 		.ascii	"USBUART_1_sie_eps_struct\000"
 3771      4152545F 
 3771      315F7369 
 3771      655F6570 
 3771      735F7374 
 3772              	.LASF26:
 3773 0582 62756666 		.ascii	"bufferSize\000"
 3773      65725369 
 3773      7A6500
 3774              	.LASF70:
 3775 058d 55534255 		.ascii	"USBUART_1_SetPowerStatus\000"
 3775      4152545F 
 3775      315F5365 
 3775      74506F77 
 3775      65725374 
 3776              	.LASF64:
 3777 05a6 55534255 		.ascii	"USBUART_1_EnableOutEP\000"
 3777      4152545F 
 3777      315F456E 
 3777      61626C65 
 3777      4F757445 
 3778              	.LASF94:
 3779 05bc 4379496E 		.ascii	"CyIntSetVector\000"
 3779      74536574 
 3779      56656374 
 3779      6F7200
 3780              	.LASF18:
 3781 05cb 73697A65 		.ascii	"sizetype\000"
 3781      74797065 
 3781      00
 3782              	.LASF79:
 3783 05d4 55534255 		.ascii	"USBUART_1_initVar\000"
 3783      4152545F 
 3783      315F696E 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 117


 3783      69745661 
 3783      7200
 3784              	.LASF47:
 3785 05e6 55534255 		.ascii	"USBUART_1_Init\000"
 3785      4152545F 
 3785      315F496E 
 3785      697400
 3786              	.LASF78:
 3787 05f5 55534255 		.ascii	"USBUART_1_DisableSofInt\000"
 3787      4152545F 
 3787      315F4469 
 3787      7361626C 
 3787      65536F66 
 3788              	.LASF48:
 3789 060d 55534255 		.ascii	"USBUART_1_InitComponent\000"
 3789      4152545F 
 3789      315F496E 
 3789      6974436F 
 3789      6D706F6E 
 3790              	.LASF83:
 3791 0625 55534255 		.ascii	"USBUART_1_configurationChanged\000"
 3791      4152545F 
 3791      315F636F 
 3791      6E666967 
 3791      75726174 
 3792              	.LASF36:
 3793 0644 72657365 		.ascii	"reserved\000"
 3793      72766564 
 3793      00
 3794              	.LASF27:
 3795 064d 696E7465 		.ascii	"interface\000"
 3795      72666163 
 3795      6500
 3796              	.LASF68:
 3797 0657 62537461 		.ascii	"bState\000"
 3797      746500
 3798              	.LASF53:
 3799 065e 656E6162 		.ascii	"enableInterrupts\000"
 3799      6C65496E 
 3799      74657272 
 3799      75707473 
 3799      00
 3800              	.LASF42:
 3801 066f 55534255 		.ascii	"USBUART_1_arb_ep_struct\000"
 3801      4152545F 
 3801      315F6172 
 3801      625F6570 
 3801      5F737472 
 3802              	.LASF55:
 3803 0687 55534255 		.ascii	"USBUART_1_CheckActivity\000"
 3803      4152545F 
 3803      315F4368 
 3803      65636B41 
 3803      63746976 
 3804              	.LASF51:
 3805 069f 55534255 		.ascii	"USBUART_1_Start\000"
 3805      4152545F 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccmdOpId.s 			page 118


 3805      315F5374 
 3805      61727400 
 3806              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
