ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  36              		.loc 1 124 0
  37 0002 0B4B     		ldr	r3, .L2
  38 0004 7222     		movs	r2, #114
  39 0006 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  40              		.loc 1 126 0
  41 0008 2022     		movs	r2, #32
  42 000a 83F8FF20 		strb	r2, [r3, #255]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 4


 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  43              		.loc 1 132 0
  44 000e 0949     		ldr	r1, .L2+4
  45 0010 0720     		movs	r0, #7
  46 0012 FFF7FEFF 		bl	CyIntSetVector
  47              	.LVL0:
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  48              		.loc 1 133 0
  49 0016 0721     		movs	r1, #7
  50 0018 0846     		mov	r0, r1
  51 001a FFF7FEFF 		bl	CyIntSetPriority
  52              	.LVL1:
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  53              		.loc 1 138 0
  54 001e 064B     		ldr	r3, .L2+8
  55 0020 0622     		movs	r2, #6
  56 0022 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  57              		.loc 1 139 0
  58 0024 4722     		movs	r2, #71
  59 0026 1A74     		strb	r2, [r3, #16]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
  60              		.loc 1 148 0
  61 0028 0222     		movs	r2, #2
  62 002a 83F86420 		strb	r2, [r3, #100]
  63 002e 08BD     		pop	{r3, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0030 86640040 		.word	1073767558
  68 0034 00000000 		.word	UART_TXISR
  69 0038 27640040 		.word	1073767463
  70              		.cfi_endproc
  71              	.LFE1:
  72              		.size	UART_Init, .-UART_Init
  73              		.section	.text.UART_Enable,"ax",%progbits
  74              		.align	1
  75              		.global	UART_Enable
  76              		.thumb
  77              		.thumb_func
  78              		.type	UART_Enable, %function
  79              	UART_Enable:
  80              	.LFB2:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 5


 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  81              		.loc 1 184 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85 0000 10B5     		push	{r4, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  89              		.loc 1 186 0
  90 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  91              	.LVL2:
  92 0006 0446     		mov	r4, r0
  93              	.LVL3:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  94              		.loc 1 190 0
  95 0008 0D4A     		ldr	r2, .L5
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 6


  96 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  97 000c 43F02003 		orr	r3, r3, #32
  98 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  99              		.loc 1 193 0
 100 0012 92F8FF30 		ldrb	r3, [r2, #255]	@ zero_extendqisi2
 101 0016 43F01003 		orr	r3, r3, #16
 102 001a 82F8FF30 		strb	r3, [r2, #255]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 103              		.loc 1 211 0
 104 001e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 105 0020 43F01003 		orr	r3, r3, #16
 106 0024 5371     		strb	r3, [r2, #5]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 107              		.loc 1 213 0
 108 0026 074A     		ldr	r2, .L5+4
 109 0028 8023     		movs	r3, #128
 110 002a 1360     		str	r3, [r2]
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 111              		.loc 1 214 0
 112 002c A2F5C072 		sub	r2, r2, #384
 113 0030 1360     		str	r3, [r2]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 114              		.loc 1 219 0
 115 0032 FFF7FEFF 		bl	UART_IntClock_Start
 116              	.LVL4:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 117              		.loc 1 222 0
 118 0036 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART.c **** }
 119              		.loc 1 223 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 7


 120 0038 BDE81040 		pop	{r4, lr}
 121              		.cfi_restore 14
 122              		.cfi_restore 4
 123              		.cfi_def_cfa_offset 0
 124              	.LVL5:
 222:Generated_Source\PSoC5/UART.c **** }
 125              		.loc 1 222 0
 126 003c FFF7FEBF 		b	CyExitCriticalSection
 127              	.LVL6:
 128              	.L6:
 129              		.align	2
 130              	.L5:
 131 0040 96640040 		.word	1073767574
 132 0044 80E200E0 		.word	-536812928
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	UART_Enable, .-UART_Enable
 136              		.section	.text.UART_Start,"ax",%progbits
 137              		.align	1
 138              		.global	UART_Start
 139              		.thumb
 140              		.thumb_func
 141              		.type	UART_Start, %function
 142              	UART_Start:
 143              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 144              		.loc 1 77 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 10B5     		push	{r4, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 4, -8
 151              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 152              		.loc 1 79 0
 153 0002 054C     		ldr	r4, .L10
 154 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 155 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 156              		.loc 1 81 0
 157 0008 FFF7FEFF 		bl	UART_Init
 158              	.LVL7:
  82:Generated_Source\PSoC5/UART.c ****     }
 159              		.loc 1 82 0
 160 000c 0123     		movs	r3, #1
 161 000e 2370     		strb	r3, [r4]
 162              	.L8:
  86:Generated_Source\PSoC5/UART.c **** 
 163              		.loc 1 86 0
 164 0010 BDE81040 		pop	{r4, lr}
 165              		.cfi_restore 14
 166              		.cfi_restore 4
 167              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART.c **** }
 168              		.loc 1 85 0
 169 0014 FFF7FEBF 		b	UART_Enable
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 8


 170              	.LVL8:
 171              	.L11:
 172              		.align	2
 173              	.L10:
 174 0018 00000000 		.word	.LANCHOR0
 175              		.cfi_endproc
 176              	.LFE0:
 177              		.size	UART_Start, .-UART_Start
 178              		.section	.text.UART_Stop,"ax",%progbits
 179              		.align	1
 180              		.global	UART_Stop
 181              		.thumb
 182              		.thumb_func
 183              		.type	UART_Stop, %function
 184              	UART_Stop:
 185              	.LFB3:
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 186              		.loc 1 241 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 194              		.loc 1 243 0
 195 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL9:
 197 0006 0446     		mov	r4, r0
 198              	.LVL10:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 199              		.loc 1 247 0
 200 0008 0C4A     		ldr	r2, .L13
 201 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 202 000c 03F0DF03 		and	r3, r3, #223
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 9


 203 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 204              		.loc 1 257 0
 205 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 206              	.LVL11:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 207              		.loc 1 262 0
 208 0016 0A4A     		ldr	r2, .L13+4
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 209              		.loc 1 277 0
 210 0018 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART.c **** 
 211              		.loc 1 262 0
 212 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 213 001c 03F0EF03 		and	r3, r3, #239
 214 0020 1370     		strb	r3, [r2]
 270:Generated_Source\PSoC5/UART.c **** 
 215              		.loc 1 270 0
 216 0022 12F8FA3C 		ldrb	r3, [r2, #-250]	@ zero_extendqisi2
 217 0026 03F0EF03 		and	r3, r3, #239
 218 002a 02F8FA3C 		strb	r3, [r2, #-250]
 273:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 219              		.loc 1 273 0
 220 002e 054B     		ldr	r3, .L13+8
 221 0030 8022     		movs	r2, #128
 222 0032 1A60     		str	r2, [r3]
 278:Generated_Source\PSoC5/UART.c **** }
 223              		.loc 1 278 0
 224 0034 BDE81040 		pop	{r4, lr}
 225              		.cfi_restore 14
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 10


 226              		.cfi_restore 4
 227              		.cfi_def_cfa_offset 0
 228              	.LVL12:
 277:Generated_Source\PSoC5/UART.c **** }
 229              		.loc 1 277 0
 230 0038 FFF7FEBF 		b	CyExitCriticalSection
 231              	.LVL13:
 232              	.L14:
 233              		.align	2
 234              	.L13:
 235 003c 96640040 		.word	1073767574
 236 0040 95650040 		.word	1073767829
 237 0044 80E100E0 		.word	-536813184
 238              		.cfi_endproc
 239              	.LFE3:
 240              		.size	UART_Stop, .-UART_Stop
 241              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 242              		.align	1
 243              		.global	UART_ReadControlRegister
 244              		.thumb
 245              		.thumb_func
 246              		.type	UART_ReadControlRegister, %function
 247              	UART_ReadControlRegister:
 248              	.LFB4:
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 249              		.loc 1 296 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 254              		.loc 1 302 0
 255 0000 0020     		movs	r0, #0
 256 0002 7047     		bx	lr
 257              		.cfi_endproc
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 11


 258              	.LFE4:
 259              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 260              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 261              		.align	1
 262              		.global	UART_WriteControlRegister
 263              		.thumb
 264              		.thumb_func
 265              		.type	UART_WriteControlRegister, %function
 266              	UART_WriteControlRegister:
 267              	.LFB30:
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272 0000 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE30:
 275              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 276              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 277              		.align	1
 278              		.global	UART_SetRxInterruptMode
 279              		.thumb
 280              		.thumb_func
 281              		.type	UART_SetRxInterruptMode, %function
 282              	UART_SetRxInterruptMode:
 283              	.LFB6:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 12


 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 284              		.loc 1 360 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289              	.LVL14:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 290              		.loc 1 361 0
 291 0000 014B     		ldr	r3, .L18
 292 0002 1870     		strb	r0, [r3]
 293 0004 7047     		bx	lr
 294              	.L19:
 295 0006 00BF     		.align	2
 296              	.L18:
 297 0008 85650040 		.word	1073767813
 298              		.cfi_endproc
 299              	.LFE6:
 300              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 301              		.section	.text.UART_ReadRxData,"ax",%progbits
 302              		.align	1
 303              		.global	UART_ReadRxData
 304              		.thumb
 305              		.thumb_func
 306              		.type	UART_ReadRxData, %function
 307              	UART_ReadRxData:
 308              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 13


 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 309              		.loc 1 393 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 14


 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 314              		.loc 1 448 0
 315 0000 014B     		ldr	r3, .L21
 316 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 317              	.LVL15:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 318              		.loc 1 453 0
 319 0004 7047     		bx	lr
 320              	.L22:
 321 0006 00BF     		.align	2
 322              	.L21:
 323 0008 46640040 		.word	1073767494
 324              		.cfi_endproc
 325              	.LFE7:
 326              		.size	UART_ReadRxData, .-UART_ReadRxData
 327              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 328              		.align	1
 329              		.global	UART_ReadRxStatus
 330              		.thumb
 331              		.thumb_func
 332              		.type	UART_ReadRxStatus, %function
 333              	UART_ReadRxStatus:
 334              	.LFB8:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 15


 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 335              		.loc 1 486 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 340              		.loc 1 489 0
 341 0000 024B     		ldr	r3, .L24
 342 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 343              	.LVL16:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 344              		.loc 1 500 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 16


 345 0004 00F07F00 		and	r0, r0, #127
 346              	.LVL17:
 347 0008 7047     		bx	lr
 348              	.L25:
 349 000a 00BF     		.align	2
 350              	.L24:
 351 000c 65650040 		.word	1073767781
 352              		.cfi_endproc
 353              	.LFE8:
 354              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 355              		.section	.text.UART_GetChar,"ax",%progbits
 356              		.align	1
 357              		.global	UART_GetChar
 358              		.thumb
 359              		.thumb_func
 360              		.type	UART_GetChar, %function
 361              	UART_GetChar:
 362              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 363              		.loc 1 533 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 368              	.LVL18:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 17


 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 18


 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 369              		.loc 1 596 0
 370 0000 074B     		ldr	r3, .L30
 371 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 372 0004 DBB2     		uxtb	r3, r3
 373              	.LVL19:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 374              		.loc 1 597 0
 375 0006 03F02002 		and	r2, r3, #32
 376 000a 02F0FF00 		and	r0, r2, #255
 377 000e 2AB1     		cbz	r2, .L27
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 378              		.loc 1 600 0
 379 0010 044A     		ldr	r2, .L30+4
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 380              		.loc 1 603 0
 381 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/UART.c **** 
 382              		.loc 1 600 0
 383 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 384              	.LVL20:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 385              		.loc 1 606 0
 386 0018 18BF     		it	ne
 387 001a 0020     		movne	r0, #0
 388              	.LVL21:
 389              	.L27:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 390              		.loc 1 612 0
 391 001c 7047     		bx	lr
 392              	.L31:
 393 001e 00BF     		.align	2
 394              	.L30:
 395 0020 65650040 		.word	1073767781
 396 0024 46640040 		.word	1073767494
 397              		.cfi_endproc
 398              	.LFE9:
 399              		.size	UART_GetChar, .-UART_GetChar
 400              		.section	.text.UART_GetByte,"ax",%progbits
 401              		.align	1
 402              		.global	UART_GetByte
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 19


 403              		.thumb
 404              		.thumb_func
 405              		.type	UART_GetByte, %function
 406              	UART_GetByte:
 407              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 408              		.loc 1 635 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LBB6:
 414              	.LBB7:
 489:Generated_Source\PSoC5/UART.c **** 
 415              		.loc 1 489 0
 416 0000 044B     		ldr	r3, .L33
 417              	.LBE7:
 418              	.LBE6:
 419              	.LBB9:
 420              	.LBB10:
 448:Generated_Source\PSoC5/UART.c **** 
 421              		.loc 1 448 0
 422 0002 054A     		ldr	r2, .L33+4
 423              	.LBE10:
 424              	.LBE9:
 425              	.LBB12:
 426              	.LBB8:
 489:Generated_Source\PSoC5/UART.c **** 
 427              		.loc 1 489 0
 428 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429              	.LBE8:
 430              	.LBE12:
 431              	.LBB13:
 432              	.LBB11:
 448:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 20


 433              		.loc 1 448 0
 434 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 435              	.LBE11:
 436              	.LBE13:
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 437              		.loc 1 646 0
 438 0008 03F07F03 		and	r3, r3, #127
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 439              		.loc 1 649 0
 440 000c 40EA0320 		orr	r0, r0, r3, lsl #8
 441 0010 7047     		bx	lr
 442              	.L34:
 443 0012 00BF     		.align	2
 444              	.L33:
 445 0014 65650040 		.word	1073767781
 446 0018 46640040 		.word	1073767494
 447              		.cfi_endproc
 448              	.LFE10:
 449              		.size	UART_GetByte, .-UART_GetByte
 450              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 451              		.align	1
 452              		.global	UART_GetRxBufferSize
 453              		.thumb
 454              		.thumb_func
 455              		.type	UART_GetRxBufferSize, %function
 456              	UART_GetRxBufferSize:
 457              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 21


 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 458              		.loc 1 685 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 463              		.loc 1 718 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 22


 464 0000 024B     		ldr	r3, .L36
 465 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 466              	.LVL22:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 467              		.loc 1 723 0
 468 0004 C0F34010 		ubfx	r0, r0, #5, #1
 469              	.LVL23:
 470 0008 7047     		bx	lr
 471              	.L37:
 472 000a 00BF     		.align	2
 473              	.L36:
 474 000c 65650040 		.word	1073767781
 475              		.cfi_endproc
 476              	.LFE11:
 477              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 478              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 479              		.align	1
 480              		.global	UART_ClearRxBuffer
 481              		.thumb
 482              		.thumb_func
 483              		.type	UART_ClearRxBuffer, %function
 484              	UART_ClearRxBuffer:
 485              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 23


 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 486              		.loc 1 758 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490 0000 08B5     		push	{r3, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 494              		.loc 1 762 0
 495 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 496              	.LVL24:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 497              		.loc 1 763 0
 498 0006 064B     		ldr	r3, .L39
 499 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 500 000a 42F00102 		orr	r2, r2, #1
 501 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 502              		.loc 1 764 0
 503 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 504 0012 02F0FE02 		and	r2, r2, #254
 505 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 506              		.loc 1 781 0
 507 0018 BDE80840 		pop	{r3, lr}
 508              		.cfi_restore 14
 509              		.cfi_restore 3
 510              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 511              		.loc 1 765 0
 512 001c FFF7FEBF 		b	CyExitCriticalSection
 513              	.LVL25:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 24


 514              	.L40:
 515              		.align	2
 516              	.L39:
 517 0020 96640040 		.word	1073767574
 518              		.cfi_endproc
 519              	.LFE12:
 520              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 521              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 522              		.align	1
 523              		.global	UART_SetRxAddressMode
 524              		.thumb
 525              		.thumb_func
 526              		.type	UART_SetRxAddressMode, %function
 527              	UART_SetRxAddressMode:
 528              	.LFB28:
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 7047     		bx	lr
 534              		.cfi_endproc
 535              	.LFE28:
 536              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 537              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 538              		.align	1
 539              		.global	UART_SetRxAddress1
 540              		.thumb
 541              		.thumb_func
 542              		.type	UART_SetRxAddress1, %function
 543              	UART_SetRxAddress1:
 544              	.LFB14:
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 25


 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 545              		.loc 1 858 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550              	.LVL26:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 26


 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 551              		.loc 1 859 0
 552 0000 014B     		ldr	r3, .L43
 553 0002 1870     		strb	r0, [r3]
 554 0004 7047     		bx	lr
 555              	.L44:
 556 0006 00BF     		.align	2
 557              	.L43:
 558 0008 26640040 		.word	1073767462
 559              		.cfi_endproc
 560              	.LFE14:
 561              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 562              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 563              		.align	1
 564              		.global	UART_SetRxAddress2
 565              		.thumb
 566              		.thumb_func
 567              		.type	UART_SetRxAddress2, %function
 568              	UART_SetRxAddress2:
 569              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 570              		.loc 1 878 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575              	.LVL27:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 576              		.loc 1 879 0
 577 0000 014B     		ldr	r3, .L46
 578 0002 1870     		strb	r0, [r3]
 579 0004 7047     		bx	lr
 580              	.L47:
 581 0006 00BF     		.align	2
 582              	.L46:
 583 0008 36640040 		.word	1073767478
 584              		.cfi_endproc
 585              	.LFE15:
 586              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 27


 587              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 588              		.align	1
 589              		.global	UART_SetTxInterruptMode
 590              		.thumb
 591              		.thumb_func
 592              		.type	UART_SetTxInterruptMode, %function
 593              	UART_SetTxInterruptMode:
 594              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 595              		.loc 1 909 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL28:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 601              		.loc 1 910 0
 602 0000 014B     		ldr	r3, .L49
 603 0002 1870     		strb	r0, [r3]
 604 0004 7047     		bx	lr
 605              	.L50:
 606 0006 00BF     		.align	2
 607              	.L49:
 608 0008 8B640040 		.word	1073767563
 609              		.cfi_endproc
 610              	.LFE16:
 611              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 612              		.section	.text.UART_WriteTxData,"ax",%progbits
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 28


 613              		.align	1
 614              		.global	UART_WriteTxData
 615              		.thumb
 616              		.thumb_func
 617              		.type	UART_WriteTxData, %function
 618              	UART_WriteTxData:
 619              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 620              		.loc 1 943 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL29:
 625 0000 10B5     		push	{r4, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 629              		.loc 1 945 0
 630 0002 0F4B     		ldr	r3, .L59
 631 0004 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 632 0006 1A46     		mov	r2, r3
 633 0008 C9B1     		cbz	r1, .L51
 946:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 29


 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 634              		.loc 1 950 0
 635 000a 0E49     		ldr	r1, .L59+4
 636 000c 8024     		movs	r4, #128
 637 000e 0C60     		str	r4, [r1]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 638              		.loc 1 952 0
 639 0010 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 640 0012 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 641 0014 9942     		cmp	r1, r3
 642 0016 06D1     		bne	.L53
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 643              		.loc 1 953 0 discriminator 1
 644 0018 0B49     		ldr	r1, .L59+8
 645 001a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 646              		.loc 1 952 0 discriminator 1
 647 001c 4907     		lsls	r1, r1, #29
 648 001e 02D4     		bmi	.L53
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 649              		.loc 1 956 0
 650 0020 0A4B     		ldr	r3, .L59+12
 651 0022 1870     		strb	r0, [r3]
 652 0024 08E0     		b	.L54
 653              	.L53:
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 654              		.loc 1 960 0
 655 0026 072B     		cmp	r3, #7
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 656              		.loc 1 962 0
 657 0028 84BF     		itt	hi
 658 002a 0023     		movhi	r3, #0
 659 002c 9370     		strbhi	r3, [r2, #2]
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 660              		.loc 1 965 0
 661 002e 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 662 0030 0749     		ldr	r1, .L59+16
 663 0032 C854     		strb	r0, [r1, r3]
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 664              		.loc 1 968 0
 665 0034 0133     		adds	r3, r3, #1
 666 0036 9370     		strb	r3, [r2, #2]
 667              	.L54:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 30


 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 668              		.loc 1 971 0
 669 0038 064B     		ldr	r3, .L59+20
 670 003a 8022     		movs	r2, #128
 671 003c 1A60     		str	r2, [r3]
 672              	.L51:
 673 003e 10BD     		pop	{r4, pc}
 674              	.L60:
 675              		.align	2
 676              	.L59:
 677 0040 00000000 		.word	.LANCHOR0
 678 0044 80E100E0 		.word	-536813184
 679 0048 6B640040 		.word	1073767531
 680 004c 4B640040 		.word	1073767499
 681 0050 00000000 		.word	UART_txBuffer
 682 0054 00E100E0 		.word	-536813312
 683              		.cfi_endproc
 684              	.LFE17:
 685              		.size	UART_WriteTxData, .-UART_WriteTxData
 686              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 687              		.align	1
 688              		.global	UART_ReadTxStatus
 689              		.thumb
 690              		.thumb_func
 691              		.type	UART_ReadTxStatus, %function
 692              	UART_ReadTxStatus:
 693              	.LFB18:
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 31


1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 694              		.loc 1 1004 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 699              		.loc 1 1005 0
 700 0000 014B     		ldr	r3, .L62
 701 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 702              		.loc 1 1006 0
 703 0004 7047     		bx	lr
 704              	.L63:
 705 0006 00BF     		.align	2
 706              	.L62:
 707 0008 6B640040 		.word	1073767531
 708              		.cfi_endproc
 709              	.LFE18:
 710              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 711              		.section	.text.UART_PutChar,"ax",%progbits
 712              		.align	1
 713              		.global	UART_PutChar
 714              		.thumb
 715              		.thumb_func
 716              		.type	UART_PutChar, %function
 717              	UART_PutChar:
 718              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 32


1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 719              		.loc 1 1042 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL30:
 724 0000 10B5     		push	{r4, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 728              		.loc 1 1059 0
 729 0002 134C     		ldr	r4, .L76
 730 0004 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 731              	.L67:
 732              	.LVL31:
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 733              		.loc 1 1060 0
 734 0006 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 735 0008 D2B2     		uxtb	r2, r2
 736              	.LVL32:
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 737              		.loc 1 1067 0
 738 000a 9342     		cmp	r3, r2
 739 000c 02D2     		bcs	.L65
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 33


 740              		.loc 1 1067 0 is_stmt 0 discriminator 1
 741 000e 511E     		subs	r1, r2, #1
 742 0010 9942     		cmp	r1, r3
 743 0012 01E0     		b	.L75
 744              	.L65:
 745              		.loc 1 1067 0 discriminator 2
 746 0014 991A     		subs	r1, r3, r2
 747 0016 0729     		cmp	r1, #7
 748              	.L75:
 749 0018 14BF     		ite	ne
 750 001a 0021     		movne	r1, #0
 751 001c 0121     		moveq	r1, #1
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 752              		.loc 1 1069 0 is_stmt 1 discriminator 2
 753 001e 0029     		cmp	r1, #0
 754 0020 F1D1     		bne	.L67
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 755              		.loc 1 1071 0
 756 0022 9342     		cmp	r3, r2
 757 0024 0B4A     		ldr	r2, .L76+4
 758              	.LVL33:
 759 0026 05D1     		bne	.L68
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 760              		.loc 1 1072 0 discriminator 1
 761 0028 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 762              		.loc 1 1071 0 discriminator 1
 763 002a 4907     		lsls	r1, r1, #29
 764 002c 02D4     		bmi	.L68
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 765              		.loc 1 1075 0
 766 002e 0A4B     		ldr	r3, .L76+8
 767 0030 1870     		strb	r0, [r3]
 768              	.LVL34:
 769 0032 10BD     		pop	{r4, pc}
 770              	.LVL35:
 771              	.L68:
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
 772              		.loc 1 1081 0
 773 0034 082B     		cmp	r3, #8
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 774              		.loc 1 1084 0
 775 0036 0949     		ldr	r1, .L76+12
1081:Generated_Source\PSoC5/UART.c ****             }
 776              		.loc 1 1081 0
 777 0038 28BF     		it	cs
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 34


 778 003a 0023     		movcs	r3, #0
 779              	.LVL36:
 780              		.loc 1 1084 0
 781 003c C854     		strb	r0, [r1, r3]
 782              	.LVL37:
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
 783              		.loc 1 1092 0
 784 003e 0133     		adds	r3, r3, #1
 785              	.LVL38:
 786 0040 A370     		strb	r3, [r4, #2]
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 787              		.loc 1 1098 0
 788 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 789              	.LVL39:
 790 0044 9B07     		lsls	r3, r3, #30
 791              	.LVL40:
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
 792              		.loc 1 1101 0
 793 0046 42BF     		ittt	mi
 794 0048 054B     		ldrmi	r3, .L76+16
 795 004a 8022     		movmi	r2, #128
 796 004c 1A60     		strmi	r2, [r3]
 797 004e 10BD     		pop	{r4, pc}
 798              	.L77:
 799              		.align	2
 800              	.L76:
 801 0050 00000000 		.word	.LANCHOR0
 802 0054 6B640040 		.word	1073767531
 803 0058 4B640040 		.word	1073767499
 804 005c 00000000 		.word	UART_txBuffer
 805 0060 00E200E0 		.word	-536813056
 806              		.cfi_endproc
 807              	.LFE19:
 808              		.size	UART_PutChar, .-UART_PutChar
 809              		.section	.text.UART_PutString,"ax",%progbits
 810              		.align	1
 811              		.global	UART_PutString
 812              		.thumb
 813              		.thumb_func
 814              		.type	UART_PutString, %function
 815              	UART_PutString:
 816              	.LFB20:
1102:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 35


1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 817              		.loc 1 1146 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL41:
 822 0000 38B5     		push	{r3, r4, r5, lr}
 823              		.cfi_def_cfa_offset 16
 824              		.cfi_offset 3, -16
 825              		.cfi_offset 4, -12
 826              		.cfi_offset 5, -8
 827              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 36


1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 828              		.loc 1 1150 0
 829 0002 064B     		ldr	r3, .L85
1146:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 830              		.loc 1 1146 0
 831 0004 0546     		mov	r5, r0
 832              		.loc 1 1150 0
 833 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 0008 3BB1     		cbz	r3, .L78
 835 000a 0024     		movs	r4, #0
 836              	.LVL42:
 837              	.L80:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 838              		.loc 1 1153 0
 839 000c A3B2     		uxth	r3, r4
 840              	.LVL43:
 841 000e E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 842 0010 0134     		adds	r4, r4, #1
 843 0012 10B1     		cbz	r0, .L78
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 844              		.loc 1 1155 0
 845 0014 FFF7FEFF 		bl	UART_PutChar
 846              	.LVL44:
 847 0018 F8E7     		b	.L80
 848              	.LVL45:
 849              	.L78:
 850 001a 38BD     		pop	{r3, r4, r5, pc}
 851              	.LVL46:
 852              	.L86:
 853              		.align	2
 854              	.L85:
 855 001c 00000000 		.word	.LANCHOR0
 856              		.cfi_endproc
 857              	.LFE20:
 858              		.size	UART_PutString, .-UART_PutString
 859              		.section	.text.UART_PutArray,"ax",%progbits
 860              		.align	1
 861              		.global	UART_PutArray
 862              		.thumb
 863              		.thumb_func
 864              		.type	UART_PutArray, %function
 865              	UART_PutArray:
 866              	.LFB21:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 37


1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 867              		.loc 1 1193 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL47:
 872 0000 38B5     		push	{r3, r4, r5, lr}
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 3, -16
 875              		.cfi_offset 4, -12
 876              		.cfi_offset 5, -8
 877              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 878              		.loc 1 1197 0
 879 0002 074B     		ldr	r3, .L92
 880 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 881 0006 4BB1     		cbz	r3, .L87
 882 0008 0139     		subs	r1, r1, #1
 883              	.LVL48:
 884 000a 451E     		subs	r5, r0, #1
 885 000c 4418     		adds	r4, r0, r1
 886              	.LVL49:
 887              	.L89:
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 888              		.loc 1 1199 0
 889 000e A542     		cmp	r5, r4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 38


 890 0010 04D0     		beq	.L87
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 891              		.loc 1 1201 0
 892 0012 15F8010F 		ldrb	r0, [r5, #1]!	@ zero_extendqisi2
 893              	.LVL50:
 894 0016 FFF7FEFF 		bl	UART_PutChar
 895              	.LVL51:
 896 001a F8E7     		b	.L89
 897              	.LVL52:
 898              	.L87:
 899 001c 38BD     		pop	{r3, r4, r5, pc}
 900              	.L93:
 901 001e 00BF     		.align	2
 902              	.L92:
 903 0020 00000000 		.word	.LANCHOR0
 904              		.cfi_endproc
 905              	.LFE21:
 906              		.size	UART_PutArray, .-UART_PutArray
 907              		.section	.text.UART_PutCRLF,"ax",%progbits
 908              		.align	1
 909              		.global	UART_PutCRLF
 910              		.thumb
 911              		.thumb_func
 912              		.type	UART_PutCRLF, %function
 913              	UART_PutCRLF:
 914              	.LFB22:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 39


 915              		.loc 1 1231 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              	.LVL53:
 920 0000 08B5     		push	{r3, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 3, -8
 923              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 924              		.loc 1 1233 0
 925 0002 074B     		ldr	r3, .L96
 926 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 927 0006 4BB1     		cbz	r3, .L94
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 928              		.loc 1 1235 0
 929 0008 FFF7FEFF 		bl	UART_PutChar
 930              	.LVL54:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 931              		.loc 1 1236 0
 932 000c 0D20     		movs	r0, #13
 933 000e FFF7FEFF 		bl	UART_PutChar
 934              	.LVL55:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
 935              		.loc 1 1239 0
 936 0012 BDE80840 		pop	{r3, lr}
 937              		.cfi_remember_state
 938              		.cfi_restore 14
 939              		.cfi_restore 3
 940              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 941              		.loc 1 1237 0
 942 0016 0A20     		movs	r0, #10
 943 0018 FFF7FEBF 		b	UART_PutChar
 944              	.LVL56:
 945              	.L94:
 946              		.cfi_restore_state
 947 001c 08BD     		pop	{r3, pc}
 948              	.L97:
 949 001e 00BF     		.align	2
 950              	.L96:
 951 0020 00000000 		.word	.LANCHOR0
 952              		.cfi_endproc
 953              	.LFE22:
 954              		.size	UART_PutCRLF, .-UART_PutCRLF
 955              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 956              		.align	1
 957              		.global	UART_GetTxBufferSize
 958              		.thumb
 959              		.thumb_func
 960              		.type	UART_GetTxBufferSize, %function
 961              	UART_GetTxBufferSize:
 962              	.LFB23:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 40


1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 963              		.loc 1 1275 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 968              		.loc 1 1281 0
 969 0000 0A4B     		ldr	r3, .L103
 970 0002 8022     		movs	r2, #128
 971 0004 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 972              		.loc 1 1283 0
 973 0006 0A4A     		ldr	r2, .L103+4
 974 0008 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 975 000a 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 41


 976 000c 9942     		cmp	r1, r3
 977 000e 07D0     		beq	.L101
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 978              		.loc 1 1287 0
 979 0010 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 980              		.loc 1 1289 0
 981 0012 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
1287:Generated_Source\PSoC5/UART.c ****         {
 982              		.loc 1 1287 0
 983 0014 8B42     		cmp	r3, r1
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 984              		.loc 1 1293 0
 985 0016 98BF     		it	ls
 986 0018 0833     		addls	r3, r3, #8
 987 001a 181A     		subs	r0, r3, r0
 988 001c C0B2     		uxtb	r0, r0
 989              	.LVL57:
 990 001e 00E0     		b	.L99
 991              	.LVL58:
 992              	.L101:
1285:Generated_Source\PSoC5/UART.c ****         }
 993              		.loc 1 1285 0
 994 0020 0020     		movs	r0, #0
 995              	.L99:
 996              	.LVL59:
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 997              		.loc 1 1297 0
 998 0022 044B     		ldr	r3, .L103+8
 999 0024 8022     		movs	r2, #128
 1000 0026 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 42


1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 1001              		.loc 1 1321 0
 1002 0028 7047     		bx	lr
 1003              	.L104:
 1004 002a 00BF     		.align	2
 1005              	.L103:
 1006 002c 80E100E0 		.word	-536813184
 1007 0030 00000000 		.word	.LANCHOR0
 1008 0034 00E100E0 		.word	-536813312
 1009              		.cfi_endproc
 1010              	.LFE23:
 1011              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1012              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1013              		.align	1
 1014              		.global	UART_ClearTxBuffer
 1015              		.thumb
 1016              		.thumb_func
 1017              		.type	UART_ClearTxBuffer, %function
 1018              	UART_ClearTxBuffer:
 1019              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 43


1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1020              		.loc 1 1355 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024 0000 08B5     		push	{r3, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 3, -8
 1027              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1028              		.loc 1 1358 0
 1029 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1030              	.LVL60:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1031              		.loc 1 1360 0
 1032 0006 0A4B     		ldr	r3, .L106
 1033 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1034 000a 42F00102 		orr	r2, r2, #1
 1035 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1036              		.loc 1 1361 0
 1037 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0012 02F0FE02 		and	r2, r2, #254
 1039 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1040              		.loc 1 1362 0
 1041 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1042              	.LVL61:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1043              		.loc 1 1367 0
 1044 001c 054A     		ldr	r2, .L106+4
 1045 001e 8023     		movs	r3, #128
 1046 0020 1360     		str	r3, [r2]
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1047              		.loc 1 1369 0
 1048 0022 054A     		ldr	r2, .L106+8
 1049 0024 0021     		movs	r1, #0
 1050 0026 5170     		strb	r1, [r2, #1]
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1051              		.loc 1 1370 0
 1052 0028 9170     		strb	r1, [r2, #2]
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1053              		.loc 1 1373 0
 1054 002a 044A     		ldr	r2, .L106+12
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 44


 1055 002c 1360     		str	r3, [r2]
 1056 002e 08BD     		pop	{r3, pc}
 1057              	.L107:
 1058              		.align	2
 1059              	.L106:
 1060 0030 9B640040 		.word	1073767579
 1061 0034 80E100E0 		.word	-536813184
 1062 0038 00000000 		.word	.LANCHOR0
 1063 003c 00E100E0 		.word	-536813312
 1064              		.cfi_endproc
 1065              	.LFE24:
 1066              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1067              		.section	.text.UART_SendBreak,"ax",%progbits
 1068              		.align	1
 1069              		.global	UART_SendBreak
 1070              		.thumb
 1071              		.thumb_func
 1072              		.type	UART_SendBreak, %function
 1073              	UART_SendBreak:
 1074              	.LFB25:
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 45


1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1075              		.loc 1 1441 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              		@ link register save eliminated.
 1080              	.LVL62:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1081              		.loc 1 1444 0
 1082 0000 124B     		ldr	r3, .L131
 1083 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1084 0004 02B3     		cbz	r2, .L108
 1085              	.LBB14:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 46


1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1086              		.loc 1 1490 0
 1087 0006 08B1     		cbz	r0, .L111
 1088              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1089 0008 0328     		cmp	r0, #3
 1090 000a 1BD1     		bne	.L112
 1091              	.L111:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1092              		.loc 1 1501 0 is_stmt 1
 1093 000c 104A     		ldr	r2, .L131+4
 1094 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1095 0010 D970     		strb	r1, [r3, #3]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1096              		.loc 1 1502 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 47


 1097 0012 6721     		movs	r1, #103
 1098 0014 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1099              		.loc 1 1509 0
 1100 0016 0021     		movs	r1, #0
 1101 0018 1175     		strb	r1, [r2, #20]
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1102              		.loc 1 1513 0
 1103 001a 0E49     		ldr	r1, .L131+8
 1104              	.L113:
 1105              		.loc 1 1513 0 is_stmt 0 discriminator 1
 1106 001c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1107              	.LVL63:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1108              		.loc 1 1515 0 is_stmt 1 discriminator 1
 1109 001e 9207     		lsls	r2, r2, #30
 1110              	.LVL64:
 1111 0020 FCD4     		bmi	.L113
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1112              		.loc 1 1518 0
 1113 0022 00F0FD02 		and	r2, r0, #253
 1114 0026 012A     		cmp	r2, #1
 1115              	.L130:
 1116 0028 03D0     		beq	.L114
 1117              	.L118:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1118              		.loc 1 1528 0
 1119 002a 0138     		subs	r0, r0, #1
 1120              	.LVL65:
 1121 002c 0228     		cmp	r0, #2
 1122 002e 05D9     		bls	.L115
 1123 0030 7047     		bx	lr
 1124              	.LVL66:
 1125              	.L114:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1126              		.loc 1 1523 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 48


 1127 0032 0849     		ldr	r1, .L131+8
 1128              	.L117:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1129              		.loc 1 1523 0 is_stmt 0 discriminator 1
 1130 0034 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1131              	.LVL67:
1525:Generated_Source\PSoC5/UART.c ****             }
 1132              		.loc 1 1525 0 is_stmt 1 discriminator 1
 1133 0036 D207     		lsls	r2, r2, #31
 1134              	.LVL68:
 1135 0038 FCD5     		bpl	.L117
 1136 003a F6E7     		b	.L118
 1137              	.LVL69:
 1138              	.L115:
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1139              		.loc 1 1534 0
 1140 003c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1141 003e 044B     		ldr	r3, .L131+4
 1142 0040 1A70     		strb	r2, [r3]
 1143              	.LBE14:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 1144              		.loc 1 1547 0
 1145 0042 7047     		bx	lr
 1146              	.LVL70:
 1147              	.L112:
 1148              	.LBB15:
1518:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
 1149              		.loc 1 1518 0
 1150 0044 0128     		cmp	r0, #1
 1151 0046 EFE7     		b	.L130
 1152              	.L108:
 1153 0048 7047     		bx	lr
 1154              	.L132:
 1155 004a 00BF     		.align	2
 1156              	.L131:
 1157 004c 00000000 		.word	.LANCHOR0
 1158 0050 37640040 		.word	1073767479
 1159 0054 6B640040 		.word	1073767531
 1160              	.LBE15:
 1161              		.cfi_endproc
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 49


 1162              	.LFE25:
 1163              		.size	UART_SendBreak, .-UART_SendBreak
 1164              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1165              		.align	1
 1166              		.global	UART_SetTxAddressMode
 1167              		.thumb
 1168              		.thumb_func
 1169              		.type	UART_SetTxAddressMode, %function
 1170              	UART_SetTxAddressMode:
 1171              	.LFB26:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1172              		.loc 1 1573 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177              	.LVL71:
 1178 0000 7047     		bx	lr
 1179              		.cfi_endproc
 1180              	.LFE26:
 1181              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1182              		.global	UART_txBufferWrite
 1183              		.global	UART_txBufferRead
 1184              		.comm	UART_txBuffer,8,1
 1185              		.global	UART_initVar
 1186              		.bss
 1187              		.set	.LANCHOR0,. + 0
 1188              		.type	UART_initVar, %object
 1189              		.size	UART_initVar, 1
 1190              	UART_initVar:
 1191 0000 00       		.space	1
 1192              		.type	UART_txBufferRead, %object
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 50


 1193              		.size	UART_txBufferRead, 1
 1194              	UART_txBufferRead:
 1195 0001 00       		.space	1
 1196              		.type	UART_txBufferWrite, %object
 1197              		.size	UART_txBufferWrite, 1
 1198              	UART_txBufferWrite:
 1199 0002 00       		.space	1
 1200              		.type	txPeriod.5131, %object
 1201              		.size	txPeriod.5131, 1
 1202              	txPeriod.5131:
 1203 0003 00       		.space	1
 1204              		.text
 1205              	.Letext0:
 1206              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1207              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1208              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1209              		.section	.debug_info,"",%progbits
 1210              	.Ldebug_info0:
 1211 0000 CF060000 		.4byte	0x6cf
 1212 0004 0400     		.2byte	0x4
 1213 0006 00000000 		.4byte	.Ldebug_abbrev0
 1214 000a 04       		.byte	0x4
 1215 000b 01       		.uleb128 0x1
 1216 000c A8000000 		.4byte	.LASF70
 1217 0010 0C       		.byte	0xc
 1218 0011 78030000 		.4byte	.LASF71
 1219 0015 3F010000 		.4byte	.LASF72
 1220 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1221 001d 00000000 		.4byte	0
 1222 0021 00000000 		.4byte	.Ldebug_line0
 1223 0025 02       		.uleb128 0x2
 1224 0026 01       		.byte	0x1
 1225 0027 06       		.byte	0x6
 1226 0028 9C000000 		.4byte	.LASF0
 1227 002c 02       		.uleb128 0x2
 1228 002d 01       		.byte	0x1
 1229 002e 08       		.byte	0x8
 1230 002f B0030000 		.4byte	.LASF1
 1231 0033 02       		.uleb128 0x2
 1232 0034 02       		.byte	0x2
 1233 0035 05       		.byte	0x5
 1234 0036 CF030000 		.4byte	.LASF2
 1235 003a 02       		.uleb128 0x2
 1236 003b 02       		.byte	0x2
 1237 003c 07       		.byte	0x7
 1238 003d 8C020000 		.4byte	.LASF3
 1239 0041 02       		.uleb128 0x2
 1240 0042 04       		.byte	0x4
 1241 0043 05       		.byte	0x5
 1242 0044 76010000 		.4byte	.LASF4
 1243 0048 02       		.uleb128 0x2
 1244 0049 04       		.byte	0x4
 1245 004a 07       		.byte	0x7
 1246 004b 3F020000 		.4byte	.LASF5
 1247 004f 02       		.uleb128 0x2
 1248 0050 08       		.byte	0x8
 1249 0051 05       		.byte	0x5
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 51


 1250 0052 8E000000 		.4byte	.LASF6
 1251 0056 02       		.uleb128 0x2
 1252 0057 08       		.byte	0x8
 1253 0058 07       		.byte	0x7
 1254 0059 42000000 		.4byte	.LASF7
 1255 005d 03       		.uleb128 0x3
 1256 005e 04       		.byte	0x4
 1257 005f 05       		.byte	0x5
 1258 0060 696E7400 		.ascii	"int\000"
 1259 0064 02       		.uleb128 0x2
 1260 0065 04       		.byte	0x4
 1261 0066 07       		.byte	0x7
 1262 0067 12020000 		.4byte	.LASF8
 1263 006b 04       		.uleb128 0x4
 1264 006c 9C010000 		.4byte	.LASF9
 1265 0070 02       		.byte	0x2
 1266 0071 E401     		.2byte	0x1e4
 1267 0073 2C000000 		.4byte	0x2c
 1268 0077 04       		.uleb128 0x4
 1269 0078 00000000 		.4byte	.LASF10
 1270 007c 02       		.byte	0x2
 1271 007d E501     		.2byte	0x1e5
 1272 007f 3A000000 		.4byte	0x3a
 1273 0083 04       		.uleb128 0x4
 1274 0084 CE010000 		.4byte	.LASF11
 1275 0088 02       		.byte	0x2
 1276 0089 E601     		.2byte	0x1e6
 1277 008b 48000000 		.4byte	0x48
 1278 008f 02       		.uleb128 0x2
 1279 0090 04       		.byte	0x4
 1280 0091 04       		.byte	0x4
 1281 0092 8B040000 		.4byte	.LASF12
 1282 0096 02       		.uleb128 0x2
 1283 0097 08       		.byte	0x8
 1284 0098 04       		.byte	0x4
 1285 0099 BB010000 		.4byte	.LASF13
 1286 009d 04       		.uleb128 0x4
 1287 009e 1C040000 		.4byte	.LASF14
 1288 00a2 02       		.byte	0x2
 1289 00a3 F501     		.2byte	0x1f5
 1290 00a5 A9000000 		.4byte	0xa9
 1291 00a9 02       		.uleb128 0x2
 1292 00aa 01       		.byte	0x1
 1293 00ab 08       		.byte	0x8
 1294 00ac 17040000 		.4byte	.LASF15
 1295 00b0 04       		.uleb128 0x4
 1296 00b1 AB030000 		.4byte	.LASF16
 1297 00b5 02       		.byte	0x2
 1298 00b6 8E02     		.2byte	0x28e
 1299 00b8 BC000000 		.4byte	0xbc
 1300 00bc 05       		.uleb128 0x5
 1301 00bd 6B000000 		.4byte	0x6b
 1302 00c1 04       		.uleb128 0x4
 1303 00c2 FA020000 		.4byte	.LASF17
 1304 00c6 02       		.byte	0x2
 1305 00c7 9002     		.2byte	0x290
 1306 00c9 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 52


 1307 00cd 05       		.uleb128 0x5
 1308 00ce 83000000 		.4byte	0x83
 1309 00d2 02       		.uleb128 0x2
 1310 00d3 08       		.byte	0x8
 1311 00d4 04       		.byte	0x4
 1312 00d5 11030000 		.4byte	.LASF18
 1313 00d9 02       		.uleb128 0x2
 1314 00da 04       		.byte	0x4
 1315 00db 07       		.byte	0x7
 1316 00dc 08030000 		.4byte	.LASF19
 1317 00e0 06       		.uleb128 0x6
 1318 00e1 8C010000 		.4byte	.LASF20
 1319 00e5 01       		.byte	0x1
 1320 00e6 8801     		.2byte	0x188
 1321 00e8 6B000000 		.4byte	0x6b
 1322 00ec 01       		.byte	0x1
 1323 00ed FE000000 		.4byte	0xfe
 1324 00f1 07       		.uleb128 0x7
 1325 00f2 F2030000 		.4byte	.LASF22
 1326 00f6 01       		.byte	0x1
 1327 00f7 8A01     		.2byte	0x18a
 1328 00f9 6B000000 		.4byte	0x6b
 1329 00fd 00       		.byte	0
 1330 00fe 06       		.uleb128 0x6
 1331 00ff 05040000 		.4byte	.LASF21
 1332 0103 01       		.byte	0x1
 1333 0104 E501     		.2byte	0x1e5
 1334 0106 6B000000 		.4byte	0x6b
 1335 010a 01       		.byte	0x1
 1336 010b 1C010000 		.4byte	0x11c
 1337 010f 07       		.uleb128 0x7
 1338 0110 7A040000 		.4byte	.LASF23
 1339 0114 01       		.byte	0x1
 1340 0115 E701     		.2byte	0x1e7
 1341 0117 6B000000 		.4byte	0x6b
 1342 011b 00       		.byte	0
 1343 011c 08       		.uleb128 0x8
 1344 011d E5010000 		.4byte	.LASF24
 1345 0121 01       		.byte	0x1
 1346 0122 6A       		.byte	0x6a
 1347 0123 00000000 		.4byte	.LFB1
 1348 0127 3C000000 		.4byte	.LFE1-.LFB1
 1349 012b 01       		.uleb128 0x1
 1350 012c 9C       		.byte	0x9c
 1351 012d 59010000 		.4byte	0x159
 1352 0131 09       		.uleb128 0x9
 1353 0132 16000000 		.4byte	.LVL0
 1354 0136 90060000 		.4byte	0x690
 1355 013a 44010000 		.4byte	0x144
 1356 013e 0A       		.uleb128 0xa
 1357 013f 01       		.uleb128 0x1
 1358 0140 50       		.byte	0x50
 1359 0141 01       		.uleb128 0x1
 1360 0142 37       		.byte	0x37
 1361 0143 00       		.byte	0
 1362 0144 0B       		.uleb128 0xb
 1363 0145 1E000000 		.4byte	.LVL1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 53


 1364 0149 9B060000 		.4byte	0x69b
 1365 014d 0A       		.uleb128 0xa
 1366 014e 01       		.uleb128 0x1
 1367 014f 50       		.byte	0x50
 1368 0150 01       		.uleb128 0x1
 1369 0151 37       		.byte	0x37
 1370 0152 0A       		.uleb128 0xa
 1371 0153 01       		.uleb128 0x1
 1372 0154 51       		.byte	0x51
 1373 0155 01       		.uleb128 0x1
 1374 0156 37       		.byte	0x37
 1375 0157 00       		.byte	0
 1376 0158 00       		.byte	0
 1377 0159 08       		.uleb128 0x8
 1378 015a F9030000 		.4byte	.LASF25
 1379 015e 01       		.byte	0x1
 1380 015f B7       		.byte	0xb7
 1381 0160 00000000 		.4byte	.LFB2
 1382 0164 48000000 		.4byte	.LFE2-.LFB2
 1383 0168 01       		.uleb128 0x1
 1384 0169 9C       		.byte	0x9c
 1385 016a 99010000 		.4byte	0x199
 1386 016e 0C       		.uleb128 0xc
 1387 016f 47040000 		.4byte	.LASF28
 1388 0173 01       		.byte	0x1
 1389 0174 B9       		.byte	0xb9
 1390 0175 6B000000 		.4byte	0x6b
 1391 0179 00000000 		.4byte	.LLST0
 1392 017d 0D       		.uleb128 0xd
 1393 017e 06000000 		.4byte	.LVL2
 1394 0182 A6060000 		.4byte	0x6a6
 1395 0186 0D       		.uleb128 0xd
 1396 0187 36000000 		.4byte	.LVL4
 1397 018b B1060000 		.4byte	0x6b1
 1398 018f 0E       		.uleb128 0xe
 1399 0190 40000000 		.4byte	.LVL6
 1400 0194 BC060000 		.4byte	0x6bc
 1401 0198 00       		.byte	0
 1402 0199 08       		.uleb128 0x8
 1403 019a 59000000 		.4byte	.LASF26
 1404 019e 01       		.byte	0x1
 1405 019f 4C       		.byte	0x4c
 1406 01a0 00000000 		.4byte	.LFB0
 1407 01a4 1C000000 		.4byte	.LFE0-.LFB0
 1408 01a8 01       		.uleb128 0x1
 1409 01a9 9C       		.byte	0x9c
 1410 01aa C1010000 		.4byte	0x1c1
 1411 01ae 0D       		.uleb128 0xd
 1412 01af 0C000000 		.4byte	.LVL7
 1413 01b3 1C010000 		.4byte	0x11c
 1414 01b7 0E       		.uleb128 0xe
 1415 01b8 18000000 		.4byte	.LVL8
 1416 01bc 59010000 		.4byte	0x159
 1417 01c0 00       		.byte	0
 1418 01c1 08       		.uleb128 0x8
 1419 01c2 81040000 		.4byte	.LASF27
 1420 01c6 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 54


 1421 01c7 F0       		.byte	0xf0
 1422 01c8 00000000 		.4byte	.LFB3
 1423 01cc 48000000 		.4byte	.LFE3-.LFB3
 1424 01d0 01       		.uleb128 0x1
 1425 01d1 9C       		.byte	0x9c
 1426 01d2 01020000 		.4byte	0x201
 1427 01d6 0C       		.uleb128 0xc
 1428 01d7 47040000 		.4byte	.LASF28
 1429 01db 01       		.byte	0x1
 1430 01dc F2       		.byte	0xf2
 1431 01dd 6B000000 		.4byte	0x6b
 1432 01e1 13000000 		.4byte	.LLST1
 1433 01e5 0D       		.uleb128 0xd
 1434 01e6 06000000 		.4byte	.LVL9
 1435 01ea A6060000 		.4byte	0x6a6
 1436 01ee 0D       		.uleb128 0xd
 1437 01ef 16000000 		.4byte	.LVL11
 1438 01f3 C7060000 		.4byte	0x6c7
 1439 01f7 0E       		.uleb128 0xe
 1440 01f8 3C000000 		.4byte	.LVL13
 1441 01fc BC060000 		.4byte	0x6bc
 1442 0200 00       		.byte	0
 1443 0201 0F       		.uleb128 0xf
 1444 0202 A2010000 		.4byte	.LASF43
 1445 0206 01       		.byte	0x1
 1446 0207 2701     		.2byte	0x127
 1447 0209 6B000000 		.4byte	0x6b
 1448 020d 00000000 		.4byte	.LFB4
 1449 0211 04000000 		.4byte	.LFE4-.LFB4
 1450 0215 01       		.uleb128 0x1
 1451 0216 9C       		.byte	0x9c
 1452 0217 10       		.uleb128 0x10
 1453 0218 22040000 		.4byte	.LASF29
 1454 021c 01       		.byte	0x1
 1455 021d 6701     		.2byte	0x167
 1456 021f 00000000 		.4byte	.LFB6
 1457 0223 0C000000 		.4byte	.LFE6-.LFB6
 1458 0227 01       		.uleb128 0x1
 1459 0228 9C       		.byte	0x9c
 1460 0229 3C020000 		.4byte	0x23c
 1461 022d 11       		.uleb128 0x11
 1462 022e B7020000 		.4byte	.LASF37
 1463 0232 01       		.byte	0x1
 1464 0233 6701     		.2byte	0x167
 1465 0235 6B000000 		.4byte	0x6b
 1466 0239 01       		.uleb128 0x1
 1467 023a 50       		.byte	0x50
 1468 023b 00       		.byte	0
 1469 023c 12       		.uleb128 0x12
 1470 023d E0000000 		.4byte	0xe0
 1471 0241 00000000 		.4byte	.LFB7
 1472 0245 0C000000 		.4byte	.LFE7-.LFB7
 1473 0249 01       		.uleb128 0x1
 1474 024a 9C       		.byte	0x9c
 1475 024b 57020000 		.4byte	0x257
 1476 024f 13       		.uleb128 0x13
 1477 0250 F1000000 		.4byte	0xf1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 55


 1478 0254 01       		.uleb128 0x1
 1479 0255 50       		.byte	0x50
 1480 0256 00       		.byte	0
 1481 0257 12       		.uleb128 0x12
 1482 0258 FE000000 		.4byte	0xfe
 1483 025c 00000000 		.4byte	.LFB8
 1484 0260 10000000 		.4byte	.LFE8-.LFB8
 1485 0264 01       		.uleb128 0x1
 1486 0265 9C       		.byte	0x9c
 1487 0266 74020000 		.4byte	0x274
 1488 026a 14       		.uleb128 0x14
 1489 026b 0F010000 		.4byte	0x10f
 1490 026f 26000000 		.4byte	.LLST2
 1491 0273 00       		.byte	0
 1492 0274 15       		.uleb128 0x15
 1493 0275 3A040000 		.4byte	.LASF31
 1494 0279 01       		.byte	0x1
 1495 027a 1402     		.2byte	0x214
 1496 027c 6B000000 		.4byte	0x6b
 1497 0280 00000000 		.4byte	.LFB9
 1498 0284 28000000 		.4byte	.LFE9-.LFB9
 1499 0288 01       		.uleb128 0x1
 1500 0289 9C       		.byte	0x9c
 1501 028a AD020000 		.4byte	0x2ad
 1502 028e 16       		.uleb128 0x16
 1503 028f F2030000 		.4byte	.LASF22
 1504 0293 01       		.byte	0x1
 1505 0294 1602     		.2byte	0x216
 1506 0296 6B000000 		.4byte	0x6b
 1507 029a 3E000000 		.4byte	.LLST3
 1508 029e 17       		.uleb128 0x17
 1509 029f 4B030000 		.4byte	.LASF30
 1510 02a3 01       		.byte	0x1
 1511 02a4 1702     		.2byte	0x217
 1512 02a6 6B000000 		.4byte	0x6b
 1513 02aa 01       		.uleb128 0x1
 1514 02ab 53       		.byte	0x53
 1515 02ac 00       		.byte	0
 1516 02ad 15       		.uleb128 0x15
 1517 02ae 05020000 		.4byte	.LASF32
 1518 02b2 01       		.byte	0x1
 1519 02b3 7A02     		.2byte	0x27a
 1520 02b5 77000000 		.4byte	0x77
 1521 02b9 00000000 		.4byte	.LFB10
 1522 02bd 1C000000 		.4byte	.LFE10-.LFB10
 1523 02c1 01       		.uleb128 0x1
 1524 02c2 9C       		.byte	0x9c
 1525 02c3 04030000 		.4byte	0x304
 1526 02c7 18       		.uleb128 0x18
 1527 02c8 FE000000 		.4byte	0xfe
 1528 02cc 00000000 		.4byte	.LBB6
 1529 02d0 00000000 		.4byte	.Ldebug_ranges0+0
 1530 02d4 01       		.byte	0x1
 1531 02d5 8602     		.2byte	0x286
 1532 02d7 E7020000 		.4byte	0x2e7
 1533 02db 19       		.uleb128 0x19
 1534 02dc 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 56


 1535 02e0 1A       		.uleb128 0x1a
 1536 02e1 0F010000 		.4byte	0x10f
 1537 02e5 00       		.byte	0
 1538 02e6 00       		.byte	0
 1539 02e7 1B       		.uleb128 0x1b
 1540 02e8 E0000000 		.4byte	0xe0
 1541 02ec 02000000 		.4byte	.LBB9
 1542 02f0 18000000 		.4byte	.Ldebug_ranges0+0x18
 1543 02f4 01       		.byte	0x1
 1544 02f5 8602     		.2byte	0x286
 1545 02f7 19       		.uleb128 0x19
 1546 02f8 18000000 		.4byte	.Ldebug_ranges0+0x18
 1547 02fc 1A       		.uleb128 0x1a
 1548 02fd F1000000 		.4byte	0xf1
 1549 0301 00       		.byte	0
 1550 0302 00       		.byte	0
 1551 0303 00       		.byte	0
 1552 0304 15       		.uleb128 0x15
 1553 0305 65040000 		.4byte	.LASF33
 1554 0309 01       		.byte	0x1
 1555 030a AB02     		.2byte	0x2ab
 1556 030c 6B000000 		.4byte	0x6b
 1557 0310 00000000 		.4byte	.LFB11
 1558 0314 10000000 		.4byte	.LFE11-.LFB11
 1559 0318 01       		.uleb128 0x1
 1560 0319 9C       		.byte	0x9c
 1561 031a 2F030000 		.4byte	0x32f
 1562 031e 16       		.uleb128 0x16
 1563 031f 87020000 		.4byte	.LASF34
 1564 0323 01       		.byte	0x1
 1565 0324 AE02     		.2byte	0x2ae
 1566 0326 6B000000 		.4byte	0x6b
 1567 032a 5D000000 		.4byte	.LLST4
 1568 032e 00       		.byte	0
 1569 032f 10       		.uleb128 0x10
 1570 0330 A0040000 		.4byte	.LASF35
 1571 0334 01       		.byte	0x1
 1572 0335 F502     		.2byte	0x2f5
 1573 0337 00000000 		.4byte	.LFB12
 1574 033b 24000000 		.4byte	.LFE12-.LFB12
 1575 033f 01       		.uleb128 0x1
 1576 0340 9C       		.byte	0x9c
 1577 0341 68030000 		.4byte	0x368
 1578 0345 16       		.uleb128 0x16
 1579 0346 47040000 		.4byte	.LASF28
 1580 034a 01       		.byte	0x1
 1581 034b F702     		.2byte	0x2f7
 1582 034d 6B000000 		.4byte	0x6b
 1583 0351 79000000 		.4byte	.LLST5
 1584 0355 0D       		.uleb128 0xd
 1585 0356 06000000 		.4byte	.LVL24
 1586 035a A6060000 		.4byte	0x6a6
 1587 035e 0E       		.uleb128 0xe
 1588 035f 20000000 		.4byte	.LVL25
 1589 0363 BC060000 		.4byte	0x6bc
 1590 0367 00       		.byte	0
 1591 0368 10       		.uleb128 0x10
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 57


 1592 0369 25030000 		.4byte	.LASF36
 1593 036d 01       		.byte	0x1
 1594 036e 5903     		.2byte	0x359
 1595 0370 00000000 		.4byte	.LFB14
 1596 0374 0C000000 		.4byte	.LFE14-.LFB14
 1597 0378 01       		.uleb128 0x1
 1598 0379 9C       		.byte	0x9c
 1599 037a 8D030000 		.4byte	0x38d
 1600 037e 11       		.uleb128 0x11
 1601 037f 1D030000 		.4byte	.LASF38
 1602 0383 01       		.byte	0x1
 1603 0384 5903     		.2byte	0x359
 1604 0386 6B000000 		.4byte	0x6b
 1605 038a 01       		.uleb128 0x1
 1606 038b 50       		.byte	0x50
 1607 038c 00       		.byte	0
 1608 038d 10       		.uleb128 0x10
 1609 038e 38030000 		.4byte	.LASF39
 1610 0392 01       		.byte	0x1
 1611 0393 6D03     		.2byte	0x36d
 1612 0395 00000000 		.4byte	.LFB15
 1613 0399 0C000000 		.4byte	.LFE15-.LFB15
 1614 039d 01       		.uleb128 0x1
 1615 039e 9C       		.byte	0x9c
 1616 039f B2030000 		.4byte	0x3b2
 1617 03a3 11       		.uleb128 0x11
 1618 03a4 1D030000 		.4byte	.LASF38
 1619 03a8 01       		.byte	0x1
 1620 03a9 6D03     		.2byte	0x36d
 1621 03ab 6B000000 		.4byte	0x6b
 1622 03af 01       		.uleb128 0x1
 1623 03b0 50       		.byte	0x50
 1624 03b1 00       		.byte	0
 1625 03b2 10       		.uleb128 0x10
 1626 03b3 64000000 		.4byte	.LASF40
 1627 03b7 01       		.byte	0x1
 1628 03b8 8C03     		.2byte	0x38c
 1629 03ba 00000000 		.4byte	.LFB16
 1630 03be 0C000000 		.4byte	.LFE16-.LFB16
 1631 03c2 01       		.uleb128 0x1
 1632 03c3 9C       		.byte	0x9c
 1633 03c4 D7030000 		.4byte	0x3d7
 1634 03c8 11       		.uleb128 0x11
 1635 03c9 B7020000 		.4byte	.LASF37
 1636 03cd 01       		.byte	0x1
 1637 03ce 8C03     		.2byte	0x38c
 1638 03d0 6B000000 		.4byte	0x6b
 1639 03d4 01       		.uleb128 0x1
 1640 03d5 50       		.byte	0x50
 1641 03d6 00       		.byte	0
 1642 03d7 10       		.uleb128 0x10
 1643 03d8 BE030000 		.4byte	.LASF41
 1644 03dc 01       		.byte	0x1
 1645 03dd AE03     		.2byte	0x3ae
 1646 03df 00000000 		.4byte	.LFB17
 1647 03e3 58000000 		.4byte	.LFE17-.LFB17
 1648 03e7 01       		.uleb128 0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 58


 1649 03e8 9C       		.byte	0x9c
 1650 03e9 FC030000 		.4byte	0x3fc
 1651 03ed 11       		.uleb128 0x11
 1652 03ee 1D000000 		.4byte	.LASF42
 1653 03f2 01       		.byte	0x1
 1654 03f3 AE03     		.2byte	0x3ae
 1655 03f5 6B000000 		.4byte	0x6b
 1656 03f9 01       		.uleb128 0x1
 1657 03fa 50       		.byte	0x50
 1658 03fb 00       		.byte	0
 1659 03fc 0F       		.uleb128 0xf
 1660 03fd D4020000 		.4byte	.LASF44
 1661 0401 01       		.byte	0x1
 1662 0402 EB03     		.2byte	0x3eb
 1663 0404 6B000000 		.4byte	0x6b
 1664 0408 00000000 		.4byte	.LFB18
 1665 040c 0C000000 		.4byte	.LFE18-.LFB18
 1666 0410 01       		.uleb128 0x1
 1667 0411 9C       		.byte	0x9c
 1668 0412 10       		.uleb128 0x10
 1669 0413 7F010000 		.4byte	.LASF45
 1670 0417 01       		.byte	0x1
 1671 0418 1104     		.2byte	0x411
 1672 041a 00000000 		.4byte	.LFB19
 1673 041e 64000000 		.4byte	.LFE19-.LFB19
 1674 0422 01       		.uleb128 0x1
 1675 0423 9C       		.byte	0x9c
 1676 0424 57040000 		.4byte	0x457
 1677 0428 11       		.uleb128 0x11
 1678 0429 1D000000 		.4byte	.LASF42
 1679 042d 01       		.byte	0x1
 1680 042e 1104     		.2byte	0x411
 1681 0430 6B000000 		.4byte	0x6b
 1682 0434 01       		.uleb128 0x1
 1683 0435 50       		.byte	0x50
 1684 0436 16       		.uleb128 0x16
 1685 0437 51020000 		.4byte	.LASF46
 1686 043b 01       		.byte	0x1
 1687 043c 1804     		.2byte	0x418
 1688 043e 6B000000 		.4byte	0x6b
 1689 0442 8C000000 		.4byte	.LLST6
 1690 0446 16       		.uleb128 0x16
 1691 0447 D5010000 		.4byte	.LASF47
 1692 044b 01       		.byte	0x1
 1693 044c 1904     		.2byte	0x419
 1694 044e 6B000000 		.4byte	0x6b
 1695 0452 08010000 		.4byte	.LLST7
 1696 0456 00       		.byte	0
 1697 0457 10       		.uleb128 0x10
 1698 0458 91040000 		.4byte	.LASF48
 1699 045c 01       		.byte	0x1
 1700 045d 7904     		.2byte	0x479
 1701 045f 00000000 		.4byte	.LFB20
 1702 0463 20000000 		.4byte	.LFE20-.LFB20
 1703 0467 01       		.uleb128 0x1
 1704 0468 9C       		.byte	0x9c
 1705 0469 97040000 		.4byte	0x497
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 59


 1706 046d 1C       		.uleb128 0x1c
 1707 046e 3B000000 		.4byte	.LASF49
 1708 0472 01       		.byte	0x1
 1709 0473 7904     		.2byte	0x479
 1710 0475 97040000 		.4byte	0x497
 1711 0479 1B010000 		.4byte	.LLST8
 1712 047d 16       		.uleb128 0x16
 1713 047e AE020000 		.4byte	.LASF50
 1714 0482 01       		.byte	0x1
 1715 0483 7B04     		.2byte	0x47b
 1716 0485 77000000 		.4byte	0x77
 1717 0489 47010000 		.4byte	.LLST9
 1718 048d 0D       		.uleb128 0xd
 1719 048e 18000000 		.4byte	.LVL44
 1720 0492 12040000 		.4byte	0x412
 1721 0496 00       		.byte	0
 1722 0497 1D       		.uleb128 0x1d
 1723 0498 04       		.byte	0x4
 1724 0499 9D040000 		.4byte	0x49d
 1725 049d 1E       		.uleb128 0x1e
 1726 049e 9D000000 		.4byte	0x9d
 1727 04a2 10       		.uleb128 0x10
 1728 04a3 62020000 		.4byte	.LASF51
 1729 04a7 01       		.byte	0x1
 1730 04a8 A704     		.2byte	0x4a7
 1731 04aa 00000000 		.4byte	.LFB21
 1732 04ae 24000000 		.4byte	.LFE21-.LFB21
 1733 04b2 01       		.uleb128 0x1
 1734 04b3 9C       		.byte	0x9c
 1735 04b4 F2040000 		.4byte	0x4f2
 1736 04b8 1C       		.uleb128 0x1c
 1737 04b9 3B000000 		.4byte	.LASF49
 1738 04bd 01       		.byte	0x1
 1739 04be A704     		.2byte	0x4a7
 1740 04c0 F2040000 		.4byte	0x4f2
 1741 04c4 7C010000 		.4byte	.LLST10
 1742 04c8 1C       		.uleb128 0x1c
 1743 04c9 E8030000 		.4byte	.LASF52
 1744 04cd 01       		.byte	0x1
 1745 04ce A704     		.2byte	0x4a7
 1746 04d0 6B000000 		.4byte	0x6b
 1747 04d4 9D010000 		.4byte	.LLST11
 1748 04d8 16       		.uleb128 0x16
 1749 04d9 AE020000 		.4byte	.LASF50
 1750 04dd 01       		.byte	0x1
 1751 04de AA04     		.2byte	0x4aa
 1752 04e0 6B000000 		.4byte	0x6b
 1753 04e4 BE010000 		.4byte	.LLST12
 1754 04e8 0D       		.uleb128 0xd
 1755 04e9 1A000000 		.4byte	.LVL51
 1756 04ed 12040000 		.4byte	0x412
 1757 04f1 00       		.byte	0
 1758 04f2 1D       		.uleb128 0x1d
 1759 04f3 04       		.byte	0x4
 1760 04f4 F8040000 		.4byte	0x4f8
 1761 04f8 1E       		.uleb128 0x1e
 1762 04f9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 60


 1763 04fd 10       		.uleb128 0x10
 1764 04fe 32020000 		.4byte	.LASF53
 1765 0502 01       		.byte	0x1
 1766 0503 CE04     		.2byte	0x4ce
 1767 0505 00000000 		.4byte	.LFB22
 1768 0509 24000000 		.4byte	.LFE22-.LFB22
 1769 050d 01       		.uleb128 0x1
 1770 050e 9C       		.byte	0x9c
 1771 050f 4F050000 		.4byte	0x54f
 1772 0513 1C       		.uleb128 0x1c
 1773 0514 1D000000 		.4byte	.LASF42
 1774 0518 01       		.byte	0x1
 1775 0519 CE04     		.2byte	0x4ce
 1776 051b 6B000000 		.4byte	0x6b
 1777 051f F8010000 		.4byte	.LLST13
 1778 0523 0D       		.uleb128 0xd
 1779 0524 0C000000 		.4byte	.LVL54
 1780 0528 12040000 		.4byte	0x412
 1781 052c 09       		.uleb128 0x9
 1782 052d 12000000 		.4byte	.LVL55
 1783 0531 12040000 		.4byte	0x412
 1784 0535 3F050000 		.4byte	0x53f
 1785 0539 0A       		.uleb128 0xa
 1786 053a 01       		.uleb128 0x1
 1787 053b 50       		.byte	0x50
 1788 053c 01       		.uleb128 0x1
 1789 053d 3D       		.byte	0x3d
 1790 053e 00       		.byte	0
 1791 053f 1F       		.uleb128 0x1f
 1792 0540 1C000000 		.4byte	.LVL56
 1793 0544 12040000 		.4byte	0x412
 1794 0548 0A       		.uleb128 0xa
 1795 0549 01       		.uleb128 0x1
 1796 054a 50       		.byte	0x50
 1797 054b 01       		.uleb128 0x1
 1798 054c 3A       		.byte	0x3a
 1799 054d 00       		.byte	0
 1800 054e 00       		.byte	0
 1801 054f 15       		.uleb128 0x15
 1802 0550 96030000 		.4byte	.LASF54
 1803 0554 01       		.byte	0x1
 1804 0555 F904     		.2byte	0x4f9
 1805 0557 6B000000 		.4byte	0x6b
 1806 055b 00000000 		.4byte	.LFB23
 1807 055f 38000000 		.4byte	.LFE23-.LFB23
 1808 0563 01       		.uleb128 0x1
 1809 0564 9C       		.byte	0x9c
 1810 0565 7A050000 		.4byte	0x57a
 1811 0569 16       		.uleb128 0x16
 1812 056a 87020000 		.4byte	.LASF34
 1813 056e 01       		.byte	0x1
 1814 056f FC04     		.2byte	0x4fc
 1815 0571 6B000000 		.4byte	0x6b
 1816 0575 24020000 		.4byte	.LLST14
 1817 0579 00       		.byte	0
 1818 057a 10       		.uleb128 0x10
 1819 057b 1F020000 		.4byte	.LASF55
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 61


 1820 057f 01       		.byte	0x1
 1821 0580 4A05     		.2byte	0x54a
 1822 0582 00000000 		.4byte	.LFB24
 1823 0586 40000000 		.4byte	.LFE24-.LFB24
 1824 058a 01       		.uleb128 0x1
 1825 058b 9C       		.byte	0x9c
 1826 058c B3050000 		.4byte	0x5b3
 1827 0590 16       		.uleb128 0x16
 1828 0591 47040000 		.4byte	.LASF28
 1829 0595 01       		.byte	0x1
 1830 0596 4C05     		.2byte	0x54c
 1831 0598 6B000000 		.4byte	0x6b
 1832 059c 42020000 		.4byte	.LLST15
 1833 05a0 0D       		.uleb128 0xd
 1834 05a1 06000000 		.4byte	.LVL60
 1835 05a5 A6060000 		.4byte	0x6a6
 1836 05a9 0D       		.uleb128 0xd
 1837 05aa 1C000000 		.4byte	.LVL61
 1838 05ae BC060000 		.4byte	0x6bc
 1839 05b2 00       		.byte	0
 1840 05b3 10       		.uleb128 0x10
 1841 05b4 D9030000 		.4byte	.LASF56
 1842 05b8 01       		.byte	0x1
 1843 05b9 A005     		.2byte	0x5a0
 1844 05bb 00000000 		.4byte	.LFB25
 1845 05bf 58000000 		.4byte	.LFE25-.LFB25
 1846 05c3 01       		.uleb128 0x1
 1847 05c4 9C       		.byte	0x9c
 1848 05c5 02060000 		.4byte	0x602
 1849 05c9 1C       		.uleb128 0x1c
 1850 05ca FD010000 		.4byte	.LASF57
 1851 05ce 01       		.byte	0x1
 1852 05cf A005     		.2byte	0x5a0
 1853 05d1 6B000000 		.4byte	0x6b
 1854 05d5 55020000 		.4byte	.LLST16
 1855 05d9 19       		.uleb128 0x19
 1856 05da 30000000 		.4byte	.Ldebug_ranges0+0x30
 1857 05de 16       		.uleb128 0x16
 1858 05df 00030000 		.4byte	.LASF58
 1859 05e3 01       		.byte	0x1
 1860 05e4 A805     		.2byte	0x5a8
 1861 05e6 6B000000 		.4byte	0x6b
 1862 05ea 9A020000 		.4byte	.LLST17
 1863 05ee 17       		.uleb128 0x17
 1864 05ef 36010000 		.4byte	.LASF59
 1865 05f3 01       		.byte	0x1
 1866 05f4 D005     		.2byte	0x5d0
 1867 05f6 6B000000 		.4byte	0x6b
 1868 05fa 05       		.uleb128 0x5
 1869 05fb 03       		.byte	0x3
 1870 05fc 03000000 		.4byte	txPeriod.5131
 1871 0600 00       		.byte	0
 1872 0601 00       		.byte	0
 1873 0602 20       		.uleb128 0x20
 1874 0603 BE020000 		.4byte	.LASF73
 1875 0607 01       		.byte	0x1
 1876 0608 2406     		.2byte	0x624
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 62


 1877 060a 01       		.byte	0x1
 1878 060b 1C060000 		.4byte	0x61c
 1879 060f 21       		.uleb128 0x21
 1880 0610 C2010000 		.4byte	.LASF74
 1881 0614 01       		.byte	0x1
 1882 0615 2406     		.2byte	0x624
 1883 0617 6B000000 		.4byte	0x6b
 1884 061b 00       		.byte	0
 1885 061c 12       		.uleb128 0x12
 1886 061d 02060000 		.4byte	0x602
 1887 0621 00000000 		.4byte	.LFB26
 1888 0625 02000000 		.4byte	.LFE26-.LFB26
 1889 0629 01       		.uleb128 0x1
 1890 062a 9C       		.byte	0x9c
 1891 062b 37060000 		.4byte	0x637
 1892 062f 22       		.uleb128 0x22
 1893 0630 0F060000 		.4byte	0x60f
 1894 0634 01       		.uleb128 0x1
 1895 0635 50       		.byte	0x50
 1896 0636 00       		.byte	0
 1897 0637 23       		.uleb128 0x23
 1898 0638 58040000 		.4byte	.LASF60
 1899 063c 01       		.byte	0x1
 1900 063d 1B       		.byte	0x1b
 1901 063e 6B000000 		.4byte	0x6b
 1902 0642 05       		.uleb128 0x5
 1903 0643 03       		.byte	0x3
 1904 0644 00000000 		.4byte	UART_initVar
 1905 0648 24       		.uleb128 0x24
 1906 0649 BC000000 		.4byte	0xbc
 1907 064d 58060000 		.4byte	0x658
 1908 0651 25       		.uleb128 0x25
 1909 0652 D9000000 		.4byte	0xd9
 1910 0656 07       		.byte	0x7
 1911 0657 00       		.byte	0
 1912 0658 23       		.uleb128 0x23
 1913 0659 EF010000 		.4byte	.LASF61
 1914 065d 01       		.byte	0x1
 1915 065e 1E       		.byte	0x1e
 1916 065f 69060000 		.4byte	0x669
 1917 0663 05       		.uleb128 0x5
 1918 0664 03       		.byte	0x3
 1919 0665 00000000 		.4byte	UART_txBuffer
 1920 0669 05       		.uleb128 0x5
 1921 066a 48060000 		.4byte	0x648
 1922 066e 23       		.uleb128 0x23
 1923 066f 7C000000 		.4byte	.LASF62
 1924 0673 01       		.byte	0x1
 1925 0674 1F       		.byte	0x1f
 1926 0675 BC000000 		.4byte	0xbc
 1927 0679 05       		.uleb128 0x5
 1928 067a 03       		.byte	0x3
 1929 067b 00000000 		.4byte	UART_txBufferRead
 1930 067f 23       		.uleb128 0x23
 1931 0680 28000000 		.4byte	.LASF63
 1932 0684 01       		.byte	0x1
 1933 0685 20       		.byte	0x20
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 63


 1934 0686 6B000000 		.4byte	0x6b
 1935 068a 05       		.uleb128 0x5
 1936 068b 03       		.byte	0x3
 1937 068c 00000000 		.4byte	UART_txBufferWrite
 1938 0690 26       		.uleb128 0x26
 1939 0691 9F020000 		.4byte	.LASF64
 1940 0695 9F020000 		.4byte	.LASF64
 1941 0699 03       		.byte	0x3
 1942 069a 88       		.byte	0x88
 1943 069b 26       		.uleb128 0x26
 1944 069c 67030000 		.4byte	.LASF65
 1945 06a0 67030000 		.4byte	.LASF65
 1946 06a4 03       		.byte	0x3
 1947 06a5 8B       		.byte	0x8b
 1948 06a6 26       		.uleb128 0x26
 1949 06a7 70020000 		.4byte	.LASF66
 1950 06ab 70020000 		.4byte	.LASF66
 1951 06af 03       		.byte	0x3
 1952 06b0 7D       		.byte	0x7d
 1953 06b1 26       		.uleb128 0x26
 1954 06b2 E6020000 		.4byte	.LASF67
 1955 06b6 E6020000 		.4byte	.LASF67
 1956 06ba 04       		.byte	0x4
 1957 06bb 27       		.byte	0x27
 1958 06bc 26       		.uleb128 0x26
 1959 06bd 07000000 		.4byte	.LASF68
 1960 06c1 07000000 		.4byte	.LASF68
 1961 06c5 03       		.byte	0x3
 1962 06c6 7E       		.byte	0x7e
 1963 06c7 26       		.uleb128 0x26
 1964 06c8 54030000 		.4byte	.LASF69
 1965 06cc 54030000 		.4byte	.LASF69
 1966 06d0 04       		.byte	0x4
 1967 06d1 28       		.byte	0x28
 1968 06d2 00       		.byte	0
 1969              		.section	.debug_abbrev,"",%progbits
 1970              	.Ldebug_abbrev0:
 1971 0000 01       		.uleb128 0x1
 1972 0001 11       		.uleb128 0x11
 1973 0002 01       		.byte	0x1
 1974 0003 25       		.uleb128 0x25
 1975 0004 0E       		.uleb128 0xe
 1976 0005 13       		.uleb128 0x13
 1977 0006 0B       		.uleb128 0xb
 1978 0007 03       		.uleb128 0x3
 1979 0008 0E       		.uleb128 0xe
 1980 0009 1B       		.uleb128 0x1b
 1981 000a 0E       		.uleb128 0xe
 1982 000b 55       		.uleb128 0x55
 1983 000c 17       		.uleb128 0x17
 1984 000d 11       		.uleb128 0x11
 1985 000e 01       		.uleb128 0x1
 1986 000f 10       		.uleb128 0x10
 1987 0010 17       		.uleb128 0x17
 1988 0011 00       		.byte	0
 1989 0012 00       		.byte	0
 1990 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 64


 1991 0014 24       		.uleb128 0x24
 1992 0015 00       		.byte	0
 1993 0016 0B       		.uleb128 0xb
 1994 0017 0B       		.uleb128 0xb
 1995 0018 3E       		.uleb128 0x3e
 1996 0019 0B       		.uleb128 0xb
 1997 001a 03       		.uleb128 0x3
 1998 001b 0E       		.uleb128 0xe
 1999 001c 00       		.byte	0
 2000 001d 00       		.byte	0
 2001 001e 03       		.uleb128 0x3
 2002 001f 24       		.uleb128 0x24
 2003 0020 00       		.byte	0
 2004 0021 0B       		.uleb128 0xb
 2005 0022 0B       		.uleb128 0xb
 2006 0023 3E       		.uleb128 0x3e
 2007 0024 0B       		.uleb128 0xb
 2008 0025 03       		.uleb128 0x3
 2009 0026 08       		.uleb128 0x8
 2010 0027 00       		.byte	0
 2011 0028 00       		.byte	0
 2012 0029 04       		.uleb128 0x4
 2013 002a 16       		.uleb128 0x16
 2014 002b 00       		.byte	0
 2015 002c 03       		.uleb128 0x3
 2016 002d 0E       		.uleb128 0xe
 2017 002e 3A       		.uleb128 0x3a
 2018 002f 0B       		.uleb128 0xb
 2019 0030 3B       		.uleb128 0x3b
 2020 0031 05       		.uleb128 0x5
 2021 0032 49       		.uleb128 0x49
 2022 0033 13       		.uleb128 0x13
 2023 0034 00       		.byte	0
 2024 0035 00       		.byte	0
 2025 0036 05       		.uleb128 0x5
 2026 0037 35       		.uleb128 0x35
 2027 0038 00       		.byte	0
 2028 0039 49       		.uleb128 0x49
 2029 003a 13       		.uleb128 0x13
 2030 003b 00       		.byte	0
 2031 003c 00       		.byte	0
 2032 003d 06       		.uleb128 0x6
 2033 003e 2E       		.uleb128 0x2e
 2034 003f 01       		.byte	0x1
 2035 0040 3F       		.uleb128 0x3f
 2036 0041 19       		.uleb128 0x19
 2037 0042 03       		.uleb128 0x3
 2038 0043 0E       		.uleb128 0xe
 2039 0044 3A       		.uleb128 0x3a
 2040 0045 0B       		.uleb128 0xb
 2041 0046 3B       		.uleb128 0x3b
 2042 0047 05       		.uleb128 0x5
 2043 0048 27       		.uleb128 0x27
 2044 0049 19       		.uleb128 0x19
 2045 004a 49       		.uleb128 0x49
 2046 004b 13       		.uleb128 0x13
 2047 004c 20       		.uleb128 0x20
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 65


 2048 004d 0B       		.uleb128 0xb
 2049 004e 01       		.uleb128 0x1
 2050 004f 13       		.uleb128 0x13
 2051 0050 00       		.byte	0
 2052 0051 00       		.byte	0
 2053 0052 07       		.uleb128 0x7
 2054 0053 34       		.uleb128 0x34
 2055 0054 00       		.byte	0
 2056 0055 03       		.uleb128 0x3
 2057 0056 0E       		.uleb128 0xe
 2058 0057 3A       		.uleb128 0x3a
 2059 0058 0B       		.uleb128 0xb
 2060 0059 3B       		.uleb128 0x3b
 2061 005a 05       		.uleb128 0x5
 2062 005b 49       		.uleb128 0x49
 2063 005c 13       		.uleb128 0x13
 2064 005d 00       		.byte	0
 2065 005e 00       		.byte	0
 2066 005f 08       		.uleb128 0x8
 2067 0060 2E       		.uleb128 0x2e
 2068 0061 01       		.byte	0x1
 2069 0062 3F       		.uleb128 0x3f
 2070 0063 19       		.uleb128 0x19
 2071 0064 03       		.uleb128 0x3
 2072 0065 0E       		.uleb128 0xe
 2073 0066 3A       		.uleb128 0x3a
 2074 0067 0B       		.uleb128 0xb
 2075 0068 3B       		.uleb128 0x3b
 2076 0069 0B       		.uleb128 0xb
 2077 006a 27       		.uleb128 0x27
 2078 006b 19       		.uleb128 0x19
 2079 006c 11       		.uleb128 0x11
 2080 006d 01       		.uleb128 0x1
 2081 006e 12       		.uleb128 0x12
 2082 006f 06       		.uleb128 0x6
 2083 0070 40       		.uleb128 0x40
 2084 0071 18       		.uleb128 0x18
 2085 0072 9742     		.uleb128 0x2117
 2086 0074 19       		.uleb128 0x19
 2087 0075 01       		.uleb128 0x1
 2088 0076 13       		.uleb128 0x13
 2089 0077 00       		.byte	0
 2090 0078 00       		.byte	0
 2091 0079 09       		.uleb128 0x9
 2092 007a 898201   		.uleb128 0x4109
 2093 007d 01       		.byte	0x1
 2094 007e 11       		.uleb128 0x11
 2095 007f 01       		.uleb128 0x1
 2096 0080 31       		.uleb128 0x31
 2097 0081 13       		.uleb128 0x13
 2098 0082 01       		.uleb128 0x1
 2099 0083 13       		.uleb128 0x13
 2100 0084 00       		.byte	0
 2101 0085 00       		.byte	0
 2102 0086 0A       		.uleb128 0xa
 2103 0087 8A8201   		.uleb128 0x410a
 2104 008a 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 66


 2105 008b 02       		.uleb128 0x2
 2106 008c 18       		.uleb128 0x18
 2107 008d 9142     		.uleb128 0x2111
 2108 008f 18       		.uleb128 0x18
 2109 0090 00       		.byte	0
 2110 0091 00       		.byte	0
 2111 0092 0B       		.uleb128 0xb
 2112 0093 898201   		.uleb128 0x4109
 2113 0096 01       		.byte	0x1
 2114 0097 11       		.uleb128 0x11
 2115 0098 01       		.uleb128 0x1
 2116 0099 31       		.uleb128 0x31
 2117 009a 13       		.uleb128 0x13
 2118 009b 00       		.byte	0
 2119 009c 00       		.byte	0
 2120 009d 0C       		.uleb128 0xc
 2121 009e 34       		.uleb128 0x34
 2122 009f 00       		.byte	0
 2123 00a0 03       		.uleb128 0x3
 2124 00a1 0E       		.uleb128 0xe
 2125 00a2 3A       		.uleb128 0x3a
 2126 00a3 0B       		.uleb128 0xb
 2127 00a4 3B       		.uleb128 0x3b
 2128 00a5 0B       		.uleb128 0xb
 2129 00a6 49       		.uleb128 0x49
 2130 00a7 13       		.uleb128 0x13
 2131 00a8 02       		.uleb128 0x2
 2132 00a9 17       		.uleb128 0x17
 2133 00aa 00       		.byte	0
 2134 00ab 00       		.byte	0
 2135 00ac 0D       		.uleb128 0xd
 2136 00ad 898201   		.uleb128 0x4109
 2137 00b0 00       		.byte	0
 2138 00b1 11       		.uleb128 0x11
 2139 00b2 01       		.uleb128 0x1
 2140 00b3 31       		.uleb128 0x31
 2141 00b4 13       		.uleb128 0x13
 2142 00b5 00       		.byte	0
 2143 00b6 00       		.byte	0
 2144 00b7 0E       		.uleb128 0xe
 2145 00b8 898201   		.uleb128 0x4109
 2146 00bb 00       		.byte	0
 2147 00bc 11       		.uleb128 0x11
 2148 00bd 01       		.uleb128 0x1
 2149 00be 9542     		.uleb128 0x2115
 2150 00c0 19       		.uleb128 0x19
 2151 00c1 31       		.uleb128 0x31
 2152 00c2 13       		.uleb128 0x13
 2153 00c3 00       		.byte	0
 2154 00c4 00       		.byte	0
 2155 00c5 0F       		.uleb128 0xf
 2156 00c6 2E       		.uleb128 0x2e
 2157 00c7 00       		.byte	0
 2158 00c8 3F       		.uleb128 0x3f
 2159 00c9 19       		.uleb128 0x19
 2160 00ca 03       		.uleb128 0x3
 2161 00cb 0E       		.uleb128 0xe
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 67


 2162 00cc 3A       		.uleb128 0x3a
 2163 00cd 0B       		.uleb128 0xb
 2164 00ce 3B       		.uleb128 0x3b
 2165 00cf 05       		.uleb128 0x5
 2166 00d0 27       		.uleb128 0x27
 2167 00d1 19       		.uleb128 0x19
 2168 00d2 49       		.uleb128 0x49
 2169 00d3 13       		.uleb128 0x13
 2170 00d4 11       		.uleb128 0x11
 2171 00d5 01       		.uleb128 0x1
 2172 00d6 12       		.uleb128 0x12
 2173 00d7 06       		.uleb128 0x6
 2174 00d8 40       		.uleb128 0x40
 2175 00d9 18       		.uleb128 0x18
 2176 00da 9742     		.uleb128 0x2117
 2177 00dc 19       		.uleb128 0x19
 2178 00dd 00       		.byte	0
 2179 00de 00       		.byte	0
 2180 00df 10       		.uleb128 0x10
 2181 00e0 2E       		.uleb128 0x2e
 2182 00e1 01       		.byte	0x1
 2183 00e2 3F       		.uleb128 0x3f
 2184 00e3 19       		.uleb128 0x19
 2185 00e4 03       		.uleb128 0x3
 2186 00e5 0E       		.uleb128 0xe
 2187 00e6 3A       		.uleb128 0x3a
 2188 00e7 0B       		.uleb128 0xb
 2189 00e8 3B       		.uleb128 0x3b
 2190 00e9 05       		.uleb128 0x5
 2191 00ea 27       		.uleb128 0x27
 2192 00eb 19       		.uleb128 0x19
 2193 00ec 11       		.uleb128 0x11
 2194 00ed 01       		.uleb128 0x1
 2195 00ee 12       		.uleb128 0x12
 2196 00ef 06       		.uleb128 0x6
 2197 00f0 40       		.uleb128 0x40
 2198 00f1 18       		.uleb128 0x18
 2199 00f2 9742     		.uleb128 0x2117
 2200 00f4 19       		.uleb128 0x19
 2201 00f5 01       		.uleb128 0x1
 2202 00f6 13       		.uleb128 0x13
 2203 00f7 00       		.byte	0
 2204 00f8 00       		.byte	0
 2205 00f9 11       		.uleb128 0x11
 2206 00fa 05       		.uleb128 0x5
 2207 00fb 00       		.byte	0
 2208 00fc 03       		.uleb128 0x3
 2209 00fd 0E       		.uleb128 0xe
 2210 00fe 3A       		.uleb128 0x3a
 2211 00ff 0B       		.uleb128 0xb
 2212 0100 3B       		.uleb128 0x3b
 2213 0101 05       		.uleb128 0x5
 2214 0102 49       		.uleb128 0x49
 2215 0103 13       		.uleb128 0x13
 2216 0104 02       		.uleb128 0x2
 2217 0105 18       		.uleb128 0x18
 2218 0106 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 68


 2219 0107 00       		.byte	0
 2220 0108 12       		.uleb128 0x12
 2221 0109 2E       		.uleb128 0x2e
 2222 010a 01       		.byte	0x1
 2223 010b 31       		.uleb128 0x31
 2224 010c 13       		.uleb128 0x13
 2225 010d 11       		.uleb128 0x11
 2226 010e 01       		.uleb128 0x1
 2227 010f 12       		.uleb128 0x12
 2228 0110 06       		.uleb128 0x6
 2229 0111 40       		.uleb128 0x40
 2230 0112 18       		.uleb128 0x18
 2231 0113 9742     		.uleb128 0x2117
 2232 0115 19       		.uleb128 0x19
 2233 0116 01       		.uleb128 0x1
 2234 0117 13       		.uleb128 0x13
 2235 0118 00       		.byte	0
 2236 0119 00       		.byte	0
 2237 011a 13       		.uleb128 0x13
 2238 011b 34       		.uleb128 0x34
 2239 011c 00       		.byte	0
 2240 011d 31       		.uleb128 0x31
 2241 011e 13       		.uleb128 0x13
 2242 011f 02       		.uleb128 0x2
 2243 0120 18       		.uleb128 0x18
 2244 0121 00       		.byte	0
 2245 0122 00       		.byte	0
 2246 0123 14       		.uleb128 0x14
 2247 0124 34       		.uleb128 0x34
 2248 0125 00       		.byte	0
 2249 0126 31       		.uleb128 0x31
 2250 0127 13       		.uleb128 0x13
 2251 0128 02       		.uleb128 0x2
 2252 0129 17       		.uleb128 0x17
 2253 012a 00       		.byte	0
 2254 012b 00       		.byte	0
 2255 012c 15       		.uleb128 0x15
 2256 012d 2E       		.uleb128 0x2e
 2257 012e 01       		.byte	0x1
 2258 012f 3F       		.uleb128 0x3f
 2259 0130 19       		.uleb128 0x19
 2260 0131 03       		.uleb128 0x3
 2261 0132 0E       		.uleb128 0xe
 2262 0133 3A       		.uleb128 0x3a
 2263 0134 0B       		.uleb128 0xb
 2264 0135 3B       		.uleb128 0x3b
 2265 0136 05       		.uleb128 0x5
 2266 0137 27       		.uleb128 0x27
 2267 0138 19       		.uleb128 0x19
 2268 0139 49       		.uleb128 0x49
 2269 013a 13       		.uleb128 0x13
 2270 013b 11       		.uleb128 0x11
 2271 013c 01       		.uleb128 0x1
 2272 013d 12       		.uleb128 0x12
 2273 013e 06       		.uleb128 0x6
 2274 013f 40       		.uleb128 0x40
 2275 0140 18       		.uleb128 0x18
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 69


 2276 0141 9742     		.uleb128 0x2117
 2277 0143 19       		.uleb128 0x19
 2278 0144 01       		.uleb128 0x1
 2279 0145 13       		.uleb128 0x13
 2280 0146 00       		.byte	0
 2281 0147 00       		.byte	0
 2282 0148 16       		.uleb128 0x16
 2283 0149 34       		.uleb128 0x34
 2284 014a 00       		.byte	0
 2285 014b 03       		.uleb128 0x3
 2286 014c 0E       		.uleb128 0xe
 2287 014d 3A       		.uleb128 0x3a
 2288 014e 0B       		.uleb128 0xb
 2289 014f 3B       		.uleb128 0x3b
 2290 0150 05       		.uleb128 0x5
 2291 0151 49       		.uleb128 0x49
 2292 0152 13       		.uleb128 0x13
 2293 0153 02       		.uleb128 0x2
 2294 0154 17       		.uleb128 0x17
 2295 0155 00       		.byte	0
 2296 0156 00       		.byte	0
 2297 0157 17       		.uleb128 0x17
 2298 0158 34       		.uleb128 0x34
 2299 0159 00       		.byte	0
 2300 015a 03       		.uleb128 0x3
 2301 015b 0E       		.uleb128 0xe
 2302 015c 3A       		.uleb128 0x3a
 2303 015d 0B       		.uleb128 0xb
 2304 015e 3B       		.uleb128 0x3b
 2305 015f 05       		.uleb128 0x5
 2306 0160 49       		.uleb128 0x49
 2307 0161 13       		.uleb128 0x13
 2308 0162 02       		.uleb128 0x2
 2309 0163 18       		.uleb128 0x18
 2310 0164 00       		.byte	0
 2311 0165 00       		.byte	0
 2312 0166 18       		.uleb128 0x18
 2313 0167 1D       		.uleb128 0x1d
 2314 0168 01       		.byte	0x1
 2315 0169 31       		.uleb128 0x31
 2316 016a 13       		.uleb128 0x13
 2317 016b 52       		.uleb128 0x52
 2318 016c 01       		.uleb128 0x1
 2319 016d 55       		.uleb128 0x55
 2320 016e 17       		.uleb128 0x17
 2321 016f 58       		.uleb128 0x58
 2322 0170 0B       		.uleb128 0xb
 2323 0171 59       		.uleb128 0x59
 2324 0172 05       		.uleb128 0x5
 2325 0173 01       		.uleb128 0x1
 2326 0174 13       		.uleb128 0x13
 2327 0175 00       		.byte	0
 2328 0176 00       		.byte	0
 2329 0177 19       		.uleb128 0x19
 2330 0178 0B       		.uleb128 0xb
 2331 0179 01       		.byte	0x1
 2332 017a 55       		.uleb128 0x55
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 70


 2333 017b 17       		.uleb128 0x17
 2334 017c 00       		.byte	0
 2335 017d 00       		.byte	0
 2336 017e 1A       		.uleb128 0x1a
 2337 017f 34       		.uleb128 0x34
 2338 0180 00       		.byte	0
 2339 0181 31       		.uleb128 0x31
 2340 0182 13       		.uleb128 0x13
 2341 0183 00       		.byte	0
 2342 0184 00       		.byte	0
 2343 0185 1B       		.uleb128 0x1b
 2344 0186 1D       		.uleb128 0x1d
 2345 0187 01       		.byte	0x1
 2346 0188 31       		.uleb128 0x31
 2347 0189 13       		.uleb128 0x13
 2348 018a 52       		.uleb128 0x52
 2349 018b 01       		.uleb128 0x1
 2350 018c 55       		.uleb128 0x55
 2351 018d 17       		.uleb128 0x17
 2352 018e 58       		.uleb128 0x58
 2353 018f 0B       		.uleb128 0xb
 2354 0190 59       		.uleb128 0x59
 2355 0191 05       		.uleb128 0x5
 2356 0192 00       		.byte	0
 2357 0193 00       		.byte	0
 2358 0194 1C       		.uleb128 0x1c
 2359 0195 05       		.uleb128 0x5
 2360 0196 00       		.byte	0
 2361 0197 03       		.uleb128 0x3
 2362 0198 0E       		.uleb128 0xe
 2363 0199 3A       		.uleb128 0x3a
 2364 019a 0B       		.uleb128 0xb
 2365 019b 3B       		.uleb128 0x3b
 2366 019c 05       		.uleb128 0x5
 2367 019d 49       		.uleb128 0x49
 2368 019e 13       		.uleb128 0x13
 2369 019f 02       		.uleb128 0x2
 2370 01a0 17       		.uleb128 0x17
 2371 01a1 00       		.byte	0
 2372 01a2 00       		.byte	0
 2373 01a3 1D       		.uleb128 0x1d
 2374 01a4 0F       		.uleb128 0xf
 2375 01a5 00       		.byte	0
 2376 01a6 0B       		.uleb128 0xb
 2377 01a7 0B       		.uleb128 0xb
 2378 01a8 49       		.uleb128 0x49
 2379 01a9 13       		.uleb128 0x13
 2380 01aa 00       		.byte	0
 2381 01ab 00       		.byte	0
 2382 01ac 1E       		.uleb128 0x1e
 2383 01ad 26       		.uleb128 0x26
 2384 01ae 00       		.byte	0
 2385 01af 49       		.uleb128 0x49
 2386 01b0 13       		.uleb128 0x13
 2387 01b1 00       		.byte	0
 2388 01b2 00       		.byte	0
 2389 01b3 1F       		.uleb128 0x1f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 71


 2390 01b4 898201   		.uleb128 0x4109
 2391 01b7 01       		.byte	0x1
 2392 01b8 11       		.uleb128 0x11
 2393 01b9 01       		.uleb128 0x1
 2394 01ba 9542     		.uleb128 0x2115
 2395 01bc 19       		.uleb128 0x19
 2396 01bd 31       		.uleb128 0x31
 2397 01be 13       		.uleb128 0x13
 2398 01bf 00       		.byte	0
 2399 01c0 00       		.byte	0
 2400 01c1 20       		.uleb128 0x20
 2401 01c2 2E       		.uleb128 0x2e
 2402 01c3 01       		.byte	0x1
 2403 01c4 3F       		.uleb128 0x3f
 2404 01c5 19       		.uleb128 0x19
 2405 01c6 03       		.uleb128 0x3
 2406 01c7 0E       		.uleb128 0xe
 2407 01c8 3A       		.uleb128 0x3a
 2408 01c9 0B       		.uleb128 0xb
 2409 01ca 3B       		.uleb128 0x3b
 2410 01cb 05       		.uleb128 0x5
 2411 01cc 27       		.uleb128 0x27
 2412 01cd 19       		.uleb128 0x19
 2413 01ce 20       		.uleb128 0x20
 2414 01cf 0B       		.uleb128 0xb
 2415 01d0 01       		.uleb128 0x1
 2416 01d1 13       		.uleb128 0x13
 2417 01d2 00       		.byte	0
 2418 01d3 00       		.byte	0
 2419 01d4 21       		.uleb128 0x21
 2420 01d5 05       		.uleb128 0x5
 2421 01d6 00       		.byte	0
 2422 01d7 03       		.uleb128 0x3
 2423 01d8 0E       		.uleb128 0xe
 2424 01d9 3A       		.uleb128 0x3a
 2425 01da 0B       		.uleb128 0xb
 2426 01db 3B       		.uleb128 0x3b
 2427 01dc 05       		.uleb128 0x5
 2428 01dd 49       		.uleb128 0x49
 2429 01de 13       		.uleb128 0x13
 2430 01df 00       		.byte	0
 2431 01e0 00       		.byte	0
 2432 01e1 22       		.uleb128 0x22
 2433 01e2 05       		.uleb128 0x5
 2434 01e3 00       		.byte	0
 2435 01e4 31       		.uleb128 0x31
 2436 01e5 13       		.uleb128 0x13
 2437 01e6 02       		.uleb128 0x2
 2438 01e7 18       		.uleb128 0x18
 2439 01e8 00       		.byte	0
 2440 01e9 00       		.byte	0
 2441 01ea 23       		.uleb128 0x23
 2442 01eb 34       		.uleb128 0x34
 2443 01ec 00       		.byte	0
 2444 01ed 03       		.uleb128 0x3
 2445 01ee 0E       		.uleb128 0xe
 2446 01ef 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 72


 2447 01f0 0B       		.uleb128 0xb
 2448 01f1 3B       		.uleb128 0x3b
 2449 01f2 0B       		.uleb128 0xb
 2450 01f3 49       		.uleb128 0x49
 2451 01f4 13       		.uleb128 0x13
 2452 01f5 3F       		.uleb128 0x3f
 2453 01f6 19       		.uleb128 0x19
 2454 01f7 02       		.uleb128 0x2
 2455 01f8 18       		.uleb128 0x18
 2456 01f9 00       		.byte	0
 2457 01fa 00       		.byte	0
 2458 01fb 24       		.uleb128 0x24
 2459 01fc 01       		.uleb128 0x1
 2460 01fd 01       		.byte	0x1
 2461 01fe 49       		.uleb128 0x49
 2462 01ff 13       		.uleb128 0x13
 2463 0200 01       		.uleb128 0x1
 2464 0201 13       		.uleb128 0x13
 2465 0202 00       		.byte	0
 2466 0203 00       		.byte	0
 2467 0204 25       		.uleb128 0x25
 2468 0205 21       		.uleb128 0x21
 2469 0206 00       		.byte	0
 2470 0207 49       		.uleb128 0x49
 2471 0208 13       		.uleb128 0x13
 2472 0209 2F       		.uleb128 0x2f
 2473 020a 0B       		.uleb128 0xb
 2474 020b 00       		.byte	0
 2475 020c 00       		.byte	0
 2476 020d 26       		.uleb128 0x26
 2477 020e 2E       		.uleb128 0x2e
 2478 020f 00       		.byte	0
 2479 0210 3F       		.uleb128 0x3f
 2480 0211 19       		.uleb128 0x19
 2481 0212 3C       		.uleb128 0x3c
 2482 0213 19       		.uleb128 0x19
 2483 0214 6E       		.uleb128 0x6e
 2484 0215 0E       		.uleb128 0xe
 2485 0216 03       		.uleb128 0x3
 2486 0217 0E       		.uleb128 0xe
 2487 0218 3A       		.uleb128 0x3a
 2488 0219 0B       		.uleb128 0xb
 2489 021a 3B       		.uleb128 0x3b
 2490 021b 0B       		.uleb128 0xb
 2491 021c 00       		.byte	0
 2492 021d 00       		.byte	0
 2493 021e 00       		.byte	0
 2494              		.section	.debug_loc,"",%progbits
 2495              	.Ldebug_loc0:
 2496              	.LLST0:
 2497 0000 08000000 		.4byte	.LVL3
 2498 0004 3C000000 		.4byte	.LVL5
 2499 0008 0100     		.2byte	0x1
 2500 000a 54       		.byte	0x54
 2501 000b 00000000 		.4byte	0
 2502 000f 00000000 		.4byte	0
 2503              	.LLST1:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 73


 2504 0013 08000000 		.4byte	.LVL10
 2505 0017 38000000 		.4byte	.LVL12
 2506 001b 0100     		.2byte	0x1
 2507 001d 54       		.byte	0x54
 2508 001e 00000000 		.4byte	0
 2509 0022 00000000 		.4byte	0
 2510              	.LLST2:
 2511 0026 04000000 		.4byte	.LVL16
 2512 002a 08000000 		.4byte	.LVL17
 2513 002e 0600     		.2byte	0x6
 2514 0030 70       		.byte	0x70
 2515 0031 00       		.sleb128 0
 2516 0032 08       		.byte	0x8
 2517 0033 7F       		.byte	0x7f
 2518 0034 1A       		.byte	0x1a
 2519 0035 9F       		.byte	0x9f
 2520 0036 00000000 		.4byte	0
 2521 003a 00000000 		.4byte	0
 2522              	.LLST3:
 2523 003e 00000000 		.4byte	.LVL18
 2524 0042 18000000 		.4byte	.LVL20
 2525 0046 0200     		.2byte	0x2
 2526 0048 30       		.byte	0x30
 2527 0049 9F       		.byte	0x9f
 2528 004a 18000000 		.4byte	.LVL20
 2529 004e 28000000 		.4byte	.LFE9
 2530 0052 0100     		.2byte	0x1
 2531 0054 50       		.byte	0x50
 2532 0055 00000000 		.4byte	0
 2533 0059 00000000 		.4byte	0
 2534              	.LLST4:
 2535 005d 04000000 		.4byte	.LVL22
 2536 0061 08000000 		.4byte	.LVL23
 2537 0065 0A00     		.2byte	0xa
 2538 0067 70       		.byte	0x70
 2539 0068 00       		.sleb128 0
 2540 0069 08       		.byte	0x8
 2541 006a 20       		.byte	0x20
 2542 006b 1A       		.byte	0x1a
 2543 006c 48       		.byte	0x48
 2544 006d 24       		.byte	0x24
 2545 006e 30       		.byte	0x30
 2546 006f 2E       		.byte	0x2e
 2547 0070 9F       		.byte	0x9f
 2548 0071 00000000 		.4byte	0
 2549 0075 00000000 		.4byte	0
 2550              	.LLST5:
 2551 0079 06000000 		.4byte	.LVL24
 2552 007d 1F000000 		.4byte	.LVL25-1
 2553 0081 0100     		.2byte	0x1
 2554 0083 50       		.byte	0x50
 2555 0084 00000000 		.4byte	0
 2556 0088 00000000 		.4byte	0
 2557              	.LLST6:
 2558 008c 06000000 		.4byte	.LVL31
 2559 0090 32000000 		.4byte	.LVL34
 2560 0094 0500     		.2byte	0x5
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 74


 2561 0096 03       		.byte	0x3
 2562 0097 00000000 		.4byte	UART_txBufferWrite
 2563 009b 34000000 		.4byte	.LVL35
 2564 009f 3C000000 		.4byte	.LVL36
 2565 00a3 0500     		.2byte	0x5
 2566 00a5 03       		.byte	0x3
 2567 00a6 00000000 		.4byte	UART_txBufferWrite
 2568 00aa 3C000000 		.4byte	.LVL36
 2569 00ae 3E000000 		.4byte	.LVL37
 2570 00b2 0100     		.2byte	0x1
 2571 00b4 53       		.byte	0x53
 2572 00b5 3E000000 		.4byte	.LVL37
 2573 00b9 40000000 		.4byte	.LVL38
 2574 00bd 0300     		.2byte	0x3
 2575 00bf 73       		.byte	0x73
 2576 00c0 01       		.sleb128 1
 2577 00c1 9F       		.byte	0x9f
 2578 00c2 40000000 		.4byte	.LVL38
 2579 00c6 44000000 		.4byte	.LVL39
 2580 00ca 0300     		.2byte	0x3
 2581 00cc 73       		.byte	0x73
 2582 00cd 00       		.sleb128 0
 2583 00ce 9F       		.byte	0x9f
 2584 00cf 46000000 		.4byte	.LVL40
 2585 00d3 64000000 		.4byte	.LFE19
 2586 00d7 2700     		.2byte	0x27
 2587 00d9 30       		.byte	0x30
 2588 00da 03       		.byte	0x3
 2589 00db 00000000 		.4byte	UART_txBufferWrite
 2590 00df 94       		.byte	0x94
 2591 00e0 01       		.byte	0x1
 2592 00e1 08       		.byte	0x8
 2593 00e2 FF       		.byte	0xff
 2594 00e3 1A       		.byte	0x1a
 2595 00e4 03       		.byte	0x3
 2596 00e5 00000000 		.4byte	UART_txBufferWrite
 2597 00e9 94       		.byte	0x94
 2598 00ea 01       		.byte	0x1
 2599 00eb 08       		.byte	0x8
 2600 00ec FF       		.byte	0xff
 2601 00ed 1A       		.byte	0x1a
 2602 00ee 40       		.byte	0x40
 2603 00ef 4B       		.byte	0x4b
 2604 00f0 24       		.byte	0x24
 2605 00f1 22       		.byte	0x22
 2606 00f2 0C       		.byte	0xc
 2607 00f3 08000080 		.4byte	0x80000008
 2608 00f7 2A       		.byte	0x2a
 2609 00f8 28       		.byte	0x28
 2610 00f9 0100     		.2byte	0x1
 2611 00fb 16       		.byte	0x16
 2612 00fc 13       		.byte	0x13
 2613 00fd 23       		.byte	0x23
 2614 00fe 01       		.uleb128 0x1
 2615 00ff 9F       		.byte	0x9f
 2616 0100 00000000 		.4byte	0
 2617 0104 00000000 		.4byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 75


 2618              	.LLST7:
 2619 0108 0A000000 		.4byte	.LVL32
 2620 010c 26000000 		.4byte	.LVL33
 2621 0110 0100     		.2byte	0x1
 2622 0112 52       		.byte	0x52
 2623 0113 00000000 		.4byte	0
 2624 0117 00000000 		.4byte	0
 2625              	.LLST8:
 2626 011b 00000000 		.4byte	.LVL41
 2627 011f 0C000000 		.4byte	.LVL42
 2628 0123 0100     		.2byte	0x1
 2629 0125 50       		.byte	0x50
 2630 0126 0C000000 		.4byte	.LVL42
 2631 012a 1C000000 		.4byte	.LVL46
 2632 012e 0100     		.2byte	0x1
 2633 0130 55       		.byte	0x55
 2634 0131 1C000000 		.4byte	.LVL46
 2635 0135 20000000 		.4byte	.LFE20
 2636 0139 0400     		.2byte	0x4
 2637 013b F3       		.byte	0xf3
 2638 013c 01       		.uleb128 0x1
 2639 013d 50       		.byte	0x50
 2640 013e 9F       		.byte	0x9f
 2641 013f 00000000 		.4byte	0
 2642 0143 00000000 		.4byte	0
 2643              	.LLST9:
 2644 0147 00000000 		.4byte	.LVL41
 2645 014b 0C000000 		.4byte	.LVL42
 2646 014f 0200     		.2byte	0x2
 2647 0151 30       		.byte	0x30
 2648 0152 9F       		.byte	0x9f
 2649 0153 0C000000 		.4byte	.LVL42
 2650 0157 0E000000 		.4byte	.LVL43
 2651 015b 0100     		.2byte	0x1
 2652 015d 54       		.byte	0x54
 2653 015e 0E000000 		.4byte	.LVL43
 2654 0162 17000000 		.4byte	.LVL44-1
 2655 0166 0100     		.2byte	0x1
 2656 0168 53       		.byte	0x53
 2657 0169 18000000 		.4byte	.LVL44
 2658 016d 1A000000 		.4byte	.LVL45
 2659 0171 0100     		.2byte	0x1
 2660 0173 54       		.byte	0x54
 2661 0174 00000000 		.4byte	0
 2662 0178 00000000 		.4byte	0
 2663              	.LLST10:
 2664 017c 00000000 		.4byte	.LVL47
 2665 0180 0E000000 		.4byte	.LVL49
 2666 0184 0100     		.2byte	0x1
 2667 0186 50       		.byte	0x50
 2668 0187 0E000000 		.4byte	.LVL49
 2669 018b 24000000 		.4byte	.LFE21
 2670 018f 0400     		.2byte	0x4
 2671 0191 F3       		.byte	0xf3
 2672 0192 01       		.uleb128 0x1
 2673 0193 50       		.byte	0x50
 2674 0194 9F       		.byte	0x9f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 76


 2675 0195 00000000 		.4byte	0
 2676 0199 00000000 		.4byte	0
 2677              	.LLST11:
 2678 019d 00000000 		.4byte	.LVL47
 2679 01a1 0A000000 		.4byte	.LVL48
 2680 01a5 0100     		.2byte	0x1
 2681 01a7 51       		.byte	0x51
 2682 01a8 0A000000 		.4byte	.LVL48
 2683 01ac 24000000 		.4byte	.LFE21
 2684 01b0 0400     		.2byte	0x4
 2685 01b2 F3       		.byte	0xf3
 2686 01b3 01       		.uleb128 0x1
 2687 01b4 51       		.byte	0x51
 2688 01b5 9F       		.byte	0x9f
 2689 01b6 00000000 		.4byte	0
 2690 01ba 00000000 		.4byte	0
 2691              	.LLST12:
 2692 01be 00000000 		.4byte	.LVL47
 2693 01c2 0E000000 		.4byte	.LVL49
 2694 01c6 0200     		.2byte	0x2
 2695 01c8 30       		.byte	0x30
 2696 01c9 9F       		.byte	0x9f
 2697 01ca 0E000000 		.4byte	.LVL49
 2698 01ce 16000000 		.4byte	.LVL50
 2699 01d2 0900     		.2byte	0x9
 2700 01d4 75       		.byte	0x75
 2701 01d5 00       		.sleb128 0
 2702 01d6 F3       		.byte	0xf3
 2703 01d7 01       		.uleb128 0x1
 2704 01d8 50       		.byte	0x50
 2705 01d9 31       		.byte	0x31
 2706 01da 1C       		.byte	0x1c
 2707 01db 1C       		.byte	0x1c
 2708 01dc 9F       		.byte	0x9f
 2709 01dd 1A000000 		.4byte	.LVL51
 2710 01e1 1C000000 		.4byte	.LVL52
 2711 01e5 0900     		.2byte	0x9
 2712 01e7 75       		.byte	0x75
 2713 01e8 00       		.sleb128 0
 2714 01e9 F3       		.byte	0xf3
 2715 01ea 01       		.uleb128 0x1
 2716 01eb 50       		.byte	0x50
 2717 01ec 31       		.byte	0x31
 2718 01ed 1C       		.byte	0x1c
 2719 01ee 1C       		.byte	0x1c
 2720 01ef 9F       		.byte	0x9f
 2721 01f0 00000000 		.4byte	0
 2722 01f4 00000000 		.4byte	0
 2723              	.LLST13:
 2724 01f8 00000000 		.4byte	.LVL53
 2725 01fc 0B000000 		.4byte	.LVL54-1
 2726 0200 0100     		.2byte	0x1
 2727 0202 50       		.byte	0x50
 2728 0203 0B000000 		.4byte	.LVL54-1
 2729 0207 1C000000 		.4byte	.LVL56
 2730 020b 0400     		.2byte	0x4
 2731 020d F3       		.byte	0xf3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 77


 2732 020e 01       		.uleb128 0x1
 2733 020f 50       		.byte	0x50
 2734 0210 9F       		.byte	0x9f
 2735 0211 1C000000 		.4byte	.LVL56
 2736 0215 24000000 		.4byte	.LFE22
 2737 0219 0100     		.2byte	0x1
 2738 021b 50       		.byte	0x50
 2739 021c 00000000 		.4byte	0
 2740 0220 00000000 		.4byte	0
 2741              	.LLST14:
 2742 0224 1E000000 		.4byte	.LVL57
 2743 0228 20000000 		.4byte	.LVL58
 2744 022c 0100     		.2byte	0x1
 2745 022e 50       		.byte	0x50
 2746 022f 22000000 		.4byte	.LVL59
 2747 0233 38000000 		.4byte	.LFE23
 2748 0237 0100     		.2byte	0x1
 2749 0239 50       		.byte	0x50
 2750 023a 00000000 		.4byte	0
 2751 023e 00000000 		.4byte	0
 2752              	.LLST15:
 2753 0242 06000000 		.4byte	.LVL60
 2754 0246 1B000000 		.4byte	.LVL61-1
 2755 024a 0100     		.2byte	0x1
 2756 024c 50       		.byte	0x50
 2757 024d 00000000 		.4byte	0
 2758 0251 00000000 		.4byte	0
 2759              	.LLST16:
 2760 0255 00000000 		.4byte	.LVL62
 2761 0259 2C000000 		.4byte	.LVL65
 2762 025d 0100     		.2byte	0x1
 2763 025f 50       		.byte	0x50
 2764 0260 2C000000 		.4byte	.LVL65
 2765 0264 32000000 		.4byte	.LVL66
 2766 0268 0400     		.2byte	0x4
 2767 026a F3       		.byte	0xf3
 2768 026b 01       		.uleb128 0x1
 2769 026c 50       		.byte	0x50
 2770 026d 9F       		.byte	0x9f
 2771 026e 32000000 		.4byte	.LVL66
 2772 0272 3C000000 		.4byte	.LVL69
 2773 0276 0100     		.2byte	0x1
 2774 0278 50       		.byte	0x50
 2775 0279 3C000000 		.4byte	.LVL69
 2776 027d 44000000 		.4byte	.LVL70
 2777 0281 0400     		.2byte	0x4
 2778 0283 F3       		.byte	0xf3
 2779 0284 01       		.uleb128 0x1
 2780 0285 50       		.byte	0x50
 2781 0286 9F       		.byte	0x9f
 2782 0287 44000000 		.4byte	.LVL70
 2783 028b 58000000 		.4byte	.LFE25
 2784 028f 0100     		.2byte	0x1
 2785 0291 50       		.byte	0x50
 2786 0292 00000000 		.4byte	0
 2787 0296 00000000 		.4byte	0
 2788              	.LLST17:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 78


 2789 029a 1E000000 		.4byte	.LVL63
 2790 029e 20000000 		.4byte	.LVL64
 2791 02a2 0100     		.2byte	0x1
 2792 02a4 52       		.byte	0x52
 2793 02a5 36000000 		.4byte	.LVL67
 2794 02a9 38000000 		.4byte	.LVL68
 2795 02ad 0100     		.2byte	0x1
 2796 02af 52       		.byte	0x52
 2797 02b0 00000000 		.4byte	0
 2798 02b4 00000000 		.4byte	0
 2799              		.section	.debug_aranges,"",%progbits
 2800 0000 DC000000 		.4byte	0xdc
 2801 0004 0200     		.2byte	0x2
 2802 0006 00000000 		.4byte	.Ldebug_info0
 2803 000a 04       		.byte	0x4
 2804 000b 00       		.byte	0
 2805 000c 0000     		.2byte	0
 2806 000e 0000     		.2byte	0
 2807 0010 00000000 		.4byte	.LFB1
 2808 0014 3C000000 		.4byte	.LFE1-.LFB1
 2809 0018 00000000 		.4byte	.LFB2
 2810 001c 48000000 		.4byte	.LFE2-.LFB2
 2811 0020 00000000 		.4byte	.LFB0
 2812 0024 1C000000 		.4byte	.LFE0-.LFB0
 2813 0028 00000000 		.4byte	.LFB3
 2814 002c 48000000 		.4byte	.LFE3-.LFB3
 2815 0030 00000000 		.4byte	.LFB4
 2816 0034 04000000 		.4byte	.LFE4-.LFB4
 2817 0038 00000000 		.4byte	.LFB6
 2818 003c 0C000000 		.4byte	.LFE6-.LFB6
 2819 0040 00000000 		.4byte	.LFB7
 2820 0044 0C000000 		.4byte	.LFE7-.LFB7
 2821 0048 00000000 		.4byte	.LFB8
 2822 004c 10000000 		.4byte	.LFE8-.LFB8
 2823 0050 00000000 		.4byte	.LFB9
 2824 0054 28000000 		.4byte	.LFE9-.LFB9
 2825 0058 00000000 		.4byte	.LFB10
 2826 005c 1C000000 		.4byte	.LFE10-.LFB10
 2827 0060 00000000 		.4byte	.LFB11
 2828 0064 10000000 		.4byte	.LFE11-.LFB11
 2829 0068 00000000 		.4byte	.LFB12
 2830 006c 24000000 		.4byte	.LFE12-.LFB12
 2831 0070 00000000 		.4byte	.LFB14
 2832 0074 0C000000 		.4byte	.LFE14-.LFB14
 2833 0078 00000000 		.4byte	.LFB15
 2834 007c 0C000000 		.4byte	.LFE15-.LFB15
 2835 0080 00000000 		.4byte	.LFB16
 2836 0084 0C000000 		.4byte	.LFE16-.LFB16
 2837 0088 00000000 		.4byte	.LFB17
 2838 008c 58000000 		.4byte	.LFE17-.LFB17
 2839 0090 00000000 		.4byte	.LFB18
 2840 0094 0C000000 		.4byte	.LFE18-.LFB18
 2841 0098 00000000 		.4byte	.LFB19
 2842 009c 64000000 		.4byte	.LFE19-.LFB19
 2843 00a0 00000000 		.4byte	.LFB20
 2844 00a4 20000000 		.4byte	.LFE20-.LFB20
 2845 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 79


 2846 00ac 24000000 		.4byte	.LFE21-.LFB21
 2847 00b0 00000000 		.4byte	.LFB22
 2848 00b4 24000000 		.4byte	.LFE22-.LFB22
 2849 00b8 00000000 		.4byte	.LFB23
 2850 00bc 38000000 		.4byte	.LFE23-.LFB23
 2851 00c0 00000000 		.4byte	.LFB24
 2852 00c4 40000000 		.4byte	.LFE24-.LFB24
 2853 00c8 00000000 		.4byte	.LFB25
 2854 00cc 58000000 		.4byte	.LFE25-.LFB25
 2855 00d0 00000000 		.4byte	.LFB26
 2856 00d4 02000000 		.4byte	.LFE26-.LFB26
 2857 00d8 00000000 		.4byte	0
 2858 00dc 00000000 		.4byte	0
 2859              		.section	.debug_ranges,"",%progbits
 2860              	.Ldebug_ranges0:
 2861 0000 00000000 		.4byte	.LBB6
 2862 0004 02000000 		.4byte	.LBE6
 2863 0008 04000000 		.4byte	.LBB12
 2864 000c 06000000 		.4byte	.LBE12
 2865 0010 00000000 		.4byte	0
 2866 0014 00000000 		.4byte	0
 2867 0018 02000000 		.4byte	.LBB9
 2868 001c 04000000 		.4byte	.LBE9
 2869 0020 06000000 		.4byte	.LBB13
 2870 0024 08000000 		.4byte	.LBE13
 2871 0028 00000000 		.4byte	0
 2872 002c 00000000 		.4byte	0
 2873 0030 06000000 		.4byte	.LBB14
 2874 0034 42000000 		.4byte	.LBE14
 2875 0038 44000000 		.4byte	.LBB15
 2876 003c 58000000 		.4byte	.LBE15
 2877 0040 00000000 		.4byte	0
 2878 0044 00000000 		.4byte	0
 2879 0048 00000000 		.4byte	.LFB1
 2880 004c 3C000000 		.4byte	.LFE1
 2881 0050 00000000 		.4byte	.LFB2
 2882 0054 48000000 		.4byte	.LFE2
 2883 0058 00000000 		.4byte	.LFB0
 2884 005c 1C000000 		.4byte	.LFE0
 2885 0060 00000000 		.4byte	.LFB3
 2886 0064 48000000 		.4byte	.LFE3
 2887 0068 00000000 		.4byte	.LFB4
 2888 006c 04000000 		.4byte	.LFE4
 2889 0070 00000000 		.4byte	.LFB6
 2890 0074 0C000000 		.4byte	.LFE6
 2891 0078 00000000 		.4byte	.LFB7
 2892 007c 0C000000 		.4byte	.LFE7
 2893 0080 00000000 		.4byte	.LFB8
 2894 0084 10000000 		.4byte	.LFE8
 2895 0088 00000000 		.4byte	.LFB9
 2896 008c 28000000 		.4byte	.LFE9
 2897 0090 00000000 		.4byte	.LFB10
 2898 0094 1C000000 		.4byte	.LFE10
 2899 0098 00000000 		.4byte	.LFB11
 2900 009c 10000000 		.4byte	.LFE11
 2901 00a0 00000000 		.4byte	.LFB12
 2902 00a4 24000000 		.4byte	.LFE12
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 80


 2903 00a8 00000000 		.4byte	.LFB14
 2904 00ac 0C000000 		.4byte	.LFE14
 2905 00b0 00000000 		.4byte	.LFB15
 2906 00b4 0C000000 		.4byte	.LFE15
 2907 00b8 00000000 		.4byte	.LFB16
 2908 00bc 0C000000 		.4byte	.LFE16
 2909 00c0 00000000 		.4byte	.LFB17
 2910 00c4 58000000 		.4byte	.LFE17
 2911 00c8 00000000 		.4byte	.LFB18
 2912 00cc 0C000000 		.4byte	.LFE18
 2913 00d0 00000000 		.4byte	.LFB19
 2914 00d4 64000000 		.4byte	.LFE19
 2915 00d8 00000000 		.4byte	.LFB20
 2916 00dc 20000000 		.4byte	.LFE20
 2917 00e0 00000000 		.4byte	.LFB21
 2918 00e4 24000000 		.4byte	.LFE21
 2919 00e8 00000000 		.4byte	.LFB22
 2920 00ec 24000000 		.4byte	.LFE22
 2921 00f0 00000000 		.4byte	.LFB23
 2922 00f4 38000000 		.4byte	.LFE23
 2923 00f8 00000000 		.4byte	.LFB24
 2924 00fc 40000000 		.4byte	.LFE24
 2925 0100 00000000 		.4byte	.LFB25
 2926 0104 58000000 		.4byte	.LFE25
 2927 0108 00000000 		.4byte	.LFB26
 2928 010c 02000000 		.4byte	.LFE26
 2929 0110 00000000 		.4byte	0
 2930 0114 00000000 		.4byte	0
 2931              		.section	.debug_line,"",%progbits
 2932              	.Ldebug_line0:
 2933 0000 EF020000 		.section	.debug_str,"MS",%progbits,1
 2933      02005F00 
 2933      00000201 
 2933      FB0E0D00 
 2933      01010101 
 2934              	.LASF10:
 2935 0000 75696E74 		.ascii	"uint16\000"
 2935      313600
 2936              	.LASF68:
 2937 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2937      69744372 
 2937      69746963 
 2937      616C5365 
 2937      6374696F 
 2938              	.LASF42:
 2939 001d 74784461 		.ascii	"txDataByte\000"
 2939      74614279 
 2939      746500
 2940              	.LASF63:
 2941 0028 55415254 		.ascii	"UART_txBufferWrite\000"
 2941      5F747842 
 2941      75666665 
 2941      72577269 
 2941      746500
 2942              	.LASF49:
 2943 003b 73747269 		.ascii	"string\000"
 2943      6E6700
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 81


 2944              	.LASF7:
 2945 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 2945      206C6F6E 
 2945      6720756E 
 2945      7369676E 
 2945      65642069 
 2946              	.LASF26:
 2947 0059 55415254 		.ascii	"UART_Start\000"
 2947      5F537461 
 2947      727400
 2948              	.LASF40:
 2949 0064 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2949      5F536574 
 2949      5478496E 
 2949      74657272 
 2949      7570744D 
 2950              	.LASF62:
 2951 007c 55415254 		.ascii	"UART_txBufferRead\000"
 2951      5F747842 
 2951      75666665 
 2951      72526561 
 2951      6400
 2952              	.LASF6:
 2953 008e 6C6F6E67 		.ascii	"long long int\000"
 2953      206C6F6E 
 2953      6720696E 
 2953      7400
 2954              	.LASF0:
 2955 009c 7369676E 		.ascii	"signed char\000"
 2955      65642063 
 2955      68617200 
 2956              	.LASF70:
 2957 00a8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2957      43313120 
 2957      352E342E 
 2957      31203230 
 2957      31363036 
 2958 00db 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2958      20726576 
 2958      6973696F 
 2958      6E203233 
 2958      37373135 
 2959 010e 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2959      66756E63 
 2959      74696F6E 
 2959      2D736563 
 2959      74696F6E 
 2960              	.LASF59:
 2961 0136 74785065 		.ascii	"txPeriod\000"
 2961      72696F64 
 2961      00
 2962              	.LASF72:
 2963 013f 433A5C55 		.ascii	"C:\\Users\\jon\\Sync\\Research\\PSoC Projects\\Bala"
 2963      73657273 
 2963      5C6A6F6E 
 2963      5C53796E 
 2963      635C5265 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 82


 2964 016c 6E63652E 		.ascii	"nce.cydsn\000"
 2964      63796473 
 2964      6E00
 2965              	.LASF4:
 2966 0176 6C6F6E67 		.ascii	"long int\000"
 2966      20696E74 
 2966      00
 2967              	.LASF45:
 2968 017f 55415254 		.ascii	"UART_PutChar\000"
 2968      5F507574 
 2968      43686172 
 2968      00
 2969              	.LASF20:
 2970 018c 55415254 		.ascii	"UART_ReadRxData\000"
 2970      5F526561 
 2970      64527844 
 2970      61746100 
 2971              	.LASF9:
 2972 019c 75696E74 		.ascii	"uint8\000"
 2972      3800
 2973              	.LASF43:
 2974 01a2 55415254 		.ascii	"UART_ReadControlRegister\000"
 2974      5F526561 
 2974      64436F6E 
 2974      74726F6C 
 2974      52656769 
 2975              	.LASF13:
 2976 01bb 646F7562 		.ascii	"double\000"
 2976      6C6500
 2977              	.LASF74:
 2978 01c2 61646472 		.ascii	"addressMode\000"
 2978      6573734D 
 2978      6F646500 
 2979              	.LASF11:
 2980 01ce 75696E74 		.ascii	"uint32\000"
 2980      333200
 2981              	.LASF47:
 2982 01d5 6C6F6354 		.ascii	"locTxBufferRead\000"
 2982      78427566 
 2982      66657252 
 2982      65616400 
 2983              	.LASF24:
 2984 01e5 55415254 		.ascii	"UART_Init\000"
 2984      5F496E69 
 2984      7400
 2985              	.LASF61:
 2986 01ef 55415254 		.ascii	"UART_txBuffer\000"
 2986      5F747842 
 2986      75666665 
 2986      7200
 2987              	.LASF57:
 2988 01fd 7265744D 		.ascii	"retMode\000"
 2988      6F646500 
 2989              	.LASF32:
 2990 0205 55415254 		.ascii	"UART_GetByte\000"
 2990      5F476574 
 2990      42797465 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 83


 2990      00
 2991              	.LASF8:
 2992 0212 756E7369 		.ascii	"unsigned int\000"
 2992      676E6564 
 2992      20696E74 
 2992      00
 2993              	.LASF55:
 2994 021f 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2994      5F436C65 
 2994      61725478 
 2994      42756666 
 2994      657200
 2995              	.LASF53:
 2996 0232 55415254 		.ascii	"UART_PutCRLF\000"
 2996      5F507574 
 2996      43524C46 
 2996      00
 2997              	.LASF5:
 2998 023f 6C6F6E67 		.ascii	"long unsigned int\000"
 2998      20756E73 
 2998      69676E65 
 2998      6420696E 
 2998      7400
 2999              	.LASF46:
 3000 0251 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3000      78427566 
 3000      66657257 
 3000      72697465 
 3000      00
 3001              	.LASF51:
 3002 0262 55415254 		.ascii	"UART_PutArray\000"
 3002      5F507574 
 3002      41727261 
 3002      7900
 3003              	.LASF66:
 3004 0270 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3004      74657243 
 3004      72697469 
 3004      63616C53 
 3004      65637469 
 3005              	.LASF34:
 3006 0287 73697A65 		.ascii	"size\000"
 3006      00
 3007              	.LASF3:
 3008 028c 73686F72 		.ascii	"short unsigned int\000"
 3008      7420756E 
 3008      7369676E 
 3008      65642069 
 3008      6E7400
 3009              	.LASF64:
 3010 029f 4379496E 		.ascii	"CyIntSetVector\000"
 3010      74536574 
 3010      56656374 
 3010      6F7200
 3011              	.LASF50:
 3012 02ae 62756649 		.ascii	"bufIndex\000"
 3012      6E646578 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 84


 3012      00
 3013              	.LASF37:
 3014 02b7 696E7453 		.ascii	"intSrc\000"
 3014      726300
 3015              	.LASF73:
 3016 02be 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3016      5F536574 
 3016      54784164 
 3016      64726573 
 3016      734D6F64 
 3017              	.LASF44:
 3018 02d4 55415254 		.ascii	"UART_ReadTxStatus\000"
 3018      5F526561 
 3018      64547853 
 3018      74617475 
 3018      7300
 3019              	.LASF67:
 3020 02e6 55415254 		.ascii	"UART_IntClock_Start\000"
 3020      5F496E74 
 3020      436C6F63 
 3020      6B5F5374 
 3020      61727400 
 3021              	.LASF17:
 3022 02fa 72656733 		.ascii	"reg32\000"
 3022      3200
 3023              	.LASF58:
 3024 0300 746D7053 		.ascii	"tmpStat\000"
 3024      74617400 
 3025              	.LASF19:
 3026 0308 73697A65 		.ascii	"sizetype\000"
 3026      74797065 
 3026      00
 3027              	.LASF18:
 3028 0311 6C6F6E67 		.ascii	"long double\000"
 3028      20646F75 
 3028      626C6500 
 3029              	.LASF38:
 3030 031d 61646472 		.ascii	"address\000"
 3030      65737300 
 3031              	.LASF36:
 3032 0325 55415254 		.ascii	"UART_SetRxAddress1\000"
 3032      5F536574 
 3032      52784164 
 3032      64726573 
 3032      733100
 3033              	.LASF39:
 3034 0338 55415254 		.ascii	"UART_SetRxAddress2\000"
 3034      5F536574 
 3034      52784164 
 3034      64726573 
 3034      733200
 3035              	.LASF30:
 3036 034b 72785374 		.ascii	"rxStatus\000"
 3036      61747573 
 3036      00
 3037              	.LASF69:
 3038 0354 55415254 		.ascii	"UART_IntClock_Stop\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 85


 3038      5F496E74 
 3038      436C6F63 
 3038      6B5F5374 
 3038      6F7000
 3039              	.LASF65:
 3040 0367 4379496E 		.ascii	"CyIntSetPriority\000"
 3040      74536574 
 3040      5072696F 
 3040      72697479 
 3040      00
 3041              	.LASF71:
 3042 0378 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 3042      72617465 
 3042      645F536F 
 3042      75726365 
 3042      5C50536F 
 3043              	.LASF54:
 3044 0396 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3044      5F476574 
 3044      54784275 
 3044      66666572 
 3044      53697A65 
 3045              	.LASF16:
 3046 03ab 72656738 		.ascii	"reg8\000"
 3046      00
 3047              	.LASF1:
 3048 03b0 756E7369 		.ascii	"unsigned char\000"
 3048      676E6564 
 3048      20636861 
 3048      7200
 3049              	.LASF41:
 3050 03be 55415254 		.ascii	"UART_WriteTxData\000"
 3050      5F577269 
 3050      74655478 
 3050      44617461 
 3050      00
 3051              	.LASF2:
 3052 03cf 73686F72 		.ascii	"short int\000"
 3052      7420696E 
 3052      7400
 3053              	.LASF56:
 3054 03d9 55415254 		.ascii	"UART_SendBreak\000"
 3054      5F53656E 
 3054      64427265 
 3054      616B00
 3055              	.LASF52:
 3056 03e8 62797465 		.ascii	"byteCount\000"
 3056      436F756E 
 3056      7400
 3057              	.LASF22:
 3058 03f2 72784461 		.ascii	"rxData\000"
 3058      746100
 3059              	.LASF25:
 3060 03f9 55415254 		.ascii	"UART_Enable\000"
 3060      5F456E61 
 3060      626C6500 
 3061              	.LASF21:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 86


 3062 0405 55415254 		.ascii	"UART_ReadRxStatus\000"
 3062      5F526561 
 3062      64527853 
 3062      74617475 
 3062      7300
 3063              	.LASF15:
 3064 0417 63686172 		.ascii	"char\000"
 3064      00
 3065              	.LASF14:
 3066 041c 63686172 		.ascii	"char8\000"
 3066      3800
 3067              	.LASF29:
 3068 0422 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3068      5F536574 
 3068      5278496E 
 3068      74657272 
 3068      7570744D 
 3069              	.LASF31:
 3070 043a 55415254 		.ascii	"UART_GetChar\000"
 3070      5F476574 
 3070      43686172 
 3070      00
 3071              	.LASF28:
 3072 0447 656E6162 		.ascii	"enableInterrupts\000"
 3072      6C65496E 
 3072      74657272 
 3072      75707473 
 3072      00
 3073              	.LASF60:
 3074 0458 55415254 		.ascii	"UART_initVar\000"
 3074      5F696E69 
 3074      74566172 
 3074      00
 3075              	.LASF33:
 3076 0465 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3076      5F476574 
 3076      52784275 
 3076      66666572 
 3076      53697A65 
 3077              	.LASF23:
 3078 047a 73746174 		.ascii	"status\000"
 3078      757300
 3079              	.LASF27:
 3080 0481 55415254 		.ascii	"UART_Stop\000"
 3080      5F53746F 
 3080      7000
 3081              	.LASF12:
 3082 048b 666C6F61 		.ascii	"float\000"
 3082      7400
 3083              	.LASF48:
 3084 0491 55415254 		.ascii	"UART_PutString\000"
 3084      5F507574 
 3084      53747269 
 3084      6E6700
 3085              	.LASF35:
 3086 04a0 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3086      5F436C65 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccQCIfVg.s 			page 87


 3086      61725278 
 3086      42756666 
 3086      657200
 3087              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
