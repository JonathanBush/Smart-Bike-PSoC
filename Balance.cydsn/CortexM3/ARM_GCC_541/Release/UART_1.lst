ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_1_Init, %function
  25              	UART_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 2


  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:Generated_Source\PSoC5/UART_1.c **** }
  87:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 3


  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 074B     		ldr	r3, .L2
  35 0002 7222     		movs	r2, #114
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 2022     		movs	r2, #32
  39 0008 83F80021 		strb	r2, [r3, #256]
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 4


 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  40              		.loc 1 138 0
  41 000c 623B     		subs	r3, r3, #98
  42 000e 0622     		movs	r2, #6
  43 0010 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  44              		.loc 1 139 0
  45 0012 4722     		movs	r2, #71
  46 0014 1A74     		strb	r2, [r3, #16]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  47              		.loc 1 150 0
  48 0016 0022     		movs	r2, #0
  49 0018 83F86120 		strb	r2, [r3, #97]
  50 001c 7047     		bx	lr
  51              	.L3:
  52 001e 00BF     		.align	2
  53              	.L2:
  54 0020 88640040 		.word	1073767560
  55              		.cfi_endproc
  56              	.LFE1:
  57              		.size	UART_1_Init, .-UART_1_Init
  58              		.section	.text.UART_1_Enable,"ax",%progbits
  59              		.align	1
  60              		.global	UART_1_Enable
  61              		.thumb
  62              		.thumb_func
  63              		.type	UART_1_Enable, %function
  64              	UART_1_Enable:
  65              	.LFB2:
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 5


 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
  66              		.loc 1 184 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  74              		.loc 1 186 0
  75 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  76              	.LVL0:
  77 0006 0446     		mov	r4, r0
  78              	.LVL1:
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
  79              		.loc 1 190 0
  80 0008 0B4A     		ldr	r2, .L5
  81 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 6


 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  82              		.loc 1 211 0
  83 000c 013A     		subs	r2, r2, #1
 190:Generated_Source\PSoC5/UART_1.c **** 
  84              		.loc 1 190 0
  85 000e 43F02003 		orr	r3, r3, #32
  86 0012 5370     		strb	r3, [r2, #1]
 193:Generated_Source\PSoC5/UART_1.c **** 
  87              		.loc 1 193 0
  88 0014 92F80131 		ldrb	r3, [r2, #257]	@ zero_extendqisi2
  89 0018 43F01003 		orr	r3, r3, #16
  90 001c 82F80131 		strb	r3, [r2, #257]
  91              		.loc 1 211 0
  92 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  93 0022 43F01003 		orr	r3, r3, #16
  94 0026 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
  95              		.loc 1 219 0
  96 0028 FFF7FEFF 		bl	UART_1_IntClock_Start
  97              	.LVL2:
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
  98              		.loc 1 222 0
  99 002c 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART_1.c **** }
 100              		.loc 1 223 0
 101 002e BDE81040 		pop	{r4, lr}
 102              		.cfi_restore 14
 103              		.cfi_restore 4
 104              		.cfi_def_cfa_offset 0
 105              	.LVL3:
 222:Generated_Source\PSoC5/UART_1.c **** }
 106              		.loc 1 222 0
 107 0032 FFF7FEBF 		b	CyExitCriticalSection
 108              	.LVL4:
 109              	.L6:
 110 0036 00BF     		.align	2
 111              	.L5:
 112 0038 98640040 		.word	1073767576
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	UART_1_Enable, .-UART_1_Enable
 116              		.section	.text.UART_1_Start,"ax",%progbits
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 7


 117              		.align	1
 118              		.global	UART_1_Start
 119              		.thumb
 120              		.thumb_func
 121              		.type	UART_1_Start, %function
 122              	UART_1_Start:
 123              	.LFB0:
  77:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 124              		.loc 1 77 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_1.c ****     {
 132              		.loc 1 79 0
 133 0002 0549     		ldr	r1, .L10
 134 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 135 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 136              		.loc 1 81 0
 137 0008 FFF7FEFF 		bl	UART_1_Init
 138              	.LVL5:
  82:Generated_Source\PSoC5/UART_1.c ****     }
 139              		.loc 1 82 0
 140 000c 0123     		movs	r3, #1
 141 000e 0B70     		strb	r3, [r1]
 142              	.L8:
  86:Generated_Source\PSoC5/UART_1.c **** 
 143              		.loc 1 86 0
 144 0010 BDE80840 		pop	{r3, lr}
 145              		.cfi_restore 14
 146              		.cfi_restore 3
 147              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART_1.c **** }
 148              		.loc 1 85 0
 149 0014 FFF7FEBF 		b	UART_1_Enable
 150              	.LVL6:
 151              	.L11:
 152              		.align	2
 153              	.L10:
 154 0018 00000000 		.word	.LANCHOR0
 155              		.cfi_endproc
 156              	.LFE0:
 157              		.size	UART_1_Start, .-UART_1_Start
 158              		.section	.text.UART_1_Stop,"ax",%progbits
 159              		.align	1
 160              		.global	UART_1_Stop
 161              		.thumb
 162              		.thumb_func
 163              		.type	UART_1_Stop, %function
 164              	UART_1_Stop:
 165              	.LFB3:
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 8


 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 166              		.loc 1 241 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 10B5     		push	{r4, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 174              		.loc 1 243 0
 175 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 176              	.LVL7:
 177 0006 0446     		mov	r4, r0
 178              	.LVL8:
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 179              		.loc 1 247 0
 180 0008 0B4A     		ldr	r2, .L13
 181 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 182 000c 03F0DF03 		and	r3, r3, #223
 183 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 184              		.loc 1 257 0
 185 0012 FFF7FEFF 		bl	UART_1_IntClock_Stop
 186              	.LVL9:
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 9


 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 187              		.loc 1 262 0
 188 0016 094A     		ldr	r2, .L13+4
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 189              		.loc 1 277 0
 190 0018 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART_1.c **** 
 191              		.loc 1 262 0
 192 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 193 001c 03F0EF03 		and	r3, r3, #239
 194 0020 1370     		strb	r3, [r2]
 270:Generated_Source\PSoC5/UART_1.c **** 
 195              		.loc 1 270 0
 196 0022 6FF48073 		mvn	r3, #256
 197 0026 1A44     		add	r2, r2, r3
 198 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 199 002a 03F0EF03 		and	r3, r3, #239
 200 002e 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/UART_1.c **** }
 201              		.loc 1 278 0
 202 0030 BDE81040 		pop	{r4, lr}
 203              		.cfi_restore 14
 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 0
 206              	.LVL10:
 277:Generated_Source\PSoC5/UART_1.c **** }
 207              		.loc 1 277 0
 208 0034 FFF7FEBF 		b	CyExitCriticalSection
 209              	.LVL11:
 210              	.L14:
 211              		.align	2
 212              	.L13:
 213 0038 98640040 		.word	1073767576
 214 003c 98650040 		.word	1073767832
 215              		.cfi_endproc
 216              	.LFE3:
 217              		.size	UART_1_Stop, .-UART_1_Stop
 218              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 219              		.align	1
 220              		.global	UART_1_ReadControlRegister
 221              		.thumb
 222              		.thumb_func
 223              		.type	UART_1_ReadControlRegister, %function
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 10


 224              	UART_1_ReadControlRegister:
 225              	.LFB4:
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 226              		.loc 1 296 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 231              		.loc 1 302 0
 232 0000 0020     		movs	r0, #0
 233 0002 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE4:
 236              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 237              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 238              		.align	1
 239              		.global	UART_1_WriteControlRegister
 240              		.thumb
 241              		.thumb_func
 242              		.type	UART_1_WriteControlRegister, %function
 243              	UART_1_WriteControlRegister:
 244              	.LFB30:
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 7047     		bx	lr
 250              		.cfi_endproc
 251              	.LFE30:
 252              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 253              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 254              		.align	1
 255              		.global	UART_1_SetRxInterruptMode
 256              		.thumb
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 11


 257              		.thumb_func
 258              		.type	UART_1_SetRxInterruptMode, %function
 259              	UART_1_SetRxInterruptMode:
 260              	.LFB6:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 12


 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 261              		.loc 1 360 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL12:
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 267              		.loc 1 361 0
 268 0000 014B     		ldr	r3, .L18
 269 0002 1870     		strb	r0, [r3]
 270 0004 7047     		bx	lr
 271              	.L19:
 272 0006 00BF     		.align	2
 273              	.L18:
 274 0008 88650040 		.word	1073767816
 275              		.cfi_endproc
 276              	.LFE6:
 277              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 278              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 279              		.align	1
 280              		.global	UART_1_ReadRxData
 281              		.thumb
 282              		.thumb_func
 283              		.type	UART_1_ReadRxData, %function
 284              	UART_1_ReadRxData:
 285              	.LFB7:
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 13


 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 286              		.loc 1 393 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 14


 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 291              		.loc 1 448 0
 292 0000 014B     		ldr	r3, .L21
 293 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 294              	.LVL13:
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 295              		.loc 1 453 0
 296 0004 7047     		bx	lr
 297              	.L22:
 298 0006 00BF     		.align	2
 299              	.L21:
 300 0008 48650040 		.word	1073767752
 301              		.cfi_endproc
 302              	.LFE7:
 303              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 304              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 305              		.align	1
 306              		.global	UART_1_ReadRxStatus
 307              		.thumb
 308              		.thumb_func
 309              		.type	UART_1_ReadRxStatus, %function
 310              	UART_1_ReadRxStatus:
 311              	.LFB8:
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 15


 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 312              		.loc 1 486 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 317              		.loc 1 489 0
 318 0000 024B     		ldr	r3, .L24
 319 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 320              	.LVL14:
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:Generated_Source\PSoC5/UART_1.c ****     }
 321              		.loc 1 500 0
 322 0004 00F07F00 		and	r0, r0, #127
 323              	.LVL15:
 324 0008 7047     		bx	lr
 325              	.L25:
 326 000a 00BF     		.align	2
 327              	.L24:
 328 000c 68650040 		.word	1073767784
 329              		.cfi_endproc
 330              	.LFE8:
 331              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 332              		.section	.text.UART_1_GetChar,"ax",%progbits
 333              		.align	1
 334              		.global	UART_1_GetChar
 335              		.thumb
 336              		.thumb_func
 337              		.type	UART_1_GetChar, %function
 338              	UART_1_GetChar:
 339              	.LFB9:
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 16


 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 340              		.loc 1 533 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345              	.LVL16:
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 17


 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 346              		.loc 1 596 0
 347 0000 074B     		ldr	r3, .L30
 348 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0004 DBB2     		uxtb	r3, r3
 350              	.LVL17:
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 351              		.loc 1 597 0
 352 0006 03F02002 		and	r2, r3, #32
 353 000a 02F0FF00 		and	r0, r2, #255
 354 000e 2AB1     		cbz	r2, .L27
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 355              		.loc 1 600 0
 356 0010 044A     		ldr	r2, .L30+4
 601:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 18


 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 357              		.loc 1 603 0
 358 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/UART_1.c **** 
 359              		.loc 1 600 0
 360 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 361              	.LVL18:
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 362              		.loc 1 606 0
 363 0018 18BF     		it	ne
 364 001a 0020     		movne	r0, #0
 365              	.LVL19:
 366              	.L27:
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 367              		.loc 1 612 0
 368 001c 7047     		bx	lr
 369              	.L31:
 370 001e 00BF     		.align	2
 371              	.L30:
 372 0020 68650040 		.word	1073767784
 373 0024 48650040 		.word	1073767752
 374              		.cfi_endproc
 375              	.LFE9:
 376              		.size	UART_1_GetChar, .-UART_1_GetChar
 377              		.section	.text.UART_1_GetByte,"ax",%progbits
 378              		.align	1
 379              		.global	UART_1_GetByte
 380              		.thumb
 381              		.thumb_func
 382              		.type	UART_1_GetByte, %function
 383              	UART_1_GetByte:
 384              	.LFB10:
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 19


 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 385              		.loc 1 635 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390              	.LBB6:
 391              	.LBB7:
 489:Generated_Source\PSoC5/UART_1.c **** 
 392              		.loc 1 489 0
 393 0000 044B     		ldr	r3, .L33
 394              	.LBE7:
 395              	.LBE6:
 396              	.LBB9:
 397              	.LBB10:
 448:Generated_Source\PSoC5/UART_1.c **** 
 398              		.loc 1 448 0
 399 0002 054A     		ldr	r2, .L33+4
 400              	.LBE10:
 401              	.LBE9:
 402              	.LBB12:
 403              	.LBB8:
 489:Generated_Source\PSoC5/UART_1.c **** 
 404              		.loc 1 489 0
 405 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 406              	.LBE8:
 407              	.LBE12:
 408              	.LBB13:
 409              	.LBB11:
 448:Generated_Source\PSoC5/UART_1.c **** 
 410              		.loc 1 448 0
 411 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 412              	.LBE11:
 413              	.LBE13:
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 414              		.loc 1 646 0
 415 0008 03F07F03 		and	r3, r3, #127
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 416              		.loc 1 649 0
 417 000c 40EA0320 		orr	r0, r0, r3, lsl #8
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 20


 418 0010 7047     		bx	lr
 419              	.L34:
 420 0012 00BF     		.align	2
 421              	.L33:
 422 0014 68650040 		.word	1073767784
 423 0018 48650040 		.word	1073767752
 424              		.cfi_endproc
 425              	.LFE10:
 426              		.size	UART_1_GetByte, .-UART_1_GetByte
 427              		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 428              		.align	1
 429              		.global	UART_1_GetRxBufferSize
 430              		.thumb
 431              		.thumb_func
 432              		.type	UART_1_GetRxBufferSize, %function
 433              	UART_1_GetRxBufferSize:
 434              	.LFB11:
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 435              		.loc 1 685 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 21


 439              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 440              		.loc 1 718 0
 441 0000 024B     		ldr	r3, .L36
 442 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 443              	.LVL20:
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 444              		.loc 1 723 0
 445 0004 C0F34010 		ubfx	r0, r0, #5, #1
 446              	.LVL21:
 447 0008 7047     		bx	lr
 448              	.L37:
 449 000a 00BF     		.align	2
 450              	.L36:
 451 000c 68650040 		.word	1073767784
 452              		.cfi_endproc
 453              	.LFE11:
 454              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 455              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 456              		.align	1
 457              		.global	UART_1_ClearRxBuffer
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 22


 458              		.thumb
 459              		.thumb_func
 460              		.type	UART_1_ClearRxBuffer, %function
 461              	UART_1_ClearRxBuffer:
 462              	.LFB12:
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 463              		.loc 1 758 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467 0000 08B5     		push	{r3, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 3, -8
 470              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 471              		.loc 1 762 0
 472 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 473              	.LVL22:
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 474              		.loc 1 763 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 23


 475 0006 064B     		ldr	r3, .L39
 476 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 477 000a 42F00102 		orr	r2, r2, #1
 478 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 479              		.loc 1 764 0
 480 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 481 0012 02F0FE02 		and	r2, r2, #254
 482 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 483              		.loc 1 781 0
 484 0018 BDE80840 		pop	{r3, lr}
 485              		.cfi_restore 14
 486              		.cfi_restore 3
 487              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 488              		.loc 1 765 0
 489 001c FFF7FEBF 		b	CyExitCriticalSection
 490              	.LVL23:
 491              	.L40:
 492              		.align	2
 493              	.L39:
 494 0020 98650040 		.word	1073767832
 495              		.cfi_endproc
 496              	.LFE12:
 497              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 498              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 499              		.align	1
 500              		.global	UART_1_SetRxAddressMode
 501              		.thumb
 502              		.thumb_func
 503              		.type	UART_1_SetRxAddressMode, %function
 504              	UART_1_SetRxAddressMode:
 505              	.LFB28:
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE28:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 24


 513              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 514              		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 515              		.align	1
 516              		.global	UART_1_SetRxAddress1
 517              		.thumb
 518              		.thumb_func
 519              		.type	UART_1_SetRxAddress1, %function
 520              	UART_1_SetRxAddress1:
 521              	.LFB14:
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 25


 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 522              		.loc 1 858 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              	.LVL24:
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 528              		.loc 1 859 0
 529 0000 014B     		ldr	r3, .L43
 530 0002 1870     		strb	r0, [r3]
 531 0004 7047     		bx	lr
 532              	.L44:
 533 0006 00BF     		.align	2
 534              	.L43:
 535 0008 28650040 		.word	1073767720
 536              		.cfi_endproc
 537              	.LFE14:
 538              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 539              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 540              		.align	1
 541              		.global	UART_1_SetRxAddress2
 542              		.thumb
 543              		.thumb_func
 544              		.type	UART_1_SetRxAddress2, %function
 545              	UART_1_SetRxAddress2:
 546              	.LFB15:
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 26


 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 547              		.loc 1 878 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL25:
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 553              		.loc 1 879 0
 554 0000 014B     		ldr	r3, .L46
 555 0002 1870     		strb	r0, [r3]
 556 0004 7047     		bx	lr
 557              	.L47:
 558 0006 00BF     		.align	2
 559              	.L46:
 560 0008 38650040 		.word	1073767736
 561              		.cfi_endproc
 562              	.LFE15:
 563              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 564              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 565              		.align	1
 566              		.global	UART_1_SetTxInterruptMode
 567              		.thumb
 568              		.thumb_func
 569              		.type	UART_1_SetTxInterruptMode, %function
 570              	UART_1_SetTxInterruptMode:
 571              	.LFB16:
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 27


 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 572              		.loc 1 909 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577              	.LVL26:
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 578              		.loc 1 910 0
 579 0000 014B     		ldr	r3, .L49
 580 0002 1870     		strb	r0, [r3]
 581 0004 7047     		bx	lr
 582              	.L50:
 583 0006 00BF     		.align	2
 584              	.L49:
 585 0008 87640040 		.word	1073767559
 586              		.cfi_endproc
 587              	.LFE16:
 588              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 589              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 590              		.align	1
 591              		.global	UART_1_WriteTxData
 592              		.thumb
 593              		.thumb_func
 594              		.type	UART_1_WriteTxData, %function
 595              	UART_1_WriteTxData:
 596              	.LFB17:
 911:Generated_Source\PSoC5/UART_1.c ****     }
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 28


 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 597              		.loc 1 943 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602              	.LVL27:
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 603              		.loc 1 945 0
 604 0000 024B     		ldr	r3, .L56
 605 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 606 0004 0BB1     		cbz	r3, .L51
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_1.c **** 
 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 29


 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 607              		.loc 1 976 0
 608 0006 024B     		ldr	r3, .L56+4
 609 0008 1870     		strb	r0, [r3]
 610              	.L51:
 611 000a 7047     		bx	lr
 612              	.L57:
 613              		.align	2
 614              	.L56:
 615 000c 00000000 		.word	.LANCHOR0
 616 0010 47640040 		.word	1073767495
 617              		.cfi_endproc
 618              	.LFE17:
 619              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 620              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 621              		.align	1
 622              		.global	UART_1_ReadTxStatus
 623              		.thumb
 624              		.thumb_func
 625              		.type	UART_1_ReadTxStatus, %function
 626              	UART_1_ReadTxStatus:
 627              	.LFB18:
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 628              		.loc 1 1004 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 30


 632              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 633              		.loc 1 1005 0
 634 0000 014B     		ldr	r3, .L59
 635 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_1.c ****     }
 636              		.loc 1 1006 0
 637 0004 7047     		bx	lr
 638              	.L60:
 639 0006 00BF     		.align	2
 640              	.L59:
 641 0008 67640040 		.word	1073767527
 642              		.cfi_endproc
 643              	.LFE18:
 644              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 645              		.section	.text.UART_1_PutChar,"ax",%progbits
 646              		.align	1
 647              		.global	UART_1_PutChar
 648              		.thumb
 649              		.thumb_func
 650              		.type	UART_1_PutChar, %function
 651              	UART_1_PutChar:
 652              	.LFB19:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 31


1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 653              		.loc 1 1042 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              	.LVL28:
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 32


1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 659              		.loc 1 1107 0
 660 0000 034A     		ldr	r2, .L64
 661              	.L62:
 662              		.loc 1 1107 0 is_stmt 0 discriminator 1
 663 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 664 0004 5B07     		lsls	r3, r3, #29
 665 0006 FCD4     		bmi	.L62
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 666              		.loc 1 1113 0 is_stmt 1
 667 0008 024B     		ldr	r3, .L64+4
 668 000a 1870     		strb	r0, [r3]
 669 000c 7047     		bx	lr
 670              	.L65:
 671 000e 00BF     		.align	2
 672              	.L64:
 673 0010 67640040 		.word	1073767527
 674 0014 47640040 		.word	1073767495
 675              		.cfi_endproc
 676              	.LFE19:
 677              		.size	UART_1_PutChar, .-UART_1_PutChar
 678              		.section	.text.UART_1_PutString,"ax",%progbits
 679              		.align	1
 680              		.global	UART_1_PutString
 681              		.thumb
 682              		.thumb_func
 683              		.type	UART_1_PutString, %function
 684              	UART_1_PutString:
 685              	.LFB20:
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 33


1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 686              		.loc 1 1146 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              	.LVL29:
 691 0000 10B5     		push	{r4, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 4, -8
 694              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 695              		.loc 1 1150 0
 696 0002 064B     		ldr	r3, .L73
1146:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 697              		.loc 1 1146 0
 698 0004 0446     		mov	r4, r0
 699              		.loc 1 1150 0
 700 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 701 0008 3BB1     		cbz	r3, .L66
 702 000a 0021     		movs	r1, #0
 703              	.LVL30:
 704              	.L68:
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 705              		.loc 1 1153 0
 706 000c 8BB2     		uxth	r3, r1
 707              	.LVL31:
 708 000e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 709 0010 0131     		adds	r1, r1, #1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 34


 710 0012 10B1     		cbz	r0, .L66
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 711              		.loc 1 1155 0
 712 0014 FFF7FEFF 		bl	UART_1_PutChar
 713              	.LVL32:
 714 0018 F8E7     		b	.L68
 715              	.LVL33:
 716              	.L66:
 717 001a 10BD     		pop	{r4, pc}
 718              	.LVL34:
 719              	.L74:
 720              		.align	2
 721              	.L73:
 722 001c 00000000 		.word	.LANCHOR0
 723              		.cfi_endproc
 724              	.LFE20:
 725              		.size	UART_1_PutString, .-UART_1_PutString
 726              		.section	.text.UART_1_PutArray,"ax",%progbits
 727              		.align	1
 728              		.global	UART_1_PutArray
 729              		.thumb
 730              		.thumb_func
 731              		.type	UART_1_PutArray, %function
 732              	UART_1_PutArray:
 733              	.LFB21:
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 35


1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 734              		.loc 1 1193 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              	.LVL35:
 739 0000 10B5     		push	{r4, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 4, -8
 742              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 743              		.loc 1 1197 0
 744 0002 074B     		ldr	r3, .L80
 745 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746 0006 4BB1     		cbz	r3, .L75
 747 0008 0139     		subs	r1, r1, #1
 748              	.LVL36:
 749 000a 441E     		subs	r4, r0, #1
 750 000c 0144     		add	r1, r1, r0
 751              	.LVL37:
 752              	.L77:
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 753              		.loc 1 1199 0
 754 000e 8C42     		cmp	r4, r1
 755 0010 04D0     		beq	.L75
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 756              		.loc 1 1201 0
 757 0012 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 758              	.LVL38:
 759 0016 FFF7FEFF 		bl	UART_1_PutChar
 760              	.LVL39:
 761 001a F8E7     		b	.L77
 762              	.LVL40:
 763              	.L75:
 764 001c 10BD     		pop	{r4, pc}
 765              	.L81:
 766 001e 00BF     		.align	2
 767              	.L80:
 768 0020 00000000 		.word	.LANCHOR0
 769              		.cfi_endproc
 770              	.LFE21:
 771              		.size	UART_1_PutArray, .-UART_1_PutArray
 772              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 773              		.align	1
 774              		.global	UART_1_PutCRLF
 775              		.thumb
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 36


 776              		.thumb_func
 777              		.type	UART_1_PutCRLF, %function
 778              	UART_1_PutCRLF:
 779              	.LFB22:
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 780              		.loc 1 1231 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              	.LVL41:
 785 0000 08B5     		push	{r3, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 3, -8
 788              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 789              		.loc 1 1233 0
 790 0002 074B     		ldr	r3, .L84
 791 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 792 0006 4BB1     		cbz	r3, .L82
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 793              		.loc 1 1235 0
 794 0008 FFF7FEFF 		bl	UART_1_PutChar
 795              	.LVL42:
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 796              		.loc 1 1236 0
 797 000c 0D20     		movs	r0, #13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 37


 798 000e FFF7FEFF 		bl	UART_1_PutChar
 799              	.LVL43:
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
 800              		.loc 1 1239 0
 801 0012 BDE80840 		pop	{r3, lr}
 802              		.cfi_remember_state
 803              		.cfi_restore 14
 804              		.cfi_restore 3
 805              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 806              		.loc 1 1237 0
 807 0016 0A20     		movs	r0, #10
 808 0018 FFF7FEBF 		b	UART_1_PutChar
 809              	.LVL44:
 810              	.L82:
 811              		.cfi_restore_state
 812 001c 08BD     		pop	{r3, pc}
 813              	.L85:
 814 001e 00BF     		.align	2
 815              	.L84:
 816 0020 00000000 		.word	.LANCHOR0
 817              		.cfi_endproc
 818              	.LFE22:
 819              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 820              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 821              		.align	1
 822              		.global	UART_1_GetTxBufferSize
 823              		.thumb
 824              		.thumb_func
 825              		.type	UART_1_GetTxBufferSize, %function
 826              	UART_1_GetTxBufferSize:
 827              	.LFB23:
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 38


1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 828              		.loc 1 1275 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 833              		.loc 1 1301 0
 834 0000 054B     		ldr	r3, .L89
 835 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 836 0004 C0B2     		uxtb	r0, r0
 837              	.LVL45:
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 838              		.loc 1 1304 0
 839 0006 4307     		lsls	r3, r0, #29
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_1.c ****         }
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 39


1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 840              		.loc 1 1308 0
 841 0008 5ABF     		itte	pl
 842 000a 80F00200 		eorpl	r0, r0, #2
 843              	.LVL46:
 844 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:Generated_Source\PSoC5/UART_1.c ****         }
 845              		.loc 1 1306 0
 846 0012 0420     		movmi	r0, #4
 847              	.LVL47:
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:Generated_Source\PSoC5/UART_1.c ****     }
 848              		.loc 1 1321 0
 849 0014 7047     		bx	lr
 850              	.L90:
 851 0016 00BF     		.align	2
 852              	.L89:
 853 0018 67640040 		.word	1073767527
 854              		.cfi_endproc
 855              	.LFE23:
 856              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 857              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 858              		.align	1
 859              		.global	UART_1_ClearTxBuffer
 860              		.thumb
 861              		.thumb_func
 862              		.type	UART_1_ClearTxBuffer, %function
 863              	UART_1_ClearTxBuffer:
 864              	.LFB24:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 40


1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 865              		.loc 1 1355 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869 0000 08B5     		push	{r3, lr}
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 3, -8
 872              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 873              		.loc 1 1358 0
 874 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 875              	.LVL48:
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 876              		.loc 1 1360 0
 877 0006 064B     		ldr	r3, .L92
 878 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 879 000a 42F00102 		orr	r2, r2, #1
 880 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 881              		.loc 1 1361 0
 882 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 883 0012 02F0FE02 		and	r2, r2, #254
 884 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 41


1376:Generated_Source\PSoC5/UART_1.c ****     }
 885              		.loc 1 1376 0
 886 0018 BDE80840 		pop	{r3, lr}
 887              		.cfi_restore 14
 888              		.cfi_restore 3
 889              		.cfi_def_cfa_offset 0
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 890              		.loc 1 1362 0
 891 001c FFF7FEBF 		b	CyExitCriticalSection
 892              	.LVL49:
 893              	.L93:
 894              		.align	2
 895              	.L92:
 896 0020 97640040 		.word	1073767575
 897              		.cfi_endproc
 898              	.LFE24:
 899              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 900              		.section	.text.UART_1_SendBreak,"ax",%progbits
 901              		.align	1
 902              		.global	UART_1_SendBreak
 903              		.thumb
 904              		.thumb_func
 905              		.type	UART_1_SendBreak, %function
 906              	UART_1_SendBreak:
 907              	.LFB25:
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 42


1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 908              		.loc 1 1441 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913              	.LVL50:
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 914              		.loc 1 1444 0
 915 0000 124B     		ldr	r3, .L117
 916 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 917 0004 02B3     		cbz	r2, .L94
 918              	.LBB14:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 43


1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 919              		.loc 1 1490 0
 920 0006 08B1     		cbz	r0, .L97
 921              		.loc 1 1490 0 is_stmt 0 discriminator 1
 922 0008 0328     		cmp	r0, #3
 923 000a 1BD1     		bne	.L98
 924              	.L97:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 925              		.loc 1 1501 0 is_stmt 1
 926 000c 104A     		ldr	r2, .L117+4
 927 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 928 0010 5970     		strb	r1, [r3, #1]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 44


1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 929              		.loc 1 1502 0
 930 0012 6721     		movs	r1, #103
 931 0014 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 932              		.loc 1 1509 0
 933 0016 0021     		movs	r1, #0
 934 0018 5174     		strb	r1, [r2, #17]
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 935              		.loc 1 1513 0
 936 001a 0E49     		ldr	r1, .L117+8
 937              	.L99:
 938              		.loc 1 1513 0 is_stmt 0 discriminator 1
 939 001c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 940              	.LVL51:
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 941              		.loc 1 1515 0 is_stmt 1 discriminator 1
 942 001e 9207     		lsls	r2, r2, #30
 943              	.LVL52:
 944 0020 FCD4     		bmi	.L99
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 945              		.loc 1 1518 0
 946 0022 00F0FD02 		and	r2, r0, #253
 947 0026 012A     		cmp	r2, #1
 948              	.L116:
 949 0028 03D0     		beq	.L100
 950              	.L104:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 951              		.loc 1 1528 0
 952 002a 0138     		subs	r0, r0, #1
 953              	.LVL53:
 954 002c 0228     		cmp	r0, #2
 955 002e 05D9     		bls	.L101
 956 0030 7047     		bx	lr
 957              	.LVL54:
 958              	.L100:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 45


1523:Generated_Source\PSoC5/UART_1.c ****                 }
 959              		.loc 1 1523 0
 960 0032 0849     		ldr	r1, .L117+8
 961              	.L103:
1523:Generated_Source\PSoC5/UART_1.c ****                 }
 962              		.loc 1 1523 0 is_stmt 0 discriminator 1
 963 0034 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 964              	.LVL55:
1525:Generated_Source\PSoC5/UART_1.c ****             }
 965              		.loc 1 1525 0 is_stmt 1 discriminator 1
 966 0036 D207     		lsls	r2, r2, #31
 967              	.LVL56:
 968 0038 FCD5     		bpl	.L103
 969 003a F6E7     		b	.L104
 970              	.LVL57:
 971              	.L101:
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 972              		.loc 1 1534 0
 973 003c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 974 003e 044B     		ldr	r3, .L117+4
 975 0040 1A70     		strb	r2, [r3]
 976              	.LBE14:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
 977              		.loc 1 1547 0
 978 0042 7047     		bx	lr
 979              	.LVL58:
 980              	.L98:
 981              	.LBB15:
1518:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
 982              		.loc 1 1518 0
 983 0044 0128     		cmp	r0, #1
 984 0046 EFE7     		b	.L116
 985              	.L94:
 986 0048 7047     		bx	lr
 987              	.L118:
 988 004a 00BF     		.align	2
 989              	.L117:
 990 004c 00000000 		.word	.LANCHOR0
 991 0050 36640040 		.word	1073767478
 992 0054 67640040 		.word	1073767527
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 46


 993              	.LBE15:
 994              		.cfi_endproc
 995              	.LFE25:
 996              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 997              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 998              		.align	1
 999              		.global	UART_1_SetTxAddressMode
 1000              		.thumb
 1001              		.thumb_func
 1002              		.type	UART_1_SetTxAddressMode, %function
 1003              	UART_1_SetTxAddressMode:
 1004              	.LFB26:
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 1005              		.loc 1 1573 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010              	.LVL59:
 1011 0000 7047     		bx	lr
 1012              		.cfi_endproc
 1013              	.LFE26:
 1014              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1015              		.global	UART_1_initVar
 1016              		.bss
 1017              		.set	.LANCHOR0,. + 0
 1018              		.type	UART_1_initVar, %object
 1019              		.size	UART_1_initVar, 1
 1020              	UART_1_initVar:
 1021 0000 00       		.space	1
 1022              		.type	txPeriod.5122, %object
 1023              		.size	txPeriod.5122, 1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 47


 1024              	txPeriod.5122:
 1025 0001 00       		.space	1
 1026              		.text
 1027              	.Letext0:
 1028              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1029              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1030              		.file 4 "Generated_Source\\PSoC5\\UART_1_IntClock.h"
 1031              		.section	.debug_info,"",%progbits
 1032              	.Ldebug_info0:
 1033 0000 08060000 		.4byte	0x608
 1034 0004 0400     		.2byte	0x4
 1035 0006 00000000 		.4byte	.Ldebug_abbrev0
 1036 000a 04       		.byte	0x4
 1037 000b 01       		.uleb128 0x1
 1038 000c DE000000 		.4byte	.LASF59
 1039 0010 0C       		.byte	0xc
 1040 0011 00000000 		.4byte	.LASF60
 1041 0015 84010000 		.4byte	.LASF61
 1042 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1043 001d 00000000 		.4byte	0
 1044 0021 00000000 		.4byte	.Ldebug_line0
 1045 0025 02       		.uleb128 0x2
 1046 0026 01       		.byte	0x1
 1047 0027 06       		.byte	0x6
 1048 0028 D2000000 		.4byte	.LASF0
 1049 002c 02       		.uleb128 0x2
 1050 002d 01       		.byte	0x1
 1051 002e 08       		.byte	0x8
 1052 002f A5030000 		.4byte	.LASF1
 1053 0033 02       		.uleb128 0x2
 1054 0034 02       		.byte	0x2
 1055 0035 05       		.byte	0x5
 1056 0036 B3030000 		.4byte	.LASF2
 1057 003a 02       		.uleb128 0x2
 1058 003b 02       		.byte	0x2
 1059 003c 07       		.byte	0x7
 1060 003d 70020000 		.4byte	.LASF3
 1061 0041 02       		.uleb128 0x2
 1062 0042 04       		.byte	0x4
 1063 0043 05       		.byte	0x5
 1064 0044 BB010000 		.4byte	.LASF4
 1065 0048 02       		.uleb128 0x2
 1066 0049 04       		.byte	0x4
 1067 004a 07       		.byte	0x7
 1068 004b 42020000 		.4byte	.LASF5
 1069 004f 02       		.uleb128 0x2
 1070 0050 08       		.byte	0x8
 1071 0051 05       		.byte	0x5
 1072 0052 C4000000 		.4byte	.LASF6
 1073 0056 02       		.uleb128 0x2
 1074 0057 08       		.byte	0x8
 1075 0058 07       		.byte	0x7
 1076 0059 96000000 		.4byte	.LASF7
 1077 005d 03       		.uleb128 0x3
 1078 005e 04       		.byte	0x4
 1079 005f 05       		.byte	0x5
 1080 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 48


 1081 0064 02       		.uleb128 0x2
 1082 0065 04       		.byte	0x4
 1083 0066 07       		.byte	0x7
 1084 0067 21020000 		.4byte	.LASF8
 1085 006b 04       		.uleb128 0x4
 1086 006c D1010000 		.4byte	.LASF9
 1087 0070 02       		.byte	0x2
 1088 0071 E401     		.2byte	0x1e4
 1089 0073 2C000000 		.4byte	0x2c
 1090 0077 04       		.uleb128 0x4
 1091 0078 20000000 		.4byte	.LASF10
 1092 007c 02       		.byte	0x2
 1093 007d E501     		.2byte	0x1e5
 1094 007f 3A000000 		.4byte	0x3a
 1095 0083 02       		.uleb128 0x2
 1096 0084 04       		.byte	0x4
 1097 0085 04       		.byte	0x4
 1098 0086 74030000 		.4byte	.LASF11
 1099 008a 02       		.uleb128 0x2
 1100 008b 08       		.byte	0x8
 1101 008c 04       		.byte	0x4
 1102 008d D7010000 		.4byte	.LASF12
 1103 0091 04       		.uleb128 0x4
 1104 0092 F9030000 		.4byte	.LASF13
 1105 0096 02       		.byte	0x2
 1106 0097 F501     		.2byte	0x1f5
 1107 0099 9D000000 		.4byte	0x9d
 1108 009d 02       		.uleb128 0x2
 1109 009e 01       		.byte	0x1
 1110 009f 08       		.byte	0x8
 1111 00a0 F4030000 		.4byte	.LASF14
 1112 00a4 04       		.uleb128 0x4
 1113 00a5 A0030000 		.4byte	.LASF15
 1114 00a9 02       		.byte	0x2
 1115 00aa 8E02     		.2byte	0x28e
 1116 00ac B0000000 		.4byte	0xb0
 1117 00b0 05       		.uleb128 0x5
 1118 00b1 6B000000 		.4byte	0x6b
 1119 00b5 02       		.uleb128 0x2
 1120 00b6 08       		.byte	0x8
 1121 00b7 04       		.byte	0x4
 1122 00b8 3D030000 		.4byte	.LASF16
 1123 00bc 02       		.uleb128 0x2
 1124 00bd 04       		.byte	0x4
 1125 00be 07       		.byte	0x7
 1126 00bf 0A030000 		.4byte	.LASF17
 1127 00c3 06       		.uleb128 0x6
 1128 00c4 84000000 		.4byte	.LASF18
 1129 00c8 01       		.byte	0x1
 1130 00c9 8801     		.2byte	0x188
 1131 00cb 6B000000 		.4byte	0x6b
 1132 00cf 01       		.byte	0x1
 1133 00d0 E1000000 		.4byte	0xe1
 1134 00d4 07       		.uleb128 0x7
 1135 00d5 ED030000 		.4byte	.LASF20
 1136 00d9 01       		.byte	0x1
 1137 00da 8A01     		.2byte	0x18a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 49


 1138 00dc 6B000000 		.4byte	0x6b
 1139 00e0 00       		.byte	0
 1140 00e1 06       		.uleb128 0x6
 1141 00e2 39040000 		.4byte	.LASF19
 1142 00e6 01       		.byte	0x1
 1143 00e7 E501     		.2byte	0x1e5
 1144 00e9 6B000000 		.4byte	0x6b
 1145 00ed 01       		.byte	0x1
 1146 00ee FF000000 		.4byte	0xff
 1147 00f2 07       		.uleb128 0x7
 1148 00f3 1C040000 		.4byte	.LASF21
 1149 00f7 01       		.byte	0x1
 1150 00f8 E701     		.2byte	0x1e7
 1151 00fa 6B000000 		.4byte	0x6b
 1152 00fe 00       		.byte	0
 1153 00ff 08       		.uleb128 0x8
 1154 0100 FF030000 		.4byte	.LASF62
 1155 0104 01       		.byte	0x1
 1156 0105 6A       		.byte	0x6a
 1157 0106 00000000 		.4byte	.LFB1
 1158 010a 24000000 		.4byte	.LFE1-.LFB1
 1159 010e 01       		.uleb128 0x1
 1160 010f 9C       		.byte	0x9c
 1161 0110 09       		.uleb128 0x9
 1162 0111 83020000 		.4byte	.LASF22
 1163 0115 01       		.byte	0x1
 1164 0116 B7       		.byte	0xb7
 1165 0117 00000000 		.4byte	.LFB2
 1166 011b 3C000000 		.4byte	.LFE2-.LFB2
 1167 011f 01       		.uleb128 0x1
 1168 0120 9C       		.byte	0x9c
 1169 0121 50010000 		.4byte	0x150
 1170 0125 0A       		.uleb128 0xa
 1171 0126 0B040000 		.4byte	.LASF25
 1172 012a 01       		.byte	0x1
 1173 012b B9       		.byte	0xb9
 1174 012c 6B000000 		.4byte	0x6b
 1175 0130 00000000 		.4byte	.LLST0
 1176 0134 0B       		.uleb128 0xb
 1177 0135 06000000 		.4byte	.LVL0
 1178 0139 DF050000 		.4byte	0x5df
 1179 013d 0B       		.uleb128 0xb
 1180 013e 2C000000 		.4byte	.LVL2
 1181 0142 EA050000 		.4byte	0x5ea
 1182 0146 0C       		.uleb128 0xc
 1183 0147 36000000 		.4byte	.LVL4
 1184 014b F5050000 		.4byte	0x5f5
 1185 014f 00       		.byte	0
 1186 0150 09       		.uleb128 0x9
 1187 0151 C4010000 		.4byte	.LASF23
 1188 0155 01       		.byte	0x1
 1189 0156 4C       		.byte	0x4c
 1190 0157 00000000 		.4byte	.LFB0
 1191 015b 1C000000 		.4byte	.LFE0-.LFB0
 1192 015f 01       		.uleb128 0x1
 1193 0160 9C       		.byte	0x9c
 1194 0161 78010000 		.4byte	0x178
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 50


 1195 0165 0B       		.uleb128 0xb
 1196 0166 0C000000 		.4byte	.LVL5
 1197 016a FF000000 		.4byte	0xff
 1198 016e 0C       		.uleb128 0xc
 1199 016f 18000000 		.4byte	.LVL6
 1200 0173 10010000 		.4byte	0x110
 1201 0177 00       		.byte	0
 1202 0178 09       		.uleb128 0x9
 1203 0179 D4020000 		.4byte	.LASF24
 1204 017d 01       		.byte	0x1
 1205 017e F0       		.byte	0xf0
 1206 017f 00000000 		.4byte	.LFB3
 1207 0183 40000000 		.4byte	.LFE3-.LFB3
 1208 0187 01       		.uleb128 0x1
 1209 0188 9C       		.byte	0x9c
 1210 0189 B8010000 		.4byte	0x1b8
 1211 018d 0A       		.uleb128 0xa
 1212 018e 0B040000 		.4byte	.LASF25
 1213 0192 01       		.byte	0x1
 1214 0193 F2       		.byte	0xf2
 1215 0194 6B000000 		.4byte	0x6b
 1216 0198 13000000 		.4byte	.LLST1
 1217 019c 0B       		.uleb128 0xb
 1218 019d 06000000 		.4byte	.LVL7
 1219 01a1 DF050000 		.4byte	0x5df
 1220 01a5 0B       		.uleb128 0xb
 1221 01a6 16000000 		.4byte	.LVL9
 1222 01aa 00060000 		.4byte	0x600
 1223 01ae 0C       		.uleb128 0xc
 1224 01af 38000000 		.4byte	.LVL11
 1225 01b3 F5050000 		.4byte	0x5f5
 1226 01b7 00       		.byte	0
 1227 01b8 0D       		.uleb128 0xd
 1228 01b9 B9020000 		.4byte	.LASF40
 1229 01bd 01       		.byte	0x1
 1230 01be 2701     		.2byte	0x127
 1231 01c0 6B000000 		.4byte	0x6b
 1232 01c4 00000000 		.4byte	.LFB4
 1233 01c8 04000000 		.4byte	.LFE4-.LFB4
 1234 01cc 01       		.uleb128 0x1
 1235 01cd 9C       		.byte	0x9c
 1236 01ce 0E       		.uleb128 0xe
 1237 01cf FF010000 		.4byte	.LASF26
 1238 01d3 01       		.byte	0x1
 1239 01d4 6701     		.2byte	0x167
 1240 01d6 00000000 		.4byte	.LFB6
 1241 01da 0C000000 		.4byte	.LFE6-.LFB6
 1242 01de 01       		.uleb128 0x1
 1243 01df 9C       		.byte	0x9c
 1244 01e0 F3010000 		.4byte	0x1f3
 1245 01e4 0F       		.uleb128 0xf
 1246 01e5 B2020000 		.4byte	.LASF34
 1247 01e9 01       		.byte	0x1
 1248 01ea 6701     		.2byte	0x167
 1249 01ec 6B000000 		.4byte	0x6b
 1250 01f0 01       		.uleb128 0x1
 1251 01f1 50       		.byte	0x50
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 51


 1252 01f2 00       		.byte	0
 1253 01f3 10       		.uleb128 0x10
 1254 01f4 C3000000 		.4byte	0xc3
 1255 01f8 00000000 		.4byte	.LFB7
 1256 01fc 0C000000 		.4byte	.LFE7-.LFB7
 1257 0200 01       		.uleb128 0x1
 1258 0201 9C       		.byte	0x9c
 1259 0202 0E020000 		.4byte	0x20e
 1260 0206 11       		.uleb128 0x11
 1261 0207 D4000000 		.4byte	0xd4
 1262 020b 01       		.uleb128 0x1
 1263 020c 50       		.byte	0x50
 1264 020d 00       		.byte	0
 1265 020e 10       		.uleb128 0x10
 1266 020f E1000000 		.4byte	0xe1
 1267 0213 00000000 		.4byte	.LFB8
 1268 0217 10000000 		.4byte	.LFE8-.LFB8
 1269 021b 01       		.uleb128 0x1
 1270 021c 9C       		.byte	0x9c
 1271 021d 2B020000 		.4byte	0x22b
 1272 0221 12       		.uleb128 0x12
 1273 0222 F2000000 		.4byte	0xf2
 1274 0226 26000000 		.4byte	.LLST2
 1275 022a 00       		.byte	0
 1276 022b 13       		.uleb128 0x13
 1277 022c 4D040000 		.4byte	.LASF28
 1278 0230 01       		.byte	0x1
 1279 0231 1402     		.2byte	0x214
 1280 0233 6B000000 		.4byte	0x6b
 1281 0237 00000000 		.4byte	.LFB9
 1282 023b 28000000 		.4byte	.LFE9-.LFB9
 1283 023f 01       		.uleb128 0x1
 1284 0240 9C       		.byte	0x9c
 1285 0241 64020000 		.4byte	0x264
 1286 0245 14       		.uleb128 0x14
 1287 0246 ED030000 		.4byte	.LASF20
 1288 024a 01       		.byte	0x1
 1289 024b 1602     		.2byte	0x216
 1290 024d 6B000000 		.4byte	0x6b
 1291 0251 3E000000 		.4byte	.LLST3
 1292 0255 15       		.uleb128 0x15
 1293 0256 51030000 		.4byte	.LASF27
 1294 025a 01       		.byte	0x1
 1295 025b 1702     		.2byte	0x217
 1296 025d 6B000000 		.4byte	0x6b
 1297 0261 01       		.uleb128 0x1
 1298 0262 53       		.byte	0x53
 1299 0263 00       		.byte	0
 1300 0264 13       		.uleb128 0x13
 1301 0265 E0020000 		.4byte	.LASF29
 1302 0269 01       		.byte	0x1
 1303 026a 7A02     		.2byte	0x27a
 1304 026c 77000000 		.4byte	0x77
 1305 0270 00000000 		.4byte	.LFB10
 1306 0274 1C000000 		.4byte	.LFE10-.LFB10
 1307 0278 01       		.uleb128 0x1
 1308 0279 9C       		.byte	0x9c
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 52


 1309 027a BB020000 		.4byte	0x2bb
 1310 027e 16       		.uleb128 0x16
 1311 027f E1000000 		.4byte	0xe1
 1312 0283 00000000 		.4byte	.LBB6
 1313 0287 00000000 		.4byte	.Ldebug_ranges0+0
 1314 028b 01       		.byte	0x1
 1315 028c 8602     		.2byte	0x286
 1316 028e 9E020000 		.4byte	0x29e
 1317 0292 17       		.uleb128 0x17
 1318 0293 00000000 		.4byte	.Ldebug_ranges0+0
 1319 0297 18       		.uleb128 0x18
 1320 0298 F2000000 		.4byte	0xf2
 1321 029c 00       		.byte	0
 1322 029d 00       		.byte	0
 1323 029e 19       		.uleb128 0x19
 1324 029f C3000000 		.4byte	0xc3
 1325 02a3 02000000 		.4byte	.LBB9
 1326 02a7 18000000 		.4byte	.Ldebug_ranges0+0x18
 1327 02ab 01       		.byte	0x1
 1328 02ac 8602     		.2byte	0x286
 1329 02ae 17       		.uleb128 0x17
 1330 02af 18000000 		.4byte	.Ldebug_ranges0+0x18
 1331 02b3 18       		.uleb128 0x18
 1332 02b4 D4000000 		.4byte	0xd4
 1333 02b8 00       		.byte	0
 1334 02b9 00       		.byte	0
 1335 02ba 00       		.byte	0
 1336 02bb 13       		.uleb128 0x13
 1337 02bc D6030000 		.4byte	.LASF30
 1338 02c0 01       		.byte	0x1
 1339 02c1 AB02     		.2byte	0x2ab
 1340 02c3 6B000000 		.4byte	0x6b
 1341 02c7 00000000 		.4byte	.LFB11
 1342 02cb 10000000 		.4byte	.LFE11-.LFB11
 1343 02cf 01       		.uleb128 0x1
 1344 02d0 9C       		.byte	0x9c
 1345 02d1 E6020000 		.4byte	0x2e6
 1346 02d5 14       		.uleb128 0x14
 1347 02d6 6B020000 		.4byte	.LASF31
 1348 02da 01       		.byte	0x1
 1349 02db AE02     		.2byte	0x2ae
 1350 02dd 6B000000 		.4byte	0x6b
 1351 02e1 5D000000 		.4byte	.LLST4
 1352 02e5 00       		.byte	0
 1353 02e6 0E       		.uleb128 0xe
 1354 02e7 8B030000 		.4byte	.LASF32
 1355 02eb 01       		.byte	0x1
 1356 02ec F502     		.2byte	0x2f5
 1357 02ee 00000000 		.4byte	.LFB12
 1358 02f2 24000000 		.4byte	.LFE12-.LFB12
 1359 02f6 01       		.uleb128 0x1
 1360 02f7 9C       		.byte	0x9c
 1361 02f8 1F030000 		.4byte	0x31f
 1362 02fc 14       		.uleb128 0x14
 1363 02fd 0B040000 		.4byte	.LASF25
 1364 0301 01       		.byte	0x1
 1365 0302 F702     		.2byte	0x2f7
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 53


 1366 0304 6B000000 		.4byte	0x6b
 1367 0308 79000000 		.4byte	.LLST5
 1368 030c 0B       		.uleb128 0xb
 1369 030d 06000000 		.4byte	.LVL22
 1370 0311 DF050000 		.4byte	0x5df
 1371 0315 0C       		.uleb128 0xc
 1372 0316 20000000 		.4byte	.LVL23
 1373 031a F5050000 		.4byte	0x5f5
 1374 031e 00       		.byte	0
 1375 031f 0E       		.uleb128 0xe
 1376 0320 13030000 		.4byte	.LASF33
 1377 0324 01       		.byte	0x1
 1378 0325 5903     		.2byte	0x359
 1379 0327 00000000 		.4byte	.LFB14
 1380 032b 0C000000 		.4byte	.LFE14-.LFB14
 1381 032f 01       		.uleb128 0x1
 1382 0330 9C       		.byte	0x9c
 1383 0331 44030000 		.4byte	0x344
 1384 0335 0F       		.uleb128 0xf
 1385 0336 49030000 		.4byte	.LASF35
 1386 033a 01       		.byte	0x1
 1387 033b 5903     		.2byte	0x359
 1388 033d 6B000000 		.4byte	0x6b
 1389 0341 01       		.uleb128 0x1
 1390 0342 50       		.byte	0x50
 1391 0343 00       		.byte	0
 1392 0344 0E       		.uleb128 0xe
 1393 0345 28030000 		.4byte	.LASF36
 1394 0349 01       		.byte	0x1
 1395 034a 6D03     		.2byte	0x36d
 1396 034c 00000000 		.4byte	.LFB15
 1397 0350 0C000000 		.4byte	.LFE15-.LFB15
 1398 0354 01       		.uleb128 0x1
 1399 0355 9C       		.byte	0x9c
 1400 0356 69030000 		.4byte	0x369
 1401 035a 0F       		.uleb128 0xf
 1402 035b 49030000 		.4byte	.LASF35
 1403 035f 01       		.byte	0x1
 1404 0360 6D03     		.2byte	0x36d
 1405 0362 6B000000 		.4byte	0x6b
 1406 0366 01       		.uleb128 0x1
 1407 0367 50       		.byte	0x50
 1408 0368 00       		.byte	0
 1409 0369 0E       		.uleb128 0xe
 1410 036a 5A030000 		.4byte	.LASF37
 1411 036e 01       		.byte	0x1
 1412 036f 8C03     		.2byte	0x38c
 1413 0371 00000000 		.4byte	.LFB16
 1414 0375 0C000000 		.4byte	.LFE16-.LFB16
 1415 0379 01       		.uleb128 0x1
 1416 037a 9C       		.byte	0x9c
 1417 037b 8E030000 		.4byte	0x38e
 1418 037f 0F       		.uleb128 0xf
 1419 0380 B2020000 		.4byte	.LASF34
 1420 0384 01       		.byte	0x1
 1421 0385 8C03     		.2byte	0x38c
 1422 0387 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 54


 1423 038b 01       		.uleb128 0x1
 1424 038c 50       		.byte	0x50
 1425 038d 00       		.byte	0
 1426 038e 0E       		.uleb128 0xe
 1427 038f EF020000 		.4byte	.LASF38
 1428 0393 01       		.byte	0x1
 1429 0394 AE03     		.2byte	0x3ae
 1430 0396 00000000 		.4byte	.LFB17
 1431 039a 14000000 		.4byte	.LFE17-.LFB17
 1432 039e 01       		.uleb128 0x1
 1433 039f 9C       		.byte	0x9c
 1434 03a0 B3030000 		.4byte	0x3b3
 1435 03a4 0F       		.uleb128 0xf
 1436 03a5 52000000 		.4byte	.LASF39
 1437 03a9 01       		.byte	0x1
 1438 03aa AE03     		.2byte	0x3ae
 1439 03ac 6B000000 		.4byte	0x6b
 1440 03b0 01       		.uleb128 0x1
 1441 03b1 50       		.byte	0x50
 1442 03b2 00       		.byte	0
 1443 03b3 0D       		.uleb128 0xd
 1444 03b4 2E020000 		.4byte	.LASF41
 1445 03b8 01       		.byte	0x1
 1446 03b9 EB03     		.2byte	0x3eb
 1447 03bb 6B000000 		.4byte	0x6b
 1448 03bf 00000000 		.4byte	.LFB18
 1449 03c3 0C000000 		.4byte	.LFE18-.LFB18
 1450 03c7 01       		.uleb128 0x1
 1451 03c8 9C       		.byte	0x9c
 1452 03c9 0E       		.uleb128 0xe
 1453 03ca 5D000000 		.4byte	.LASF42
 1454 03ce 01       		.byte	0x1
 1455 03cf 1104     		.2byte	0x411
 1456 03d1 00000000 		.4byte	.LFB19
 1457 03d5 18000000 		.4byte	.LFE19-.LFB19
 1458 03d9 01       		.uleb128 0x1
 1459 03da 9C       		.byte	0x9c
 1460 03db EE030000 		.4byte	0x3ee
 1461 03df 0F       		.uleb128 0xf
 1462 03e0 52000000 		.4byte	.LASF39
 1463 03e4 01       		.byte	0x1
 1464 03e5 1104     		.2byte	0x411
 1465 03e7 6B000000 		.4byte	0x6b
 1466 03eb 01       		.uleb128 0x1
 1467 03ec 50       		.byte	0x50
 1468 03ed 00       		.byte	0
 1469 03ee 0E       		.uleb128 0xe
 1470 03ef 7A030000 		.4byte	.LASF43
 1471 03f3 01       		.byte	0x1
 1472 03f4 7904     		.2byte	0x479
 1473 03f6 00000000 		.4byte	.LFB20
 1474 03fa 20000000 		.4byte	.LFE20-.LFB20
 1475 03fe 01       		.uleb128 0x1
 1476 03ff 9C       		.byte	0x9c
 1477 0400 2E040000 		.4byte	0x42e
 1478 0404 1A       		.uleb128 0x1a
 1479 0405 6C000000 		.4byte	.LASF44
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 55


 1480 0409 01       		.byte	0x1
 1481 040a 7904     		.2byte	0x479
 1482 040c 2E040000 		.4byte	0x42e
 1483 0410 8C000000 		.4byte	.LLST6
 1484 0414 14       		.uleb128 0x14
 1485 0415 91020000 		.4byte	.LASF45
 1486 0419 01       		.byte	0x1
 1487 041a 7B04     		.2byte	0x47b
 1488 041c 77000000 		.4byte	0x77
 1489 0420 B8000000 		.4byte	.LLST7
 1490 0424 0B       		.uleb128 0xb
 1491 0425 18000000 		.4byte	.LVL32
 1492 0429 C9030000 		.4byte	0x3c9
 1493 042d 00       		.byte	0
 1494 042e 1B       		.uleb128 0x1b
 1495 042f 04       		.byte	0x4
 1496 0430 34040000 		.4byte	0x434
 1497 0434 1C       		.uleb128 0x1c
 1498 0435 91000000 		.4byte	0x91
 1499 0439 0E       		.uleb128 0xe
 1500 043a 5C040000 		.4byte	.LASF46
 1501 043e 01       		.byte	0x1
 1502 043f A704     		.2byte	0x4a7
 1503 0441 00000000 		.4byte	.LFB21
 1504 0445 24000000 		.4byte	.LFE21-.LFB21
 1505 0449 01       		.uleb128 0x1
 1506 044a 9C       		.byte	0x9c
 1507 044b 89040000 		.4byte	0x489
 1508 044f 1A       		.uleb128 0x1a
 1509 0450 6C000000 		.4byte	.LASF44
 1510 0454 01       		.byte	0x1
 1511 0455 A704     		.2byte	0x4a7
 1512 0457 89040000 		.4byte	0x489
 1513 045b ED000000 		.4byte	.LLST8
 1514 045f 1A       		.uleb128 0x1a
 1515 0460 CC030000 		.4byte	.LASF47
 1516 0464 01       		.byte	0x1
 1517 0465 A704     		.2byte	0x4a7
 1518 0467 6B000000 		.4byte	0x6b
 1519 046b 0E010000 		.4byte	.LLST9
 1520 046f 14       		.uleb128 0x14
 1521 0470 91020000 		.4byte	.LASF45
 1522 0474 01       		.byte	0x1
 1523 0475 AA04     		.2byte	0x4aa
 1524 0477 6B000000 		.4byte	0x6b
 1525 047b 2F010000 		.4byte	.LLST10
 1526 047f 0B       		.uleb128 0xb
 1527 0480 1A000000 		.4byte	.LVL39
 1528 0484 C9030000 		.4byte	0x3c9
 1529 0488 00       		.byte	0
 1530 0489 1B       		.uleb128 0x1b
 1531 048a 04       		.byte	0x4
 1532 048b 8F040000 		.4byte	0x48f
 1533 048f 1C       		.uleb128 0x1c
 1534 0490 6B000000 		.4byte	0x6b
 1535 0494 0E       		.uleb128 0xe
 1536 0495 75010000 		.4byte	.LASF48
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 56


 1537 0499 01       		.byte	0x1
 1538 049a CE04     		.2byte	0x4ce
 1539 049c 00000000 		.4byte	.LFB22
 1540 04a0 24000000 		.4byte	.LFE22-.LFB22
 1541 04a4 01       		.uleb128 0x1
 1542 04a5 9C       		.byte	0x9c
 1543 04a6 E6040000 		.4byte	0x4e6
 1544 04aa 1A       		.uleb128 0x1a
 1545 04ab 52000000 		.4byte	.LASF39
 1546 04af 01       		.byte	0x1
 1547 04b0 CE04     		.2byte	0x4ce
 1548 04b2 6B000000 		.4byte	0x6b
 1549 04b6 69010000 		.4byte	.LLST11
 1550 04ba 0B       		.uleb128 0xb
 1551 04bb 0C000000 		.4byte	.LVL42
 1552 04bf C9030000 		.4byte	0x3c9
 1553 04c3 1D       		.uleb128 0x1d
 1554 04c4 12000000 		.4byte	.LVL43
 1555 04c8 C9030000 		.4byte	0x3c9
 1556 04cc D6040000 		.4byte	0x4d6
 1557 04d0 1E       		.uleb128 0x1e
 1558 04d1 01       		.uleb128 0x1
 1559 04d2 50       		.byte	0x50
 1560 04d3 01       		.uleb128 0x1
 1561 04d4 3D       		.byte	0x3d
 1562 04d5 00       		.byte	0
 1563 04d6 1F       		.uleb128 0x1f
 1564 04d7 1C000000 		.4byte	.LVL44
 1565 04db C9030000 		.4byte	0x3c9
 1566 04df 1E       		.uleb128 0x1e
 1567 04e0 01       		.uleb128 0x1
 1568 04e1 50       		.byte	0x50
 1569 04e2 01       		.uleb128 0x1
 1570 04e3 3A       		.byte	0x3a
 1571 04e4 00       		.byte	0
 1572 04e5 00       		.byte	0
 1573 04e6 13       		.uleb128 0x13
 1574 04e7 AD000000 		.4byte	.LASF49
 1575 04eb 01       		.byte	0x1
 1576 04ec F904     		.2byte	0x4f9
 1577 04ee 6B000000 		.4byte	0x6b
 1578 04f2 00000000 		.4byte	.LFB23
 1579 04f6 1C000000 		.4byte	.LFE23-.LFB23
 1580 04fa 01       		.uleb128 0x1
 1581 04fb 9C       		.byte	0x9c
 1582 04fc 11050000 		.4byte	0x511
 1583 0500 14       		.uleb128 0x14
 1584 0501 6B020000 		.4byte	.LASF31
 1585 0505 01       		.byte	0x1
 1586 0506 FC04     		.2byte	0x4fc
 1587 0508 6B000000 		.4byte	0x6b
 1588 050c 95010000 		.4byte	.LLST12
 1589 0510 00       		.byte	0
 1590 0511 0E       		.uleb128 0xe
 1591 0512 27000000 		.4byte	.LASF50
 1592 0516 01       		.byte	0x1
 1593 0517 4A05     		.2byte	0x54a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 57


 1594 0519 00000000 		.4byte	.LFB24
 1595 051d 24000000 		.4byte	.LFE24-.LFB24
 1596 0521 01       		.uleb128 0x1
 1597 0522 9C       		.byte	0x9c
 1598 0523 4A050000 		.4byte	0x54a
 1599 0527 14       		.uleb128 0x14
 1600 0528 0B040000 		.4byte	.LASF25
 1601 052c 01       		.byte	0x1
 1602 052d 4C05     		.2byte	0x54c
 1603 052f 6B000000 		.4byte	0x6b
 1604 0533 B3010000 		.4byte	.LLST13
 1605 0537 0B       		.uleb128 0xb
 1606 0538 06000000 		.4byte	.LVL48
 1607 053c DF050000 		.4byte	0x5df
 1608 0540 0C       		.uleb128 0xc
 1609 0541 20000000 		.4byte	.LVL49
 1610 0545 F5050000 		.4byte	0x5f5
 1611 0549 00       		.byte	0
 1612 054a 0E       		.uleb128 0xe
 1613 054b 73000000 		.4byte	.LASF51
 1614 054f 01       		.byte	0x1
 1615 0550 A005     		.2byte	0x5a0
 1616 0552 00000000 		.4byte	.LFB25
 1617 0556 58000000 		.4byte	.LFE25-.LFB25
 1618 055a 01       		.uleb128 0x1
 1619 055b 9C       		.byte	0x9c
 1620 055c 99050000 		.4byte	0x599
 1621 0560 1A       		.uleb128 0x1a
 1622 0561 19020000 		.4byte	.LASF52
 1623 0565 01       		.byte	0x1
 1624 0566 A005     		.2byte	0x5a0
 1625 0568 6B000000 		.4byte	0x6b
 1626 056c C6010000 		.4byte	.LLST14
 1627 0570 17       		.uleb128 0x17
 1628 0571 30000000 		.4byte	.Ldebug_ranges0+0x30
 1629 0575 14       		.uleb128 0x14
 1630 0576 02030000 		.4byte	.LASF53
 1631 057a 01       		.byte	0x1
 1632 057b A805     		.2byte	0x5a8
 1633 057d 6B000000 		.4byte	0x6b
 1634 0581 0B020000 		.4byte	.LLST15
 1635 0585 15       		.uleb128 0x15
 1636 0586 6C010000 		.4byte	.LASF54
 1637 058a 01       		.byte	0x1
 1638 058b D005     		.2byte	0x5d0
 1639 058d 6B000000 		.4byte	0x6b
 1640 0591 05       		.uleb128 0x5
 1641 0592 03       		.byte	0x3
 1642 0593 01000000 		.4byte	txPeriod.5122
 1643 0597 00       		.byte	0
 1644 0598 00       		.byte	0
 1645 0599 20       		.uleb128 0x20
 1646 059a 9A020000 		.4byte	.LASF63
 1647 059e 01       		.byte	0x1
 1648 059f 2406     		.2byte	0x624
 1649 05a1 01       		.byte	0x1
 1650 05a2 B3050000 		.4byte	0x5b3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 58


 1651 05a6 21       		.uleb128 0x21
 1652 05a7 DE010000 		.4byte	.LASF64
 1653 05ab 01       		.byte	0x1
 1654 05ac 2406     		.2byte	0x624
 1655 05ae 6B000000 		.4byte	0x6b
 1656 05b2 00       		.byte	0
 1657 05b3 10       		.uleb128 0x10
 1658 05b4 99050000 		.4byte	0x599
 1659 05b8 00000000 		.4byte	.LFB26
 1660 05bc 02000000 		.4byte	.LFE26-.LFB26
 1661 05c0 01       		.uleb128 0x1
 1662 05c1 9C       		.byte	0x9c
 1663 05c2 CE050000 		.4byte	0x5ce
 1664 05c6 22       		.uleb128 0x22
 1665 05c7 A6050000 		.4byte	0x5a6
 1666 05cb 01       		.uleb128 0x1
 1667 05cc 50       		.byte	0x50
 1668 05cd 00       		.byte	0
 1669 05ce 23       		.uleb128 0x23
 1670 05cf BD030000 		.4byte	.LASF65
 1671 05d3 01       		.byte	0x1
 1672 05d4 1B       		.byte	0x1b
 1673 05d5 6B000000 		.4byte	0x6b
 1674 05d9 05       		.uleb128 0x5
 1675 05da 03       		.byte	0x3
 1676 05db 00000000 		.4byte	UART_1_initVar
 1677 05df 24       		.uleb128 0x24
 1678 05e0 54020000 		.4byte	.LASF55
 1679 05e4 54020000 		.4byte	.LASF55
 1680 05e8 03       		.byte	0x3
 1681 05e9 7D       		.byte	0x7d
 1682 05ea 24       		.uleb128 0x24
 1683 05eb 23040000 		.4byte	.LASF56
 1684 05ef 23040000 		.4byte	.LASF56
 1685 05f3 04       		.byte	0x4
 1686 05f4 27       		.byte	0x27
 1687 05f5 24       		.uleb128 0x24
 1688 05f6 3C000000 		.4byte	.LASF57
 1689 05fa 3C000000 		.4byte	.LASF57
 1690 05fe 03       		.byte	0x3
 1691 05ff 7E       		.byte	0x7e
 1692 0600 24       		.uleb128 0x24
 1693 0601 EA010000 		.4byte	.LASF58
 1694 0605 EA010000 		.4byte	.LASF58
 1695 0609 04       		.byte	0x4
 1696 060a 28       		.byte	0x28
 1697 060b 00       		.byte	0
 1698              		.section	.debug_abbrev,"",%progbits
 1699              	.Ldebug_abbrev0:
 1700 0000 01       		.uleb128 0x1
 1701 0001 11       		.uleb128 0x11
 1702 0002 01       		.byte	0x1
 1703 0003 25       		.uleb128 0x25
 1704 0004 0E       		.uleb128 0xe
 1705 0005 13       		.uleb128 0x13
 1706 0006 0B       		.uleb128 0xb
 1707 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 59


 1708 0008 0E       		.uleb128 0xe
 1709 0009 1B       		.uleb128 0x1b
 1710 000a 0E       		.uleb128 0xe
 1711 000b 55       		.uleb128 0x55
 1712 000c 17       		.uleb128 0x17
 1713 000d 11       		.uleb128 0x11
 1714 000e 01       		.uleb128 0x1
 1715 000f 10       		.uleb128 0x10
 1716 0010 17       		.uleb128 0x17
 1717 0011 00       		.byte	0
 1718 0012 00       		.byte	0
 1719 0013 02       		.uleb128 0x2
 1720 0014 24       		.uleb128 0x24
 1721 0015 00       		.byte	0
 1722 0016 0B       		.uleb128 0xb
 1723 0017 0B       		.uleb128 0xb
 1724 0018 3E       		.uleb128 0x3e
 1725 0019 0B       		.uleb128 0xb
 1726 001a 03       		.uleb128 0x3
 1727 001b 0E       		.uleb128 0xe
 1728 001c 00       		.byte	0
 1729 001d 00       		.byte	0
 1730 001e 03       		.uleb128 0x3
 1731 001f 24       		.uleb128 0x24
 1732 0020 00       		.byte	0
 1733 0021 0B       		.uleb128 0xb
 1734 0022 0B       		.uleb128 0xb
 1735 0023 3E       		.uleb128 0x3e
 1736 0024 0B       		.uleb128 0xb
 1737 0025 03       		.uleb128 0x3
 1738 0026 08       		.uleb128 0x8
 1739 0027 00       		.byte	0
 1740 0028 00       		.byte	0
 1741 0029 04       		.uleb128 0x4
 1742 002a 16       		.uleb128 0x16
 1743 002b 00       		.byte	0
 1744 002c 03       		.uleb128 0x3
 1745 002d 0E       		.uleb128 0xe
 1746 002e 3A       		.uleb128 0x3a
 1747 002f 0B       		.uleb128 0xb
 1748 0030 3B       		.uleb128 0x3b
 1749 0031 05       		.uleb128 0x5
 1750 0032 49       		.uleb128 0x49
 1751 0033 13       		.uleb128 0x13
 1752 0034 00       		.byte	0
 1753 0035 00       		.byte	0
 1754 0036 05       		.uleb128 0x5
 1755 0037 35       		.uleb128 0x35
 1756 0038 00       		.byte	0
 1757 0039 49       		.uleb128 0x49
 1758 003a 13       		.uleb128 0x13
 1759 003b 00       		.byte	0
 1760 003c 00       		.byte	0
 1761 003d 06       		.uleb128 0x6
 1762 003e 2E       		.uleb128 0x2e
 1763 003f 01       		.byte	0x1
 1764 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 60


 1765 0041 19       		.uleb128 0x19
 1766 0042 03       		.uleb128 0x3
 1767 0043 0E       		.uleb128 0xe
 1768 0044 3A       		.uleb128 0x3a
 1769 0045 0B       		.uleb128 0xb
 1770 0046 3B       		.uleb128 0x3b
 1771 0047 05       		.uleb128 0x5
 1772 0048 27       		.uleb128 0x27
 1773 0049 19       		.uleb128 0x19
 1774 004a 49       		.uleb128 0x49
 1775 004b 13       		.uleb128 0x13
 1776 004c 20       		.uleb128 0x20
 1777 004d 0B       		.uleb128 0xb
 1778 004e 01       		.uleb128 0x1
 1779 004f 13       		.uleb128 0x13
 1780 0050 00       		.byte	0
 1781 0051 00       		.byte	0
 1782 0052 07       		.uleb128 0x7
 1783 0053 34       		.uleb128 0x34
 1784 0054 00       		.byte	0
 1785 0055 03       		.uleb128 0x3
 1786 0056 0E       		.uleb128 0xe
 1787 0057 3A       		.uleb128 0x3a
 1788 0058 0B       		.uleb128 0xb
 1789 0059 3B       		.uleb128 0x3b
 1790 005a 05       		.uleb128 0x5
 1791 005b 49       		.uleb128 0x49
 1792 005c 13       		.uleb128 0x13
 1793 005d 00       		.byte	0
 1794 005e 00       		.byte	0
 1795 005f 08       		.uleb128 0x8
 1796 0060 2E       		.uleb128 0x2e
 1797 0061 00       		.byte	0
 1798 0062 3F       		.uleb128 0x3f
 1799 0063 19       		.uleb128 0x19
 1800 0064 03       		.uleb128 0x3
 1801 0065 0E       		.uleb128 0xe
 1802 0066 3A       		.uleb128 0x3a
 1803 0067 0B       		.uleb128 0xb
 1804 0068 3B       		.uleb128 0x3b
 1805 0069 0B       		.uleb128 0xb
 1806 006a 27       		.uleb128 0x27
 1807 006b 19       		.uleb128 0x19
 1808 006c 11       		.uleb128 0x11
 1809 006d 01       		.uleb128 0x1
 1810 006e 12       		.uleb128 0x12
 1811 006f 06       		.uleb128 0x6
 1812 0070 40       		.uleb128 0x40
 1813 0071 18       		.uleb128 0x18
 1814 0072 9742     		.uleb128 0x2117
 1815 0074 19       		.uleb128 0x19
 1816 0075 00       		.byte	0
 1817 0076 00       		.byte	0
 1818 0077 09       		.uleb128 0x9
 1819 0078 2E       		.uleb128 0x2e
 1820 0079 01       		.byte	0x1
 1821 007a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 61


 1822 007b 19       		.uleb128 0x19
 1823 007c 03       		.uleb128 0x3
 1824 007d 0E       		.uleb128 0xe
 1825 007e 3A       		.uleb128 0x3a
 1826 007f 0B       		.uleb128 0xb
 1827 0080 3B       		.uleb128 0x3b
 1828 0081 0B       		.uleb128 0xb
 1829 0082 27       		.uleb128 0x27
 1830 0083 19       		.uleb128 0x19
 1831 0084 11       		.uleb128 0x11
 1832 0085 01       		.uleb128 0x1
 1833 0086 12       		.uleb128 0x12
 1834 0087 06       		.uleb128 0x6
 1835 0088 40       		.uleb128 0x40
 1836 0089 18       		.uleb128 0x18
 1837 008a 9742     		.uleb128 0x2117
 1838 008c 19       		.uleb128 0x19
 1839 008d 01       		.uleb128 0x1
 1840 008e 13       		.uleb128 0x13
 1841 008f 00       		.byte	0
 1842 0090 00       		.byte	0
 1843 0091 0A       		.uleb128 0xa
 1844 0092 34       		.uleb128 0x34
 1845 0093 00       		.byte	0
 1846 0094 03       		.uleb128 0x3
 1847 0095 0E       		.uleb128 0xe
 1848 0096 3A       		.uleb128 0x3a
 1849 0097 0B       		.uleb128 0xb
 1850 0098 3B       		.uleb128 0x3b
 1851 0099 0B       		.uleb128 0xb
 1852 009a 49       		.uleb128 0x49
 1853 009b 13       		.uleb128 0x13
 1854 009c 02       		.uleb128 0x2
 1855 009d 17       		.uleb128 0x17
 1856 009e 00       		.byte	0
 1857 009f 00       		.byte	0
 1858 00a0 0B       		.uleb128 0xb
 1859 00a1 898201   		.uleb128 0x4109
 1860 00a4 00       		.byte	0
 1861 00a5 11       		.uleb128 0x11
 1862 00a6 01       		.uleb128 0x1
 1863 00a7 31       		.uleb128 0x31
 1864 00a8 13       		.uleb128 0x13
 1865 00a9 00       		.byte	0
 1866 00aa 00       		.byte	0
 1867 00ab 0C       		.uleb128 0xc
 1868 00ac 898201   		.uleb128 0x4109
 1869 00af 00       		.byte	0
 1870 00b0 11       		.uleb128 0x11
 1871 00b1 01       		.uleb128 0x1
 1872 00b2 9542     		.uleb128 0x2115
 1873 00b4 19       		.uleb128 0x19
 1874 00b5 31       		.uleb128 0x31
 1875 00b6 13       		.uleb128 0x13
 1876 00b7 00       		.byte	0
 1877 00b8 00       		.byte	0
 1878 00b9 0D       		.uleb128 0xd
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 62


 1879 00ba 2E       		.uleb128 0x2e
 1880 00bb 00       		.byte	0
 1881 00bc 3F       		.uleb128 0x3f
 1882 00bd 19       		.uleb128 0x19
 1883 00be 03       		.uleb128 0x3
 1884 00bf 0E       		.uleb128 0xe
 1885 00c0 3A       		.uleb128 0x3a
 1886 00c1 0B       		.uleb128 0xb
 1887 00c2 3B       		.uleb128 0x3b
 1888 00c3 05       		.uleb128 0x5
 1889 00c4 27       		.uleb128 0x27
 1890 00c5 19       		.uleb128 0x19
 1891 00c6 49       		.uleb128 0x49
 1892 00c7 13       		.uleb128 0x13
 1893 00c8 11       		.uleb128 0x11
 1894 00c9 01       		.uleb128 0x1
 1895 00ca 12       		.uleb128 0x12
 1896 00cb 06       		.uleb128 0x6
 1897 00cc 40       		.uleb128 0x40
 1898 00cd 18       		.uleb128 0x18
 1899 00ce 9742     		.uleb128 0x2117
 1900 00d0 19       		.uleb128 0x19
 1901 00d1 00       		.byte	0
 1902 00d2 00       		.byte	0
 1903 00d3 0E       		.uleb128 0xe
 1904 00d4 2E       		.uleb128 0x2e
 1905 00d5 01       		.byte	0x1
 1906 00d6 3F       		.uleb128 0x3f
 1907 00d7 19       		.uleb128 0x19
 1908 00d8 03       		.uleb128 0x3
 1909 00d9 0E       		.uleb128 0xe
 1910 00da 3A       		.uleb128 0x3a
 1911 00db 0B       		.uleb128 0xb
 1912 00dc 3B       		.uleb128 0x3b
 1913 00dd 05       		.uleb128 0x5
 1914 00de 27       		.uleb128 0x27
 1915 00df 19       		.uleb128 0x19
 1916 00e0 11       		.uleb128 0x11
 1917 00e1 01       		.uleb128 0x1
 1918 00e2 12       		.uleb128 0x12
 1919 00e3 06       		.uleb128 0x6
 1920 00e4 40       		.uleb128 0x40
 1921 00e5 18       		.uleb128 0x18
 1922 00e6 9742     		.uleb128 0x2117
 1923 00e8 19       		.uleb128 0x19
 1924 00e9 01       		.uleb128 0x1
 1925 00ea 13       		.uleb128 0x13
 1926 00eb 00       		.byte	0
 1927 00ec 00       		.byte	0
 1928 00ed 0F       		.uleb128 0xf
 1929 00ee 05       		.uleb128 0x5
 1930 00ef 00       		.byte	0
 1931 00f0 03       		.uleb128 0x3
 1932 00f1 0E       		.uleb128 0xe
 1933 00f2 3A       		.uleb128 0x3a
 1934 00f3 0B       		.uleb128 0xb
 1935 00f4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 63


 1936 00f5 05       		.uleb128 0x5
 1937 00f6 49       		.uleb128 0x49
 1938 00f7 13       		.uleb128 0x13
 1939 00f8 02       		.uleb128 0x2
 1940 00f9 18       		.uleb128 0x18
 1941 00fa 00       		.byte	0
 1942 00fb 00       		.byte	0
 1943 00fc 10       		.uleb128 0x10
 1944 00fd 2E       		.uleb128 0x2e
 1945 00fe 01       		.byte	0x1
 1946 00ff 31       		.uleb128 0x31
 1947 0100 13       		.uleb128 0x13
 1948 0101 11       		.uleb128 0x11
 1949 0102 01       		.uleb128 0x1
 1950 0103 12       		.uleb128 0x12
 1951 0104 06       		.uleb128 0x6
 1952 0105 40       		.uleb128 0x40
 1953 0106 18       		.uleb128 0x18
 1954 0107 9742     		.uleb128 0x2117
 1955 0109 19       		.uleb128 0x19
 1956 010a 01       		.uleb128 0x1
 1957 010b 13       		.uleb128 0x13
 1958 010c 00       		.byte	0
 1959 010d 00       		.byte	0
 1960 010e 11       		.uleb128 0x11
 1961 010f 34       		.uleb128 0x34
 1962 0110 00       		.byte	0
 1963 0111 31       		.uleb128 0x31
 1964 0112 13       		.uleb128 0x13
 1965 0113 02       		.uleb128 0x2
 1966 0114 18       		.uleb128 0x18
 1967 0115 00       		.byte	0
 1968 0116 00       		.byte	0
 1969 0117 12       		.uleb128 0x12
 1970 0118 34       		.uleb128 0x34
 1971 0119 00       		.byte	0
 1972 011a 31       		.uleb128 0x31
 1973 011b 13       		.uleb128 0x13
 1974 011c 02       		.uleb128 0x2
 1975 011d 17       		.uleb128 0x17
 1976 011e 00       		.byte	0
 1977 011f 00       		.byte	0
 1978 0120 13       		.uleb128 0x13
 1979 0121 2E       		.uleb128 0x2e
 1980 0122 01       		.byte	0x1
 1981 0123 3F       		.uleb128 0x3f
 1982 0124 19       		.uleb128 0x19
 1983 0125 03       		.uleb128 0x3
 1984 0126 0E       		.uleb128 0xe
 1985 0127 3A       		.uleb128 0x3a
 1986 0128 0B       		.uleb128 0xb
 1987 0129 3B       		.uleb128 0x3b
 1988 012a 05       		.uleb128 0x5
 1989 012b 27       		.uleb128 0x27
 1990 012c 19       		.uleb128 0x19
 1991 012d 49       		.uleb128 0x49
 1992 012e 13       		.uleb128 0x13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 64


 1993 012f 11       		.uleb128 0x11
 1994 0130 01       		.uleb128 0x1
 1995 0131 12       		.uleb128 0x12
 1996 0132 06       		.uleb128 0x6
 1997 0133 40       		.uleb128 0x40
 1998 0134 18       		.uleb128 0x18
 1999 0135 9742     		.uleb128 0x2117
 2000 0137 19       		.uleb128 0x19
 2001 0138 01       		.uleb128 0x1
 2002 0139 13       		.uleb128 0x13
 2003 013a 00       		.byte	0
 2004 013b 00       		.byte	0
 2005 013c 14       		.uleb128 0x14
 2006 013d 34       		.uleb128 0x34
 2007 013e 00       		.byte	0
 2008 013f 03       		.uleb128 0x3
 2009 0140 0E       		.uleb128 0xe
 2010 0141 3A       		.uleb128 0x3a
 2011 0142 0B       		.uleb128 0xb
 2012 0143 3B       		.uleb128 0x3b
 2013 0144 05       		.uleb128 0x5
 2014 0145 49       		.uleb128 0x49
 2015 0146 13       		.uleb128 0x13
 2016 0147 02       		.uleb128 0x2
 2017 0148 17       		.uleb128 0x17
 2018 0149 00       		.byte	0
 2019 014a 00       		.byte	0
 2020 014b 15       		.uleb128 0x15
 2021 014c 34       		.uleb128 0x34
 2022 014d 00       		.byte	0
 2023 014e 03       		.uleb128 0x3
 2024 014f 0E       		.uleb128 0xe
 2025 0150 3A       		.uleb128 0x3a
 2026 0151 0B       		.uleb128 0xb
 2027 0152 3B       		.uleb128 0x3b
 2028 0153 05       		.uleb128 0x5
 2029 0154 49       		.uleb128 0x49
 2030 0155 13       		.uleb128 0x13
 2031 0156 02       		.uleb128 0x2
 2032 0157 18       		.uleb128 0x18
 2033 0158 00       		.byte	0
 2034 0159 00       		.byte	0
 2035 015a 16       		.uleb128 0x16
 2036 015b 1D       		.uleb128 0x1d
 2037 015c 01       		.byte	0x1
 2038 015d 31       		.uleb128 0x31
 2039 015e 13       		.uleb128 0x13
 2040 015f 52       		.uleb128 0x52
 2041 0160 01       		.uleb128 0x1
 2042 0161 55       		.uleb128 0x55
 2043 0162 17       		.uleb128 0x17
 2044 0163 58       		.uleb128 0x58
 2045 0164 0B       		.uleb128 0xb
 2046 0165 59       		.uleb128 0x59
 2047 0166 05       		.uleb128 0x5
 2048 0167 01       		.uleb128 0x1
 2049 0168 13       		.uleb128 0x13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 65


 2050 0169 00       		.byte	0
 2051 016a 00       		.byte	0
 2052 016b 17       		.uleb128 0x17
 2053 016c 0B       		.uleb128 0xb
 2054 016d 01       		.byte	0x1
 2055 016e 55       		.uleb128 0x55
 2056 016f 17       		.uleb128 0x17
 2057 0170 00       		.byte	0
 2058 0171 00       		.byte	0
 2059 0172 18       		.uleb128 0x18
 2060 0173 34       		.uleb128 0x34
 2061 0174 00       		.byte	0
 2062 0175 31       		.uleb128 0x31
 2063 0176 13       		.uleb128 0x13
 2064 0177 00       		.byte	0
 2065 0178 00       		.byte	0
 2066 0179 19       		.uleb128 0x19
 2067 017a 1D       		.uleb128 0x1d
 2068 017b 01       		.byte	0x1
 2069 017c 31       		.uleb128 0x31
 2070 017d 13       		.uleb128 0x13
 2071 017e 52       		.uleb128 0x52
 2072 017f 01       		.uleb128 0x1
 2073 0180 55       		.uleb128 0x55
 2074 0181 17       		.uleb128 0x17
 2075 0182 58       		.uleb128 0x58
 2076 0183 0B       		.uleb128 0xb
 2077 0184 59       		.uleb128 0x59
 2078 0185 05       		.uleb128 0x5
 2079 0186 00       		.byte	0
 2080 0187 00       		.byte	0
 2081 0188 1A       		.uleb128 0x1a
 2082 0189 05       		.uleb128 0x5
 2083 018a 00       		.byte	0
 2084 018b 03       		.uleb128 0x3
 2085 018c 0E       		.uleb128 0xe
 2086 018d 3A       		.uleb128 0x3a
 2087 018e 0B       		.uleb128 0xb
 2088 018f 3B       		.uleb128 0x3b
 2089 0190 05       		.uleb128 0x5
 2090 0191 49       		.uleb128 0x49
 2091 0192 13       		.uleb128 0x13
 2092 0193 02       		.uleb128 0x2
 2093 0194 17       		.uleb128 0x17
 2094 0195 00       		.byte	0
 2095 0196 00       		.byte	0
 2096 0197 1B       		.uleb128 0x1b
 2097 0198 0F       		.uleb128 0xf
 2098 0199 00       		.byte	0
 2099 019a 0B       		.uleb128 0xb
 2100 019b 0B       		.uleb128 0xb
 2101 019c 49       		.uleb128 0x49
 2102 019d 13       		.uleb128 0x13
 2103 019e 00       		.byte	0
 2104 019f 00       		.byte	0
 2105 01a0 1C       		.uleb128 0x1c
 2106 01a1 26       		.uleb128 0x26
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 66


 2107 01a2 00       		.byte	0
 2108 01a3 49       		.uleb128 0x49
 2109 01a4 13       		.uleb128 0x13
 2110 01a5 00       		.byte	0
 2111 01a6 00       		.byte	0
 2112 01a7 1D       		.uleb128 0x1d
 2113 01a8 898201   		.uleb128 0x4109
 2114 01ab 01       		.byte	0x1
 2115 01ac 11       		.uleb128 0x11
 2116 01ad 01       		.uleb128 0x1
 2117 01ae 31       		.uleb128 0x31
 2118 01af 13       		.uleb128 0x13
 2119 01b0 01       		.uleb128 0x1
 2120 01b1 13       		.uleb128 0x13
 2121 01b2 00       		.byte	0
 2122 01b3 00       		.byte	0
 2123 01b4 1E       		.uleb128 0x1e
 2124 01b5 8A8201   		.uleb128 0x410a
 2125 01b8 00       		.byte	0
 2126 01b9 02       		.uleb128 0x2
 2127 01ba 18       		.uleb128 0x18
 2128 01bb 9142     		.uleb128 0x2111
 2129 01bd 18       		.uleb128 0x18
 2130 01be 00       		.byte	0
 2131 01bf 00       		.byte	0
 2132 01c0 1F       		.uleb128 0x1f
 2133 01c1 898201   		.uleb128 0x4109
 2134 01c4 01       		.byte	0x1
 2135 01c5 11       		.uleb128 0x11
 2136 01c6 01       		.uleb128 0x1
 2137 01c7 9542     		.uleb128 0x2115
 2138 01c9 19       		.uleb128 0x19
 2139 01ca 31       		.uleb128 0x31
 2140 01cb 13       		.uleb128 0x13
 2141 01cc 00       		.byte	0
 2142 01cd 00       		.byte	0
 2143 01ce 20       		.uleb128 0x20
 2144 01cf 2E       		.uleb128 0x2e
 2145 01d0 01       		.byte	0x1
 2146 01d1 3F       		.uleb128 0x3f
 2147 01d2 19       		.uleb128 0x19
 2148 01d3 03       		.uleb128 0x3
 2149 01d4 0E       		.uleb128 0xe
 2150 01d5 3A       		.uleb128 0x3a
 2151 01d6 0B       		.uleb128 0xb
 2152 01d7 3B       		.uleb128 0x3b
 2153 01d8 05       		.uleb128 0x5
 2154 01d9 27       		.uleb128 0x27
 2155 01da 19       		.uleb128 0x19
 2156 01db 20       		.uleb128 0x20
 2157 01dc 0B       		.uleb128 0xb
 2158 01dd 01       		.uleb128 0x1
 2159 01de 13       		.uleb128 0x13
 2160 01df 00       		.byte	0
 2161 01e0 00       		.byte	0
 2162 01e1 21       		.uleb128 0x21
 2163 01e2 05       		.uleb128 0x5
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 67


 2164 01e3 00       		.byte	0
 2165 01e4 03       		.uleb128 0x3
 2166 01e5 0E       		.uleb128 0xe
 2167 01e6 3A       		.uleb128 0x3a
 2168 01e7 0B       		.uleb128 0xb
 2169 01e8 3B       		.uleb128 0x3b
 2170 01e9 05       		.uleb128 0x5
 2171 01ea 49       		.uleb128 0x49
 2172 01eb 13       		.uleb128 0x13
 2173 01ec 00       		.byte	0
 2174 01ed 00       		.byte	0
 2175 01ee 22       		.uleb128 0x22
 2176 01ef 05       		.uleb128 0x5
 2177 01f0 00       		.byte	0
 2178 01f1 31       		.uleb128 0x31
 2179 01f2 13       		.uleb128 0x13
 2180 01f3 02       		.uleb128 0x2
 2181 01f4 18       		.uleb128 0x18
 2182 01f5 00       		.byte	0
 2183 01f6 00       		.byte	0
 2184 01f7 23       		.uleb128 0x23
 2185 01f8 34       		.uleb128 0x34
 2186 01f9 00       		.byte	0
 2187 01fa 03       		.uleb128 0x3
 2188 01fb 0E       		.uleb128 0xe
 2189 01fc 3A       		.uleb128 0x3a
 2190 01fd 0B       		.uleb128 0xb
 2191 01fe 3B       		.uleb128 0x3b
 2192 01ff 0B       		.uleb128 0xb
 2193 0200 49       		.uleb128 0x49
 2194 0201 13       		.uleb128 0x13
 2195 0202 3F       		.uleb128 0x3f
 2196 0203 19       		.uleb128 0x19
 2197 0204 02       		.uleb128 0x2
 2198 0205 18       		.uleb128 0x18
 2199 0206 00       		.byte	0
 2200 0207 00       		.byte	0
 2201 0208 24       		.uleb128 0x24
 2202 0209 2E       		.uleb128 0x2e
 2203 020a 00       		.byte	0
 2204 020b 3F       		.uleb128 0x3f
 2205 020c 19       		.uleb128 0x19
 2206 020d 3C       		.uleb128 0x3c
 2207 020e 19       		.uleb128 0x19
 2208 020f 6E       		.uleb128 0x6e
 2209 0210 0E       		.uleb128 0xe
 2210 0211 03       		.uleb128 0x3
 2211 0212 0E       		.uleb128 0xe
 2212 0213 3A       		.uleb128 0x3a
 2213 0214 0B       		.uleb128 0xb
 2214 0215 3B       		.uleb128 0x3b
 2215 0216 0B       		.uleb128 0xb
 2216 0217 00       		.byte	0
 2217 0218 00       		.byte	0
 2218 0219 00       		.byte	0
 2219              		.section	.debug_loc,"",%progbits
 2220              	.Ldebug_loc0:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 68


 2221              	.LLST0:
 2222 0000 08000000 		.4byte	.LVL1
 2223 0004 32000000 		.4byte	.LVL3
 2224 0008 0100     		.2byte	0x1
 2225 000a 54       		.byte	0x54
 2226 000b 00000000 		.4byte	0
 2227 000f 00000000 		.4byte	0
 2228              	.LLST1:
 2229 0013 08000000 		.4byte	.LVL8
 2230 0017 34000000 		.4byte	.LVL10
 2231 001b 0100     		.2byte	0x1
 2232 001d 54       		.byte	0x54
 2233 001e 00000000 		.4byte	0
 2234 0022 00000000 		.4byte	0
 2235              	.LLST2:
 2236 0026 04000000 		.4byte	.LVL14
 2237 002a 08000000 		.4byte	.LVL15
 2238 002e 0600     		.2byte	0x6
 2239 0030 70       		.byte	0x70
 2240 0031 00       		.sleb128 0
 2241 0032 08       		.byte	0x8
 2242 0033 7F       		.byte	0x7f
 2243 0034 1A       		.byte	0x1a
 2244 0035 9F       		.byte	0x9f
 2245 0036 00000000 		.4byte	0
 2246 003a 00000000 		.4byte	0
 2247              	.LLST3:
 2248 003e 00000000 		.4byte	.LVL16
 2249 0042 18000000 		.4byte	.LVL18
 2250 0046 0200     		.2byte	0x2
 2251 0048 30       		.byte	0x30
 2252 0049 9F       		.byte	0x9f
 2253 004a 18000000 		.4byte	.LVL18
 2254 004e 28000000 		.4byte	.LFE9
 2255 0052 0100     		.2byte	0x1
 2256 0054 50       		.byte	0x50
 2257 0055 00000000 		.4byte	0
 2258 0059 00000000 		.4byte	0
 2259              	.LLST4:
 2260 005d 04000000 		.4byte	.LVL20
 2261 0061 08000000 		.4byte	.LVL21
 2262 0065 0A00     		.2byte	0xa
 2263 0067 70       		.byte	0x70
 2264 0068 00       		.sleb128 0
 2265 0069 08       		.byte	0x8
 2266 006a 20       		.byte	0x20
 2267 006b 1A       		.byte	0x1a
 2268 006c 48       		.byte	0x48
 2269 006d 24       		.byte	0x24
 2270 006e 30       		.byte	0x30
 2271 006f 2E       		.byte	0x2e
 2272 0070 9F       		.byte	0x9f
 2273 0071 00000000 		.4byte	0
 2274 0075 00000000 		.4byte	0
 2275              	.LLST5:
 2276 0079 06000000 		.4byte	.LVL22
 2277 007d 1F000000 		.4byte	.LVL23-1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 69


 2278 0081 0100     		.2byte	0x1
 2279 0083 50       		.byte	0x50
 2280 0084 00000000 		.4byte	0
 2281 0088 00000000 		.4byte	0
 2282              	.LLST6:
 2283 008c 00000000 		.4byte	.LVL29
 2284 0090 0C000000 		.4byte	.LVL30
 2285 0094 0100     		.2byte	0x1
 2286 0096 50       		.byte	0x50
 2287 0097 0C000000 		.4byte	.LVL30
 2288 009b 1C000000 		.4byte	.LVL34
 2289 009f 0100     		.2byte	0x1
 2290 00a1 54       		.byte	0x54
 2291 00a2 1C000000 		.4byte	.LVL34
 2292 00a6 20000000 		.4byte	.LFE20
 2293 00aa 0400     		.2byte	0x4
 2294 00ac F3       		.byte	0xf3
 2295 00ad 01       		.uleb128 0x1
 2296 00ae 50       		.byte	0x50
 2297 00af 9F       		.byte	0x9f
 2298 00b0 00000000 		.4byte	0
 2299 00b4 00000000 		.4byte	0
 2300              	.LLST7:
 2301 00b8 00000000 		.4byte	.LVL29
 2302 00bc 0C000000 		.4byte	.LVL30
 2303 00c0 0200     		.2byte	0x2
 2304 00c2 30       		.byte	0x30
 2305 00c3 9F       		.byte	0x9f
 2306 00c4 0C000000 		.4byte	.LVL30
 2307 00c8 0E000000 		.4byte	.LVL31
 2308 00cc 0100     		.2byte	0x1
 2309 00ce 51       		.byte	0x51
 2310 00cf 0E000000 		.4byte	.LVL31
 2311 00d3 17000000 		.4byte	.LVL32-1
 2312 00d7 0100     		.2byte	0x1
 2313 00d9 53       		.byte	0x53
 2314 00da 18000000 		.4byte	.LVL32
 2315 00de 1A000000 		.4byte	.LVL33
 2316 00e2 0100     		.2byte	0x1
 2317 00e4 51       		.byte	0x51
 2318 00e5 00000000 		.4byte	0
 2319 00e9 00000000 		.4byte	0
 2320              	.LLST8:
 2321 00ed 00000000 		.4byte	.LVL35
 2322 00f1 0E000000 		.4byte	.LVL37
 2323 00f5 0100     		.2byte	0x1
 2324 00f7 50       		.byte	0x50
 2325 00f8 0E000000 		.4byte	.LVL37
 2326 00fc 24000000 		.4byte	.LFE21
 2327 0100 0400     		.2byte	0x4
 2328 0102 F3       		.byte	0xf3
 2329 0103 01       		.uleb128 0x1
 2330 0104 50       		.byte	0x50
 2331 0105 9F       		.byte	0x9f
 2332 0106 00000000 		.4byte	0
 2333 010a 00000000 		.4byte	0
 2334              	.LLST9:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 70


 2335 010e 00000000 		.4byte	.LVL35
 2336 0112 0A000000 		.4byte	.LVL36
 2337 0116 0100     		.2byte	0x1
 2338 0118 51       		.byte	0x51
 2339 0119 0A000000 		.4byte	.LVL36
 2340 011d 24000000 		.4byte	.LFE21
 2341 0121 0400     		.2byte	0x4
 2342 0123 F3       		.byte	0xf3
 2343 0124 01       		.uleb128 0x1
 2344 0125 51       		.byte	0x51
 2345 0126 9F       		.byte	0x9f
 2346 0127 00000000 		.4byte	0
 2347 012b 00000000 		.4byte	0
 2348              	.LLST10:
 2349 012f 00000000 		.4byte	.LVL35
 2350 0133 0E000000 		.4byte	.LVL37
 2351 0137 0200     		.2byte	0x2
 2352 0139 30       		.byte	0x30
 2353 013a 9F       		.byte	0x9f
 2354 013b 0E000000 		.4byte	.LVL37
 2355 013f 16000000 		.4byte	.LVL38
 2356 0143 0900     		.2byte	0x9
 2357 0145 74       		.byte	0x74
 2358 0146 00       		.sleb128 0
 2359 0147 F3       		.byte	0xf3
 2360 0148 01       		.uleb128 0x1
 2361 0149 50       		.byte	0x50
 2362 014a 31       		.byte	0x31
 2363 014b 1C       		.byte	0x1c
 2364 014c 1C       		.byte	0x1c
 2365 014d 9F       		.byte	0x9f
 2366 014e 1A000000 		.4byte	.LVL39
 2367 0152 1C000000 		.4byte	.LVL40
 2368 0156 0900     		.2byte	0x9
 2369 0158 74       		.byte	0x74
 2370 0159 00       		.sleb128 0
 2371 015a F3       		.byte	0xf3
 2372 015b 01       		.uleb128 0x1
 2373 015c 50       		.byte	0x50
 2374 015d 31       		.byte	0x31
 2375 015e 1C       		.byte	0x1c
 2376 015f 1C       		.byte	0x1c
 2377 0160 9F       		.byte	0x9f
 2378 0161 00000000 		.4byte	0
 2379 0165 00000000 		.4byte	0
 2380              	.LLST11:
 2381 0169 00000000 		.4byte	.LVL41
 2382 016d 0B000000 		.4byte	.LVL42-1
 2383 0171 0100     		.2byte	0x1
 2384 0173 50       		.byte	0x50
 2385 0174 0B000000 		.4byte	.LVL42-1
 2386 0178 1C000000 		.4byte	.LVL44
 2387 017c 0400     		.2byte	0x4
 2388 017e F3       		.byte	0xf3
 2389 017f 01       		.uleb128 0x1
 2390 0180 50       		.byte	0x50
 2391 0181 9F       		.byte	0x9f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 71


 2392 0182 1C000000 		.4byte	.LVL44
 2393 0186 24000000 		.4byte	.LFE22
 2394 018a 0100     		.2byte	0x1
 2395 018c 50       		.byte	0x50
 2396 018d 00000000 		.4byte	0
 2397 0191 00000000 		.4byte	0
 2398              	.LLST12:
 2399 0195 06000000 		.4byte	.LVL45
 2400 0199 0E000000 		.4byte	.LVL46
 2401 019d 0100     		.2byte	0x1
 2402 019f 50       		.byte	0x50
 2403 01a0 14000000 		.4byte	.LVL47
 2404 01a4 1C000000 		.4byte	.LFE23
 2405 01a8 0100     		.2byte	0x1
 2406 01aa 50       		.byte	0x50
 2407 01ab 00000000 		.4byte	0
 2408 01af 00000000 		.4byte	0
 2409              	.LLST13:
 2410 01b3 06000000 		.4byte	.LVL48
 2411 01b7 1F000000 		.4byte	.LVL49-1
 2412 01bb 0100     		.2byte	0x1
 2413 01bd 50       		.byte	0x50
 2414 01be 00000000 		.4byte	0
 2415 01c2 00000000 		.4byte	0
 2416              	.LLST14:
 2417 01c6 00000000 		.4byte	.LVL50
 2418 01ca 2C000000 		.4byte	.LVL53
 2419 01ce 0100     		.2byte	0x1
 2420 01d0 50       		.byte	0x50
 2421 01d1 2C000000 		.4byte	.LVL53
 2422 01d5 32000000 		.4byte	.LVL54
 2423 01d9 0400     		.2byte	0x4
 2424 01db F3       		.byte	0xf3
 2425 01dc 01       		.uleb128 0x1
 2426 01dd 50       		.byte	0x50
 2427 01de 9F       		.byte	0x9f
 2428 01df 32000000 		.4byte	.LVL54
 2429 01e3 3C000000 		.4byte	.LVL57
 2430 01e7 0100     		.2byte	0x1
 2431 01e9 50       		.byte	0x50
 2432 01ea 3C000000 		.4byte	.LVL57
 2433 01ee 44000000 		.4byte	.LVL58
 2434 01f2 0400     		.2byte	0x4
 2435 01f4 F3       		.byte	0xf3
 2436 01f5 01       		.uleb128 0x1
 2437 01f6 50       		.byte	0x50
 2438 01f7 9F       		.byte	0x9f
 2439 01f8 44000000 		.4byte	.LVL58
 2440 01fc 58000000 		.4byte	.LFE25
 2441 0200 0100     		.2byte	0x1
 2442 0202 50       		.byte	0x50
 2443 0203 00000000 		.4byte	0
 2444 0207 00000000 		.4byte	0
 2445              	.LLST15:
 2446 020b 1E000000 		.4byte	.LVL51
 2447 020f 20000000 		.4byte	.LVL52
 2448 0213 0100     		.2byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 72


 2449 0215 52       		.byte	0x52
 2450 0216 36000000 		.4byte	.LVL55
 2451 021a 38000000 		.4byte	.LVL56
 2452 021e 0100     		.2byte	0x1
 2453 0220 52       		.byte	0x52
 2454 0221 00000000 		.4byte	0
 2455 0225 00000000 		.4byte	0
 2456              		.section	.debug_aranges,"",%progbits
 2457 0000 DC000000 		.4byte	0xdc
 2458 0004 0200     		.2byte	0x2
 2459 0006 00000000 		.4byte	.Ldebug_info0
 2460 000a 04       		.byte	0x4
 2461 000b 00       		.byte	0
 2462 000c 0000     		.2byte	0
 2463 000e 0000     		.2byte	0
 2464 0010 00000000 		.4byte	.LFB1
 2465 0014 24000000 		.4byte	.LFE1-.LFB1
 2466 0018 00000000 		.4byte	.LFB2
 2467 001c 3C000000 		.4byte	.LFE2-.LFB2
 2468 0020 00000000 		.4byte	.LFB0
 2469 0024 1C000000 		.4byte	.LFE0-.LFB0
 2470 0028 00000000 		.4byte	.LFB3
 2471 002c 40000000 		.4byte	.LFE3-.LFB3
 2472 0030 00000000 		.4byte	.LFB4
 2473 0034 04000000 		.4byte	.LFE4-.LFB4
 2474 0038 00000000 		.4byte	.LFB6
 2475 003c 0C000000 		.4byte	.LFE6-.LFB6
 2476 0040 00000000 		.4byte	.LFB7
 2477 0044 0C000000 		.4byte	.LFE7-.LFB7
 2478 0048 00000000 		.4byte	.LFB8
 2479 004c 10000000 		.4byte	.LFE8-.LFB8
 2480 0050 00000000 		.4byte	.LFB9
 2481 0054 28000000 		.4byte	.LFE9-.LFB9
 2482 0058 00000000 		.4byte	.LFB10
 2483 005c 1C000000 		.4byte	.LFE10-.LFB10
 2484 0060 00000000 		.4byte	.LFB11
 2485 0064 10000000 		.4byte	.LFE11-.LFB11
 2486 0068 00000000 		.4byte	.LFB12
 2487 006c 24000000 		.4byte	.LFE12-.LFB12
 2488 0070 00000000 		.4byte	.LFB14
 2489 0074 0C000000 		.4byte	.LFE14-.LFB14
 2490 0078 00000000 		.4byte	.LFB15
 2491 007c 0C000000 		.4byte	.LFE15-.LFB15
 2492 0080 00000000 		.4byte	.LFB16
 2493 0084 0C000000 		.4byte	.LFE16-.LFB16
 2494 0088 00000000 		.4byte	.LFB17
 2495 008c 14000000 		.4byte	.LFE17-.LFB17
 2496 0090 00000000 		.4byte	.LFB18
 2497 0094 0C000000 		.4byte	.LFE18-.LFB18
 2498 0098 00000000 		.4byte	.LFB19
 2499 009c 18000000 		.4byte	.LFE19-.LFB19
 2500 00a0 00000000 		.4byte	.LFB20
 2501 00a4 20000000 		.4byte	.LFE20-.LFB20
 2502 00a8 00000000 		.4byte	.LFB21
 2503 00ac 24000000 		.4byte	.LFE21-.LFB21
 2504 00b0 00000000 		.4byte	.LFB22
 2505 00b4 24000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 73


 2506 00b8 00000000 		.4byte	.LFB23
 2507 00bc 1C000000 		.4byte	.LFE23-.LFB23
 2508 00c0 00000000 		.4byte	.LFB24
 2509 00c4 24000000 		.4byte	.LFE24-.LFB24
 2510 00c8 00000000 		.4byte	.LFB25
 2511 00cc 58000000 		.4byte	.LFE25-.LFB25
 2512 00d0 00000000 		.4byte	.LFB26
 2513 00d4 02000000 		.4byte	.LFE26-.LFB26
 2514 00d8 00000000 		.4byte	0
 2515 00dc 00000000 		.4byte	0
 2516              		.section	.debug_ranges,"",%progbits
 2517              	.Ldebug_ranges0:
 2518 0000 00000000 		.4byte	.LBB6
 2519 0004 02000000 		.4byte	.LBE6
 2520 0008 04000000 		.4byte	.LBB12
 2521 000c 06000000 		.4byte	.LBE12
 2522 0010 00000000 		.4byte	0
 2523 0014 00000000 		.4byte	0
 2524 0018 02000000 		.4byte	.LBB9
 2525 001c 04000000 		.4byte	.LBE9
 2526 0020 06000000 		.4byte	.LBB13
 2527 0024 08000000 		.4byte	.LBE13
 2528 0028 00000000 		.4byte	0
 2529 002c 00000000 		.4byte	0
 2530 0030 06000000 		.4byte	.LBB14
 2531 0034 42000000 		.4byte	.LBE14
 2532 0038 44000000 		.4byte	.LBB15
 2533 003c 58000000 		.4byte	.LBE15
 2534 0040 00000000 		.4byte	0
 2535 0044 00000000 		.4byte	0
 2536 0048 00000000 		.4byte	.LFB1
 2537 004c 24000000 		.4byte	.LFE1
 2538 0050 00000000 		.4byte	.LFB2
 2539 0054 3C000000 		.4byte	.LFE2
 2540 0058 00000000 		.4byte	.LFB0
 2541 005c 1C000000 		.4byte	.LFE0
 2542 0060 00000000 		.4byte	.LFB3
 2543 0064 40000000 		.4byte	.LFE3
 2544 0068 00000000 		.4byte	.LFB4
 2545 006c 04000000 		.4byte	.LFE4
 2546 0070 00000000 		.4byte	.LFB6
 2547 0074 0C000000 		.4byte	.LFE6
 2548 0078 00000000 		.4byte	.LFB7
 2549 007c 0C000000 		.4byte	.LFE7
 2550 0080 00000000 		.4byte	.LFB8
 2551 0084 10000000 		.4byte	.LFE8
 2552 0088 00000000 		.4byte	.LFB9
 2553 008c 28000000 		.4byte	.LFE9
 2554 0090 00000000 		.4byte	.LFB10
 2555 0094 1C000000 		.4byte	.LFE10
 2556 0098 00000000 		.4byte	.LFB11
 2557 009c 10000000 		.4byte	.LFE11
 2558 00a0 00000000 		.4byte	.LFB12
 2559 00a4 24000000 		.4byte	.LFE12
 2560 00a8 00000000 		.4byte	.LFB14
 2561 00ac 0C000000 		.4byte	.LFE14
 2562 00b0 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 74


 2563 00b4 0C000000 		.4byte	.LFE15
 2564 00b8 00000000 		.4byte	.LFB16
 2565 00bc 0C000000 		.4byte	.LFE16
 2566 00c0 00000000 		.4byte	.LFB17
 2567 00c4 14000000 		.4byte	.LFE17
 2568 00c8 00000000 		.4byte	.LFB18
 2569 00cc 0C000000 		.4byte	.LFE18
 2570 00d0 00000000 		.4byte	.LFB19
 2571 00d4 18000000 		.4byte	.LFE19
 2572 00d8 00000000 		.4byte	.LFB20
 2573 00dc 20000000 		.4byte	.LFE20
 2574 00e0 00000000 		.4byte	.LFB21
 2575 00e4 24000000 		.4byte	.LFE21
 2576 00e8 00000000 		.4byte	.LFB22
 2577 00ec 24000000 		.4byte	.LFE22
 2578 00f0 00000000 		.4byte	.LFB23
 2579 00f4 1C000000 		.4byte	.LFE23
 2580 00f8 00000000 		.4byte	.LFB24
 2581 00fc 24000000 		.4byte	.LFE24
 2582 0100 00000000 		.4byte	.LFB25
 2583 0104 58000000 		.4byte	.LFE25
 2584 0108 00000000 		.4byte	.LFB26
 2585 010c 02000000 		.4byte	.LFE26
 2586 0110 00000000 		.4byte	0
 2587 0114 00000000 		.4byte	0
 2588              		.section	.debug_line,"",%progbits
 2589              	.Ldebug_line0:
 2590 0000 C5020000 		.section	.debug_str,"MS",%progbits,1
 2590      02006300 
 2590      00000201 
 2590      FB0E0D00 
 2590      01010101 
 2591              	.LASF60:
 2592 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 2592      72617465 
 2592      645F536F 
 2592      75726365 
 2592      5C50536F 
 2593              	.LASF10:
 2594 0020 75696E74 		.ascii	"uint16\000"
 2594      313600
 2595              	.LASF50:
 2596 0027 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2596      5F315F43 
 2596      6C656172 
 2596      54784275 
 2596      66666572 
 2597              	.LASF57:
 2598 003c 43794578 		.ascii	"CyExitCriticalSection\000"
 2598      69744372 
 2598      69746963 
 2598      616C5365 
 2598      6374696F 
 2599              	.LASF39:
 2600 0052 74784461 		.ascii	"txDataByte\000"
 2600      74614279 
 2600      746500
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 75


 2601              	.LASF42:
 2602 005d 55415254 		.ascii	"UART_1_PutChar\000"
 2602      5F315F50 
 2602      75744368 
 2602      617200
 2603              	.LASF44:
 2604 006c 73747269 		.ascii	"string\000"
 2604      6E6700
 2605              	.LASF51:
 2606 0073 55415254 		.ascii	"UART_1_SendBreak\000"
 2606      5F315F53 
 2606      656E6442 
 2606      7265616B 
 2606      00
 2607              	.LASF18:
 2608 0084 55415254 		.ascii	"UART_1_ReadRxData\000"
 2608      5F315F52 
 2608      65616452 
 2608      78446174 
 2608      6100
 2609              	.LASF7:
 2610 0096 6C6F6E67 		.ascii	"long long unsigned int\000"
 2610      206C6F6E 
 2610      6720756E 
 2610      7369676E 
 2610      65642069 
 2611              	.LASF49:
 2612 00ad 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2612      5F315F47 
 2612      65745478 
 2612      42756666 
 2612      65725369 
 2613              	.LASF6:
 2614 00c4 6C6F6E67 		.ascii	"long long int\000"
 2614      206C6F6E 
 2614      6720696E 
 2614      7400
 2615              	.LASF0:
 2616 00d2 7369676E 		.ascii	"signed char\000"
 2616      65642063 
 2616      68617200 
 2617              	.LASF59:
 2618 00de 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2618      43313120 
 2618      352E342E 
 2618      31203230 
 2618      31363036 
 2619 0111 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2619      20726576 
 2619      6973696F 
 2619      6E203233 
 2619      37373135 
 2620 0144 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2620      66756E63 
 2620      74696F6E 
 2620      2D736563 
 2620      74696F6E 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 76


 2621              	.LASF54:
 2622 016c 74785065 		.ascii	"txPeriod\000"
 2622      72696F64 
 2622      00
 2623              	.LASF48:
 2624 0175 55415254 		.ascii	"UART_1_PutCRLF\000"
 2624      5F315F50 
 2624      75744352 
 2624      4C4600
 2625              	.LASF61:
 2626 0184 433A5C55 		.ascii	"C:\\Users\\jon\\Sync\\Research\\PSoC Projects\\Bala"
 2626      73657273 
 2626      5C6A6F6E 
 2626      5C53796E 
 2626      635C5265 
 2627 01b1 6E63652E 		.ascii	"nce.cydsn\000"
 2627      63796473 
 2627      6E00
 2628              	.LASF4:
 2629 01bb 6C6F6E67 		.ascii	"long int\000"
 2629      20696E74 
 2629      00
 2630              	.LASF23:
 2631 01c4 55415254 		.ascii	"UART_1_Start\000"
 2631      5F315F53 
 2631      74617274 
 2631      00
 2632              	.LASF9:
 2633 01d1 75696E74 		.ascii	"uint8\000"
 2633      3800
 2634              	.LASF12:
 2635 01d7 646F7562 		.ascii	"double\000"
 2635      6C6500
 2636              	.LASF64:
 2637 01de 61646472 		.ascii	"addressMode\000"
 2637      6573734D 
 2637      6F646500 
 2638              	.LASF58:
 2639 01ea 55415254 		.ascii	"UART_1_IntClock_Stop\000"
 2639      5F315F49 
 2639      6E74436C 
 2639      6F636B5F 
 2639      53746F70 
 2640              	.LASF26:
 2641 01ff 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2641      5F315F53 
 2641      65745278 
 2641      496E7465 
 2641      72727570 
 2642              	.LASF52:
 2643 0219 7265744D 		.ascii	"retMode\000"
 2643      6F646500 
 2644              	.LASF8:
 2645 0221 756E7369 		.ascii	"unsigned int\000"
 2645      676E6564 
 2645      20696E74 
 2645      00
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 77


 2646              	.LASF41:
 2647 022e 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2647      5F315F52 
 2647      65616454 
 2647      78537461 
 2647      74757300 
 2648              	.LASF5:
 2649 0242 6C6F6E67 		.ascii	"long unsigned int\000"
 2649      20756E73 
 2649      69676E65 
 2649      6420696E 
 2649      7400
 2650              	.LASF55:
 2651 0254 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2651      74657243 
 2651      72697469 
 2651      63616C53 
 2651      65637469 
 2652              	.LASF31:
 2653 026b 73697A65 		.ascii	"size\000"
 2653      00
 2654              	.LASF3:
 2655 0270 73686F72 		.ascii	"short unsigned int\000"
 2655      7420756E 
 2655      7369676E 
 2655      65642069 
 2655      6E7400
 2656              	.LASF22:
 2657 0283 55415254 		.ascii	"UART_1_Enable\000"
 2657      5F315F45 
 2657      6E61626C 
 2657      6500
 2658              	.LASF45:
 2659 0291 62756649 		.ascii	"bufIndex\000"
 2659      6E646578 
 2659      00
 2660              	.LASF63:
 2661 029a 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2661      5F315F53 
 2661      65745478 
 2661      41646472 
 2661      6573734D 
 2662              	.LASF34:
 2663 02b2 696E7453 		.ascii	"intSrc\000"
 2663      726300
 2664              	.LASF40:
 2665 02b9 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2665      5F315F52 
 2665      65616443 
 2665      6F6E7472 
 2665      6F6C5265 
 2666              	.LASF24:
 2667 02d4 55415254 		.ascii	"UART_1_Stop\000"
 2667      5F315F53 
 2667      746F7000 
 2668              	.LASF29:
 2669 02e0 55415254 		.ascii	"UART_1_GetByte\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 78


 2669      5F315F47 
 2669      65744279 
 2669      746500
 2670              	.LASF38:
 2671 02ef 55415254 		.ascii	"UART_1_WriteTxData\000"
 2671      5F315F57 
 2671      72697465 
 2671      54784461 
 2671      746100
 2672              	.LASF53:
 2673 0302 746D7053 		.ascii	"tmpStat\000"
 2673      74617400 
 2674              	.LASF17:
 2675 030a 73697A65 		.ascii	"sizetype\000"
 2675      74797065 
 2675      00
 2676              	.LASF33:
 2677 0313 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2677      5F315F53 
 2677      65745278 
 2677      41646472 
 2677      65737331 
 2678              	.LASF36:
 2679 0328 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2679      5F315F53 
 2679      65745278 
 2679      41646472 
 2679      65737332 
 2680              	.LASF16:
 2681 033d 6C6F6E67 		.ascii	"long double\000"
 2681      20646F75 
 2681      626C6500 
 2682              	.LASF35:
 2683 0349 61646472 		.ascii	"address\000"
 2683      65737300 
 2684              	.LASF27:
 2685 0351 72785374 		.ascii	"rxStatus\000"
 2685      61747573 
 2685      00
 2686              	.LASF37:
 2687 035a 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2687      5F315F53 
 2687      65745478 
 2687      496E7465 
 2687      72727570 
 2688              	.LASF11:
 2689 0374 666C6F61 		.ascii	"float\000"
 2689      7400
 2690              	.LASF43:
 2691 037a 55415254 		.ascii	"UART_1_PutString\000"
 2691      5F315F50 
 2691      75745374 
 2691      72696E67 
 2691      00
 2692              	.LASF32:
 2693 038b 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2693      5F315F43 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 79


 2693      6C656172 
 2693      52784275 
 2693      66666572 
 2694              	.LASF15:
 2695 03a0 72656738 		.ascii	"reg8\000"
 2695      00
 2696              	.LASF1:
 2697 03a5 756E7369 		.ascii	"unsigned char\000"
 2697      676E6564 
 2697      20636861 
 2697      7200
 2698              	.LASF2:
 2699 03b3 73686F72 		.ascii	"short int\000"
 2699      7420696E 
 2699      7400
 2700              	.LASF65:
 2701 03bd 55415254 		.ascii	"UART_1_initVar\000"
 2701      5F315F69 
 2701      6E697456 
 2701      617200
 2702              	.LASF47:
 2703 03cc 62797465 		.ascii	"byteCount\000"
 2703      436F756E 
 2703      7400
 2704              	.LASF30:
 2705 03d6 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2705      5F315F47 
 2705      65745278 
 2705      42756666 
 2705      65725369 
 2706              	.LASF20:
 2707 03ed 72784461 		.ascii	"rxData\000"
 2707      746100
 2708              	.LASF14:
 2709 03f4 63686172 		.ascii	"char\000"
 2709      00
 2710              	.LASF13:
 2711 03f9 63686172 		.ascii	"char8\000"
 2711      3800
 2712              	.LASF62:
 2713 03ff 55415254 		.ascii	"UART_1_Init\000"
 2713      5F315F49 
 2713      6E697400 
 2714              	.LASF25:
 2715 040b 656E6162 		.ascii	"enableInterrupts\000"
 2715      6C65496E 
 2715      74657272 
 2715      75707473 
 2715      00
 2716              	.LASF21:
 2717 041c 73746174 		.ascii	"status\000"
 2717      757300
 2718              	.LASF56:
 2719 0423 55415254 		.ascii	"UART_1_IntClock_Start\000"
 2719      5F315F49 
 2719      6E74436C 
 2719      6F636B5F 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccR7xmKz.s 			page 80


 2719      53746172 
 2720              	.LASF19:
 2721 0439 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2721      5F315F52 
 2721      65616452 
 2721      78537461 
 2721      74757300 
 2722              	.LASF28:
 2723 044d 55415254 		.ascii	"UART_1_GetChar\000"
 2723      5F315F47 
 2723      65744368 
 2723      617200
 2724              	.LASF46:
 2725 045c 55415254 		.ascii	"UART_1_PutArray\000"
 2725      5F315F50 
 2725      75744172 
 2725      72617900 
 2726              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
