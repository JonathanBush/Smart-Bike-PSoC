ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_TXISR,"ax",%progbits
  20              		.align	1
  21              		.global	UART_TXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_TXISR, %function
  25              	UART_TXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_INT.c"
   1:Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_INT.c **** * File Name: UARTINT.c
   3:Generated_Source\PSoC5/UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_INT.c **** *
   5:Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/UART_INT.c **** *
   8:Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/UART_INT.c **** 
  15:Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  16:Generated_Source\PSoC5/UART_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/UART_INT.c **** 
  18:Generated_Source\PSoC5/UART_INT.c **** 
  19:Generated_Source\PSoC5/UART_INT.c **** /***************************************
  20:Generated_Source\PSoC5/UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/UART_INT.c **** 
  24:Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/UART_INT.c **** 
  26:Generated_Source\PSoC5/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  27:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  29:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/UART_INT.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 2


  31:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/UART_INT.c ****     *
  34:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  36:Generated_Source\PSoC5/UART_INT.c ****     *
  37:Generated_Source\PSoC5/UART_INT.c ****     * Return:
  38:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  39:Generated_Source\PSoC5/UART_INT.c ****     *
  40:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  49:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  52:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/UART_INT.c ****     *
  58:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  60:Generated_Source\PSoC5/UART_INT.c ****     {
  61:Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/UART_INT.c **** 
  65:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/UART_INT.c **** 
  69:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/UART_INT.c **** 
  73:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  75:Generated_Source\PSoC5/UART_INT.c **** 
  76:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/UART_INT.c **** 
  78:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/UART_INT.c **** 
  83:Generated_Source\PSoC5/UART_INT.c ****         do
  84:Generated_Source\PSoC5/UART_INT.c ****         {
  85:Generated_Source\PSoC5/UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  87:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 3


  88:Generated_Source\PSoC5/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/UART_INT.c ****             */
  90:Generated_Source\PSoC5/UART_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/UART_INT.c **** 
  92:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/UART_INT.c ****             {
  97:Generated_Source\PSoC5/UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  99:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
 103:Generated_Source\PSoC5/UART_INT.c **** 
 104:Generated_Source\PSoC5/UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/UART_INT.c ****                 
 106:Generated_Source\PSoC5/UART_INT.c ****             #ifdef UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/UART_INT.c ****                 UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/UART_INT.c ****             #endif /* UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/UART_INT.c ****             }
 110:Generated_Source\PSoC5/UART_INT.c ****             
 111:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 112:Generated_Source\PSoC5/UART_INT.c ****             {
 113:Generated_Source\PSoC5/UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
 115:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/UART_INT.c ****                 {
 118:Generated_Source\PSoC5/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/UART_INT.c ****                     {
 120:Generated_Source\PSoC5/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/UART_INT.c ****                         {
 122:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/UART_INT.c ****                         }
 124:Generated_Source\PSoC5/UART_INT.c ****                         else
 125:Generated_Source\PSoC5/UART_INT.c ****                         {
 126:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/UART_INT.c ****                         }
 128:Generated_Source\PSoC5/UART_INT.c ****                     }
 129:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/UART_INT.c ****                     }
 134:Generated_Source\PSoC5/UART_INT.c ****                 }
 135:Generated_Source\PSoC5/UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/UART_INT.c ****                 {
 137:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/UART_INT.c ****                 }
 140:Generated_Source\PSoC5/UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
 142:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/UART_INT.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 4


 145:Generated_Source\PSoC5/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/UART_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/UART_INT.c ****                 {
 148:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
 149:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
 151:Generated_Source\PSoC5/UART_INT.c ****                     }
 152:Generated_Source\PSoC5/UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
 154:Generated_Source\PSoC5/UART_INT.c **** 
 155:Generated_Source\PSoC5/UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
 157:Generated_Source\PSoC5/UART_INT.c ****                     {
 158:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 159:Generated_Source\PSoC5/UART_INT.c ****                     }
 160:Generated_Source\PSoC5/UART_INT.c **** 
 161:Generated_Source\PSoC5/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
 163:Generated_Source\PSoC5/UART_INT.c ****                     {
 164:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
 165:Generated_Source\PSoC5/UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 170:Generated_Source\PSoC5/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/UART_INT.c ****                     }
 173:Generated_Source\PSoC5/UART_INT.c ****                 }
 174:Generated_Source\PSoC5/UART_INT.c ****             }
 175:Generated_Source\PSoC5/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 176:Generated_Source\PSoC5/UART_INT.c **** 
 177:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 179:Generated_Source\PSoC5/UART_INT.c **** 
 180:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/UART_INT.c **** 
 182:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/UART_INT.c **** 
 186:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/UART_INT.c ****     }
 190:Generated_Source\PSoC5/UART_INT.c ****     
 191:Generated_Source\PSoC5/UART_INT.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
 192:Generated_Source\PSoC5/UART_INT.c **** 
 193:Generated_Source\PSoC5/UART_INT.c **** 
 194:Generated_Source\PSoC5/UART_INT.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
 195:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_TXISR
 197:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/UART_INT.c ****     *
 199:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/UART_INT.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 5


 202:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 204:Generated_Source\PSoC5/UART_INT.c ****     *
 205:Generated_Source\PSoC5/UART_INT.c ****     * Return:
 206:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 207:Generated_Source\PSoC5/UART_INT.c ****     *
 208:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/UART_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/UART_INT.c ****     *
 215:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_TXISR)
 217:Generated_Source\PSoC5/UART_INT.c ****     {
  28              		.loc 1 217 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 218:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/UART_INT.c **** 
 222:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/UART_INT.c ****         UART_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/UART_INT.c **** 
 226:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_START` */
 228:Generated_Source\PSoC5/UART_INT.c **** 
 229:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/UART_INT.c **** 
 231:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/UART_INT.c **** 
 236:Generated_Source\PSoC5/UART_INT.c ****         while((UART_txBufferRead != UART_txBufferWrite) &&
  32              		.loc 1 236 0
  33 0000 0E4A     		ldr	r2, .L7
 217:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  34              		.loc 1 217 0
  35 0002 F0B5     		push	{r4, r5, r6, r7, lr}
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0004 1146     		mov	r1, r2
  43              		.loc 1 236 0
  44 0006 0E4C     		ldr	r4, .L7+4
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  45              		.loc 1 237 0
  46 0008 0E48     		ldr	r0, .L7+8
 238:Generated_Source\PSoC5/UART_INT.c ****         {
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 6


 239:Generated_Source\PSoC5/UART_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/UART_INT.c ****             if(UART_txBufferRead >= UART_TX_BUFFER_SIZE)
 241:Generated_Source\PSoC5/UART_INT.c ****             {
 242:Generated_Source\PSoC5/UART_INT.c ****                 UART_txBufferRead = 0u;
 243:Generated_Source\PSoC5/UART_INT.c ****             }
 244:Generated_Source\PSoC5/UART_INT.c **** 
 245:Generated_Source\PSoC5/UART_INT.c ****             UART_TXDATA_REG = UART_txBuffer[UART_txBufferRead];
  47              		.loc 1 245 0
  48 000a 0F4D     		ldr	r5, .L7+12
  49 000c 0F4E     		ldr	r6, .L7+16
  50              	.L2:
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  51              		.loc 1 236 0
  52 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0010 2778     		ldrb	r7, [r4]	@ zero_extendqisi2
  54 0012 9F42     		cmp	r7, r3
  55 0014 11D0     		beq	.L1
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  56              		.loc 1 237 0 discriminator 1
  57 0016 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  58              		.loc 1 236 0 discriminator 1
  59 0018 13F00403 		ands	r3, r3, #4
  60 001c 0DD1     		bne	.L1
 240:Generated_Source\PSoC5/UART_INT.c ****             {
  61              		.loc 1 240 0
  62 001e 1778     		ldrb	r7, [r2]	@ zero_extendqisi2
  63 0020 072F     		cmp	r7, #7
 242:Generated_Source\PSoC5/UART_INT.c ****             }
  64              		.loc 1 242 0
  65 0022 88BF     		it	hi
  66 0024 1370     		strbhi	r3, [r2]
  67              		.loc 1 245 0
  68 0026 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  69 0028 DBB2     		uxtb	r3, r3
  70 002a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
  71 002c DBB2     		uxtb	r3, r3
  72 002e 3370     		strb	r3, [r6]
 246:Generated_Source\PSoC5/UART_INT.c **** 
 247:Generated_Source\PSoC5/UART_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/UART_INT.c ****             UART_txBufferRead++;
  73              		.loc 1 248 0
  74 0030 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  75 0032 0133     		adds	r3, r3, #1
  76 0034 DBB2     		uxtb	r3, r3
  77 0036 0B70     		strb	r3, [r1]
  78 0038 E9E7     		b	.L2
  79              	.L1:
  80 003a F0BD     		pop	{r4, r5, r6, r7, pc}
  81              	.L8:
  82              		.align	2
  83              	.L7:
  84 003c 00000000 		.word	UART_txBufferRead
  85 0040 00000000 		.word	UART_txBufferWrite
  86 0044 6B640040 		.word	1073767531
  87 0048 00000000 		.word	UART_txBuffer
  88 004c 4B640040 		.word	1073767499
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 7


  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	UART_TXISR, .-UART_TXISR
  92              		.text
  93              	.Letext0:
  94              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
  95              		.file 3 "Generated_Source\\PSoC5\\UART.h"
  96              		.section	.debug_info,"",%progbits
  97              	.Ldebug_info0:
  98 0000 F2000000 		.4byte	0xf2
  99 0004 0400     		.2byte	0x4
 100 0006 00000000 		.4byte	.Ldebug_abbrev0
 101 000a 04       		.byte	0x4
 102 000b 01       		.uleb128 0x1
 103 000c F5000000 		.4byte	.LASF19
 104 0010 0C       		.byte	0xc
 105 0011 5D000000 		.4byte	.LASF20
 106 0015 7F000000 		.4byte	.LASF21
 107 0019 00000000 		.4byte	.Ldebug_ranges0+0
 108 001d 00000000 		.4byte	0
 109 0021 00000000 		.4byte	.Ldebug_line0
 110 0025 02       		.uleb128 0x2
 111 0026 01       		.byte	0x1
 112 0027 06       		.byte	0x6
 113 0028 96010000 		.4byte	.LASF0
 114 002c 02       		.uleb128 0x2
 115 002d 01       		.byte	0x1
 116 002e 08       		.byte	0x8
 117 002f B6000000 		.4byte	.LASF1
 118 0033 02       		.uleb128 0x2
 119 0034 02       		.byte	0x2
 120 0035 05       		.byte	0x5
 121 0036 D2000000 		.4byte	.LASF2
 122 003a 02       		.uleb128 0x2
 123 003b 02       		.byte	0x2
 124 003c 07       		.byte	0x7
 125 003d 83010000 		.4byte	.LASF3
 126 0041 02       		.uleb128 0x2
 127 0042 04       		.byte	0x4
 128 0043 05       		.byte	0x5
 129 0044 C9000000 		.4byte	.LASF4
 130 0048 02       		.uleb128 0x2
 131 0049 04       		.byte	0x4
 132 004a 07       		.byte	0x7
 133 004b 34000000 		.4byte	.LASF5
 134 004f 02       		.uleb128 0x2
 135 0050 08       		.byte	0x8
 136 0051 05       		.byte	0x5
 137 0052 00000000 		.4byte	.LASF6
 138 0056 02       		.uleb128 0x2
 139 0057 08       		.byte	0x8
 140 0058 07       		.byte	0x7
 141 0059 46000000 		.4byte	.LASF7
 142 005d 03       		.uleb128 0x3
 143 005e 04       		.byte	0x4
 144 005f 05       		.byte	0x5
 145 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 8


 146 0064 02       		.uleb128 0x2
 147 0065 04       		.byte	0x4
 148 0066 07       		.byte	0x7
 149 0067 0E000000 		.4byte	.LASF8
 150 006b 04       		.uleb128 0x4
 151 006c 2E000000 		.4byte	.LASF12
 152 0070 02       		.byte	0x2
 153 0071 E401     		.2byte	0x1e4
 154 0073 2C000000 		.4byte	0x2c
 155 0077 02       		.uleb128 0x2
 156 0078 04       		.byte	0x4
 157 0079 04       		.byte	0x4
 158 007a B9010000 		.4byte	.LASF9
 159 007e 02       		.uleb128 0x2
 160 007f 08       		.byte	0x8
 161 0080 04       		.byte	0x4
 162 0081 EE000000 		.4byte	.LASF10
 163 0085 02       		.uleb128 0x2
 164 0086 01       		.byte	0x1
 165 0087 08       		.byte	0x8
 166 0088 C4000000 		.4byte	.LASF11
 167 008c 04       		.uleb128 0x4
 168 008d BF010000 		.4byte	.LASF13
 169 0091 02       		.byte	0x2
 170 0092 8E02     		.2byte	0x28e
 171 0094 98000000 		.4byte	0x98
 172 0098 05       		.uleb128 0x5
 173 0099 6B000000 		.4byte	0x6b
 174 009d 02       		.uleb128 0x2
 175 009e 08       		.byte	0x8
 176 009f 04       		.byte	0x4
 177 00a0 AD010000 		.4byte	.LASF14
 178 00a4 02       		.uleb128 0x2
 179 00a5 04       		.byte	0x4
 180 00a6 07       		.byte	0x7
 181 00a7 C4010000 		.4byte	.LASF15
 182 00ab 06       		.uleb128 0x6
 183 00ac A2010000 		.4byte	.LASF22
 184 00b0 01       		.byte	0x1
 185 00b1 D8       		.byte	0xd8
 186 00b2 00000000 		.4byte	.LFB0
 187 00b6 50000000 		.4byte	.LFE0-.LFB0
 188 00ba 01       		.uleb128 0x1
 189 00bb 9C       		.byte	0x9c
 190 00bc 07       		.uleb128 0x7
 191 00bd 98000000 		.4byte	0x98
 192 00c1 CC000000 		.4byte	0xcc
 193 00c5 08       		.uleb128 0x8
 194 00c6 A4000000 		.4byte	0xa4
 195 00ca 07       		.byte	0x7
 196 00cb 00       		.byte	0
 197 00cc 09       		.uleb128 0x9
 198 00cd CD010000 		.4byte	.LASF16
 199 00d1 03       		.byte	0x3
 200 00d2 3801     		.2byte	0x138
 201 00d4 D8000000 		.4byte	0xd8
 202 00d8 05       		.uleb128 0x5
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 9


 203 00d9 BC000000 		.4byte	0xbc
 204 00dd 09       		.uleb128 0x9
 205 00de DC000000 		.4byte	.LASF17
 206 00e2 03       		.byte	0x3
 207 00e3 3901     		.2byte	0x139
 208 00e5 98000000 		.4byte	0x98
 209 00e9 09       		.uleb128 0x9
 210 00ea 1B000000 		.4byte	.LASF18
 211 00ee 03       		.byte	0x3
 212 00ef 3A01     		.2byte	0x13a
 213 00f1 6B000000 		.4byte	0x6b
 214 00f5 00       		.byte	0
 215              		.section	.debug_abbrev,"",%progbits
 216              	.Ldebug_abbrev0:
 217 0000 01       		.uleb128 0x1
 218 0001 11       		.uleb128 0x11
 219 0002 01       		.byte	0x1
 220 0003 25       		.uleb128 0x25
 221 0004 0E       		.uleb128 0xe
 222 0005 13       		.uleb128 0x13
 223 0006 0B       		.uleb128 0xb
 224 0007 03       		.uleb128 0x3
 225 0008 0E       		.uleb128 0xe
 226 0009 1B       		.uleb128 0x1b
 227 000a 0E       		.uleb128 0xe
 228 000b 55       		.uleb128 0x55
 229 000c 17       		.uleb128 0x17
 230 000d 11       		.uleb128 0x11
 231 000e 01       		.uleb128 0x1
 232 000f 10       		.uleb128 0x10
 233 0010 17       		.uleb128 0x17
 234 0011 00       		.byte	0
 235 0012 00       		.byte	0
 236 0013 02       		.uleb128 0x2
 237 0014 24       		.uleb128 0x24
 238 0015 00       		.byte	0
 239 0016 0B       		.uleb128 0xb
 240 0017 0B       		.uleb128 0xb
 241 0018 3E       		.uleb128 0x3e
 242 0019 0B       		.uleb128 0xb
 243 001a 03       		.uleb128 0x3
 244 001b 0E       		.uleb128 0xe
 245 001c 00       		.byte	0
 246 001d 00       		.byte	0
 247 001e 03       		.uleb128 0x3
 248 001f 24       		.uleb128 0x24
 249 0020 00       		.byte	0
 250 0021 0B       		.uleb128 0xb
 251 0022 0B       		.uleb128 0xb
 252 0023 3E       		.uleb128 0x3e
 253 0024 0B       		.uleb128 0xb
 254 0025 03       		.uleb128 0x3
 255 0026 08       		.uleb128 0x8
 256 0027 00       		.byte	0
 257 0028 00       		.byte	0
 258 0029 04       		.uleb128 0x4
 259 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 10


 260 002b 00       		.byte	0
 261 002c 03       		.uleb128 0x3
 262 002d 0E       		.uleb128 0xe
 263 002e 3A       		.uleb128 0x3a
 264 002f 0B       		.uleb128 0xb
 265 0030 3B       		.uleb128 0x3b
 266 0031 05       		.uleb128 0x5
 267 0032 49       		.uleb128 0x49
 268 0033 13       		.uleb128 0x13
 269 0034 00       		.byte	0
 270 0035 00       		.byte	0
 271 0036 05       		.uleb128 0x5
 272 0037 35       		.uleb128 0x35
 273 0038 00       		.byte	0
 274 0039 49       		.uleb128 0x49
 275 003a 13       		.uleb128 0x13
 276 003b 00       		.byte	0
 277 003c 00       		.byte	0
 278 003d 06       		.uleb128 0x6
 279 003e 2E       		.uleb128 0x2e
 280 003f 00       		.byte	0
 281 0040 3F       		.uleb128 0x3f
 282 0041 19       		.uleb128 0x19
 283 0042 03       		.uleb128 0x3
 284 0043 0E       		.uleb128 0xe
 285 0044 3A       		.uleb128 0x3a
 286 0045 0B       		.uleb128 0xb
 287 0046 3B       		.uleb128 0x3b
 288 0047 0B       		.uleb128 0xb
 289 0048 27       		.uleb128 0x27
 290 0049 19       		.uleb128 0x19
 291 004a 11       		.uleb128 0x11
 292 004b 01       		.uleb128 0x1
 293 004c 12       		.uleb128 0x12
 294 004d 06       		.uleb128 0x6
 295 004e 40       		.uleb128 0x40
 296 004f 18       		.uleb128 0x18
 297 0050 9742     		.uleb128 0x2117
 298 0052 19       		.uleb128 0x19
 299 0053 00       		.byte	0
 300 0054 00       		.byte	0
 301 0055 07       		.uleb128 0x7
 302 0056 01       		.uleb128 0x1
 303 0057 01       		.byte	0x1
 304 0058 49       		.uleb128 0x49
 305 0059 13       		.uleb128 0x13
 306 005a 01       		.uleb128 0x1
 307 005b 13       		.uleb128 0x13
 308 005c 00       		.byte	0
 309 005d 00       		.byte	0
 310 005e 08       		.uleb128 0x8
 311 005f 21       		.uleb128 0x21
 312 0060 00       		.byte	0
 313 0061 49       		.uleb128 0x49
 314 0062 13       		.uleb128 0x13
 315 0063 2F       		.uleb128 0x2f
 316 0064 0B       		.uleb128 0xb
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 11


 317 0065 00       		.byte	0
 318 0066 00       		.byte	0
 319 0067 09       		.uleb128 0x9
 320 0068 34       		.uleb128 0x34
 321 0069 00       		.byte	0
 322 006a 03       		.uleb128 0x3
 323 006b 0E       		.uleb128 0xe
 324 006c 3A       		.uleb128 0x3a
 325 006d 0B       		.uleb128 0xb
 326 006e 3B       		.uleb128 0x3b
 327 006f 05       		.uleb128 0x5
 328 0070 49       		.uleb128 0x49
 329 0071 13       		.uleb128 0x13
 330 0072 3F       		.uleb128 0x3f
 331 0073 19       		.uleb128 0x19
 332 0074 3C       		.uleb128 0x3c
 333 0075 19       		.uleb128 0x19
 334 0076 00       		.byte	0
 335 0077 00       		.byte	0
 336 0078 00       		.byte	0
 337              		.section	.debug_aranges,"",%progbits
 338 0000 1C000000 		.4byte	0x1c
 339 0004 0200     		.2byte	0x2
 340 0006 00000000 		.4byte	.Ldebug_info0
 341 000a 04       		.byte	0x4
 342 000b 00       		.byte	0
 343 000c 0000     		.2byte	0
 344 000e 0000     		.2byte	0
 345 0010 00000000 		.4byte	.LFB0
 346 0014 50000000 		.4byte	.LFE0-.LFB0
 347 0018 00000000 		.4byte	0
 348 001c 00000000 		.4byte	0
 349              		.section	.debug_ranges,"",%progbits
 350              	.Ldebug_ranges0:
 351 0000 00000000 		.4byte	.LFB0
 352 0004 50000000 		.4byte	.LFE0
 353 0008 00000000 		.4byte	0
 354 000c 00000000 		.4byte	0
 355              		.section	.debug_line,"",%progbits
 356              	.Ldebug_line0:
 357 0000 81000000 		.section	.debug_str,"MS",%progbits,1
 357      02004F00 
 357      00000201 
 357      FB0E0D00 
 357      01010101 
 358              	.LASF6:
 359 0000 6C6F6E67 		.ascii	"long long int\000"
 359      206C6F6E 
 359      6720696E 
 359      7400
 360              	.LASF8:
 361 000e 756E7369 		.ascii	"unsigned int\000"
 361      676E6564 
 361      20696E74 
 361      00
 362              	.LASF18:
 363 001b 55415254 		.ascii	"UART_txBufferWrite\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 12


 363      5F747842 
 363      75666665 
 363      72577269 
 363      746500
 364              	.LASF12:
 365 002e 75696E74 		.ascii	"uint8\000"
 365      3800
 366              	.LASF5:
 367 0034 6C6F6E67 		.ascii	"long unsigned int\000"
 367      20756E73 
 367      69676E65 
 367      6420696E 
 367      7400
 368              	.LASF7:
 369 0046 6C6F6E67 		.ascii	"long long unsigned int\000"
 369      206C6F6E 
 369      6720756E 
 369      7369676E 
 369      65642069 
 370              	.LASF20:
 371 005d 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_INT.c\000"
 371      72617465 
 371      645F536F 
 371      75726365 
 371      5C50536F 
 372              	.LASF21:
 373 007f 433A5C55 		.ascii	"C:\\Users\\jon\\Sync\\Research\\PSoC Projects\\Bala"
 373      73657273 
 373      5C6A6F6E 
 373      5C53796E 
 373      635C5265 
 374 00ac 6E63652E 		.ascii	"nce.cydsn\000"
 374      63796473 
 374      6E00
 375              	.LASF1:
 376 00b6 756E7369 		.ascii	"unsigned char\000"
 376      676E6564 
 376      20636861 
 376      7200
 377              	.LASF11:
 378 00c4 63686172 		.ascii	"char\000"
 378      00
 379              	.LASF4:
 380 00c9 6C6F6E67 		.ascii	"long int\000"
 380      20696E74 
 380      00
 381              	.LASF2:
 382 00d2 73686F72 		.ascii	"short int\000"
 382      7420696E 
 382      7400
 383              	.LASF17:
 384 00dc 55415254 		.ascii	"UART_txBufferRead\000"
 384      5F747842 
 384      75666665 
 384      72526561 
 384      6400
 385              	.LASF10:
ARM GAS  C:\Users\jon\AppData\Local\Temp\cc6ya2zt.s 			page 13


 386 00ee 646F7562 		.ascii	"double\000"
 386      6C6500
 387              	.LASF19:
 388 00f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 388      43313120 
 388      352E342E 
 388      31203230 
 388      31363036 
 389 0128 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 389      20726576 
 389      6973696F 
 389      6E203233 
 389      37373135 
 390 015b 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 390      66756E63 
 390      74696F6E 
 390      2D736563 
 390      74696F6E 
 391              	.LASF3:
 392 0183 73686F72 		.ascii	"short unsigned int\000"
 392      7420756E 
 392      7369676E 
 392      65642069 
 392      6E7400
 393              	.LASF0:
 394 0196 7369676E 		.ascii	"signed char\000"
 394      65642063 
 394      68617200 
 395              	.LASF22:
 396 01a2 55415254 		.ascii	"UART_TXISR\000"
 396      5F545849 
 396      535200
 397              	.LASF14:
 398 01ad 6C6F6E67 		.ascii	"long double\000"
 398      20646F75 
 398      626C6500 
 399              	.LASF9:
 400 01b9 666C6F61 		.ascii	"float\000"
 400      7400
 401              	.LASF13:
 402 01bf 72656738 		.ascii	"reg8\000"
 402      00
 403              	.LASF15:
 404 01c4 73697A65 		.ascii	"sizetype\000"
 404      74797065 
 404      00
 405              	.LASF16:
 406 01cd 55415254 		.ascii	"UART_txBuffer\000"
 406      5F747842 
 406      75666665 
 406      7200
 407              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
