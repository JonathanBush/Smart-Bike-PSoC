ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RPi_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RPi_UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	RPi_UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	RPi_UART_Init, %function
  25              	RPi_UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\RPi_UART.c"
   1:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RPi_UART.c **** * File Name: RPi_UART.c
   3:Generated_Source\PSoC5/RPi_UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/RPi_UART.c **** *
   5:Generated_Source\PSoC5/RPi_UART.c **** * Description:
   6:Generated_Source\PSoC5/RPi_UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/RPi_UART.c **** *
   8:Generated_Source\PSoC5/RPi_UART.c **** * Note:
   9:Generated_Source\PSoC5/RPi_UART.c **** *
  10:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/RPi_UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/RPi_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/RPi_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/RPi_UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/RPi_UART.c **** 
  17:Generated_Source\PSoC5/RPi_UART.c **** #include "RPi_UART.h"
  18:Generated_Source\PSoC5/RPi_UART.c **** #if (RPi_UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/RPi_UART.c ****     #include "RPi_UART_IntClock.h"
  20:Generated_Source\PSoC5/RPi_UART.c **** #endif /* End RPi_UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/RPi_UART.c **** 
  22:Generated_Source\PSoC5/RPi_UART.c **** 
  23:Generated_Source\PSoC5/RPi_UART.c **** /***************************************
  24:Generated_Source\PSoC5/RPi_UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/RPi_UART.c **** ***************************************/
  26:Generated_Source\PSoC5/RPi_UART.c **** 
  27:Generated_Source\PSoC5/RPi_UART.c **** uint8 RPi_UART_initVar = 0u;
  28:Generated_Source\PSoC5/RPi_UART.c **** 
  29:Generated_Source\PSoC5/RPi_UART.c **** #if (RPi_UART_TX_INTERRUPT_ENABLED && RPi_UART_TX_ENABLED)
  30:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_txBuffer[RPi_UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 2


  31:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/RPi_UART.c **** #endif /* (RPi_UART_TX_INTERRUPT_ENABLED && RPi_UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/RPi_UART.c **** 
  35:Generated_Source\PSoC5/RPi_UART.c **** #if (RPi_UART_RX_INTERRUPT_ENABLED && (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED))
  36:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_rxBuffer[RPi_UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/RPi_UART.c ****     volatile uint8 RPi_UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/RPi_UART.c ****         volatile uint8 RPi_UART_rxAddressMode = RPi_UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/RPi_UART.c ****         volatile uint8 RPi_UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/RPi_UART.c **** #endif /* (RPi_UART_RX_INTERRUPT_ENABLED && (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/RPi_UART.c **** 
  48:Generated_Source\PSoC5/RPi_UART.c **** 
  49:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/RPi_UART.c **** * Function Name: RPi_UART_Start
  51:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/RPi_UART.c **** *
  53:Generated_Source\PSoC5/RPi_UART.c **** * Summary:
  54:Generated_Source\PSoC5/RPi_UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/RPi_UART.c **** *  RPi_UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/RPi_UART.c **** *  RPi_UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/RPi_UART.c **** *  RPi_UART_Enable() function.
  58:Generated_Source\PSoC5/RPi_UART.c **** *
  59:Generated_Source\PSoC5/RPi_UART.c **** * Parameters:
  60:Generated_Source\PSoC5/RPi_UART.c **** *  None.
  61:Generated_Source\PSoC5/RPi_UART.c **** *
  62:Generated_Source\PSoC5/RPi_UART.c **** * Return:
  63:Generated_Source\PSoC5/RPi_UART.c **** *  None.
  64:Generated_Source\PSoC5/RPi_UART.c **** *
  65:Generated_Source\PSoC5/RPi_UART.c **** * Global variables:
  66:Generated_Source\PSoC5/RPi_UART.c **** *  The RPi_UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/RPi_UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/RPi_UART.c **** *  and set to one (1u) the first time RPi_UART_Start() is called. This
  69:Generated_Source\PSoC5/RPi_UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/RPi_UART.c **** *  subsequent calls to the RPi_UART_Start() routine.
  71:Generated_Source\PSoC5/RPi_UART.c **** *
  72:Generated_Source\PSoC5/RPi_UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/RPi_UART.c **** *  No.
  74:Generated_Source\PSoC5/RPi_UART.c **** *
  75:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/RPi_UART.c **** void RPi_UART_Start(void) 
  77:Generated_Source\PSoC5/RPi_UART.c **** {
  78:Generated_Source\PSoC5/RPi_UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/RPi_UART.c ****     if(RPi_UART_initVar == 0u)
  80:Generated_Source\PSoC5/RPi_UART.c ****     {
  81:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_Init();
  82:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_initVar = 1u;
  83:Generated_Source\PSoC5/RPi_UART.c ****     }
  84:Generated_Source\PSoC5/RPi_UART.c **** 
  85:Generated_Source\PSoC5/RPi_UART.c ****     RPi_UART_Enable();
  86:Generated_Source\PSoC5/RPi_UART.c **** }
  87:Generated_Source\PSoC5/RPi_UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 3


  88:Generated_Source\PSoC5/RPi_UART.c **** 
  89:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/RPi_UART.c **** * Function Name: RPi_UART_Init
  91:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/RPi_UART.c **** *
  93:Generated_Source\PSoC5/RPi_UART.c **** * Summary:
  94:Generated_Source\PSoC5/RPi_UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/RPi_UART.c **** *  dialog settings. It is not necessary to call RPi_UART_Init() because
  96:Generated_Source\PSoC5/RPi_UART.c **** *  the RPi_UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/RPi_UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/RPi_UART.c **** *
  99:Generated_Source\PSoC5/RPi_UART.c **** * Parameters:
 100:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 101:Generated_Source\PSoC5/RPi_UART.c **** *
 102:Generated_Source\PSoC5/RPi_UART.c **** * Return:
 103:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 104:Generated_Source\PSoC5/RPi_UART.c **** *
 105:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/RPi_UART.c **** void RPi_UART_Init(void) 
 107:Generated_Source\PSoC5/RPi_UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 F0B4     		push	{r4, r5, r6, r7}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 7, -4
 108:Generated_Source\PSoC5/RPi_UART.c ****     #if(RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED)
 109:Generated_Source\PSoC5/RPi_UART.c **** 
 110:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/RPi_UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/RPi_UART.c ****             (void) CyIntSetVector(RPi_UART_RX_VECT_NUM, &RPi_UART_RXISR);
 113:Generated_Source\PSoC5/RPi_UART.c ****             CyIntSetPriority(RPi_UART_RX_VECT_NUM, RPi_UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/RPi_UART.c **** 
 117:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_SetRxAddressMode(RPi_UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_SetRxAddress1(RPi_UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_SetRxAddress2(RPi_UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* End RPi_UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/RPi_UART.c **** 
 123:Generated_Source\PSoC5/RPi_UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXBITCTR_PERIOD_REG = RPi_UART_RXBITCTR_INIT;
  39              		.loc 1 124 0
  40 0002 084A     		ldr	r2, .L3
 125:Generated_Source\PSoC5/RPi_UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXSTATUS_MASK_REG  = RPi_UART_INIT_RX_INTERRUPTS_MASK;
  41              		.loc 1 126 0
  42 0004 084E     		ldr	r6, .L3+4
 127:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/RPi_UART.c **** 
 129:Generated_Source\PSoC5/RPi_UART.c ****     #if(RPi_UART_TX_ENABLED)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 4


 130:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/RPi_UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/RPi_UART.c ****             (void) CyIntSetVector(RPi_UART_TX_VECT_NUM, &RPi_UART_TXISR);
 133:Generated_Source\PSoC5/RPi_UART.c ****             CyIntSetPriority(RPi_UART_TX_VECT_NUM, RPi_UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/RPi_UART.c **** 
 136:Generated_Source\PSoC5/RPi_UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKGEN_CTR_REG = RPi_UART_BIT_CENTER;
  43              		.loc 1 138 0
  44 0006 094C     		ldr	r4, .L3+8
 124:Generated_Source\PSoC5/RPi_UART.c ****         /* Configure the Initial RX interrupt mask */
  45              		.loc 1 124 0
  46 0008 7220     		movs	r0, #114
 139:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKTX_COMPLETE_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
  47              		.loc 1 139 0
  48 000a 0949     		ldr	r1, .L3+12
 140:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/RPi_UART.c ****         #else
 142:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCTR_PERIOD_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* End RPi_UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/RPi_UART.c **** 
 146:Generated_Source\PSoC5/RPi_UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXSTATUS_MASK_REG = RPi_UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/RPi_UART.c ****         #else
 150:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXSTATUS_MASK_REG = RPi_UART_INIT_TX_INTERRUPTS_MASK;
  49              		.loc 1 150 0
  50 000c 094B     		ldr	r3, .L3+16
 124:Generated_Source\PSoC5/RPi_UART.c ****         /* Configure the Initial RX interrupt mask */
  51              		.loc 1 124 0
  52 000e 1070     		strb	r0, [r2]
 126:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
  53              		.loc 1 126 0
  54 0010 2027     		movs	r7, #32
 138:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKTX_COMPLETE_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
  55              		.loc 1 138 0
  56 0012 0625     		movs	r5, #6
 139:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_COUNT) - 1u;
  57              		.loc 1 139 0
  58 0014 4720     		movs	r0, #71
  59              		.loc 1 150 0
  60 0016 0022     		movs	r2, #0
 126:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
  61              		.loc 1 126 0
  62 0018 3770     		strb	r7, [r6]
 138:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKTX_COMPLETE_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
  63              		.loc 1 138 0
  64 001a 2570     		strb	r5, [r4]
 139:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_COUNT) - 1u;
  65              		.loc 1 139 0
  66 001c 0870     		strb	r0, [r1]
  67              		.loc 1 150 0
  68 001e 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/RPi_UART.c ****         #endif /*End RPi_UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/RPi_UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 5


 153:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_TX_ENABLED */
 154:Generated_Source\PSoC5/RPi_UART.c **** 
 155:Generated_Source\PSoC5/RPi_UART.c ****     #if(RPi_UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/RPi_UART.c ****             (RPi_UART_ReadControlRegister() & (uint8)~RPi_UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/RPi_UART.c ****             (uint8)(RPi_UART_PARITY_TYPE << RPi_UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/RPi_UART.c **** }
  69              		.loc 1 160 0
  70 0020 F0BC     		pop	{r4, r5, r6, r7}
  71              		.cfi_restore 7
  72              		.cfi_restore 6
  73              		.cfi_restore 5
  74              		.cfi_restore 4
  75              		.cfi_def_cfa_offset 0
  76 0022 7047     		bx	lr
  77              	.L4:
  78              		.align	2
  79              	.L3:
  80 0024 87650040 		.word	1073767815
  81 0028 86640040 		.word	1073767558
  82 002c 26640040 		.word	1073767462
  83 0030 36640040 		.word	1073767478
  84 0034 85650040 		.word	1073767813
  85              		.cfi_endproc
  86              	.LFE1:
  87              		.size	RPi_UART_Init, .-RPi_UART_Init
  88              		.section	.text.RPi_UART_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	RPi_UART_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	RPi_UART_Enable, %function
  94              	RPi_UART_Enable:
  95              	.LFB2:
 161:Generated_Source\PSoC5/RPi_UART.c **** 
 162:Generated_Source\PSoC5/RPi_UART.c **** 
 163:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/RPi_UART.c **** * Function Name: RPi_UART_Enable
 165:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/RPi_UART.c **** *
 167:Generated_Source\PSoC5/RPi_UART.c **** * Summary:
 168:Generated_Source\PSoC5/RPi_UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/RPi_UART.c **** *  to call RPi_UART_Enable() because the RPi_UART_Start() API
 170:Generated_Source\PSoC5/RPi_UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/RPi_UART.c **** *  operation.
 172:Generated_Source\PSoC5/RPi_UART.c **** 
 173:Generated_Source\PSoC5/RPi_UART.c **** * Parameters:
 174:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 175:Generated_Source\PSoC5/RPi_UART.c **** *
 176:Generated_Source\PSoC5/RPi_UART.c **** * Return:
 177:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 178:Generated_Source\PSoC5/RPi_UART.c **** *
 179:Generated_Source\PSoC5/RPi_UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/RPi_UART.c **** *  RPi_UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/RPi_UART.c **** *
 182:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 6


 183:Generated_Source\PSoC5/RPi_UART.c **** void RPi_UART_Enable(void) 
 184:Generated_Source\PSoC5/RPi_UART.c **** {
  96              		.loc 1 184 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 38B5     		push	{r3, r4, r5, lr}
 101              		.cfi_def_cfa_offset 16
 102              		.cfi_offset 3, -16
 103              		.cfi_offset 4, -12
 104              		.cfi_offset 5, -8
 105              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/RPi_UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/RPi_UART.c ****     enableInterrupts = CyEnterCriticalSection();
 106              		.loc 1 186 0
 107 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 108              	.LVL0:
 109 0006 0546     		mov	r5, r0
 110              	.LVL1:
 187:Generated_Source\PSoC5/RPi_UART.c **** 
 188:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED)
 189:Generated_Source\PSoC5/RPi_UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXBITCTR_CONTROL_REG |= RPi_UART_CNTR_ENABLE;
 111              		.loc 1 190 0
 112 0008 0A4C     		ldr	r4, .L7
 191:Generated_Source\PSoC5/RPi_UART.c **** 
 192:Generated_Source\PSoC5/RPi_UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXSTATUS_ACTL_REG  |= RPi_UART_INT_ENABLE;
 113              		.loc 1 193 0
 114 000a 0B49     		ldr	r1, .L7+4
 190:Generated_Source\PSoC5/RPi_UART.c **** 
 115              		.loc 1 190 0
 116 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 194:Generated_Source\PSoC5/RPi_UART.c **** 
 195:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_EnableRxInt();
 197:Generated_Source\PSoC5/RPi_UART.c **** 
 198:Generated_Source\PSoC5/RPi_UART.c ****             #if (RPi_UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/RPi_UART.c ****             #endif /* (RPi_UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/RPi_UART.c **** 
 204:Generated_Source\PSoC5/RPi_UART.c ****     #if(RPi_UART_TX_ENABLED)
 205:Generated_Source\PSoC5/RPi_UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/RPi_UART.c ****         #if(!RPi_UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCTR_CONTROL_REG |= RPi_UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* End RPi_UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/RPi_UART.c **** 
 210:Generated_Source\PSoC5/RPi_UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_TXSTATUS_ACTL_REG |= RPi_UART_INT_ENABLE;
 117              		.loc 1 211 0
 118 000e 0B4A     		ldr	r2, .L7+8
 190:Generated_Source\PSoC5/RPi_UART.c **** 
 119              		.loc 1 190 0
 120 0010 43F02003 		orr	r3, r3, #32
 121 0014 2370     		strb	r3, [r4]
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 7


 193:Generated_Source\PSoC5/RPi_UART.c **** 
 122              		.loc 1 193 0
 123 0016 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 124 0018 43F01003 		orr	r3, r3, #16
 125 001c 0B70     		strb	r3, [r1]
 126              		.loc 1 211 0
 127 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 128 0020 43F01003 		orr	r3, r3, #16
 129 0024 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_EnableTxInt();
 215:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/RPi_UART.c ****      #endif /* (RPi_UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/RPi_UART.c **** 
 218:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_IntClock_Start();  /* Enable the clock */
 130              		.loc 1 219 0
 131 0026 FFF7FEFF 		bl	RPi_UART_IntClock_Start
 132              	.LVL2:
 220:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/RPi_UART.c **** 
 222:Generated_Source\PSoC5/RPi_UART.c ****     CyExitCriticalSection(enableInterrupts);
 133              		.loc 1 222 0
 134 002a 2846     		mov	r0, r5
 223:Generated_Source\PSoC5/RPi_UART.c **** }
 135              		.loc 1 223 0
 136 002c BDE83840 		pop	{r3, r4, r5, lr}
 137              		.cfi_restore 14
 138              		.cfi_restore 5
 139              		.cfi_restore 4
 140              		.cfi_restore 3
 141              		.cfi_def_cfa_offset 0
 142              	.LVL3:
 222:Generated_Source\PSoC5/RPi_UART.c **** }
 143              		.loc 1 222 0
 144 0030 FFF7FEBF 		b	CyExitCriticalSection
 145              	.LVL4:
 146              	.L8:
 147              		.align	2
 148              	.L7:
 149 0034 97650040 		.word	1073767831
 150 0038 96640040 		.word	1073767574
 151 003c 95650040 		.word	1073767829
 152              		.cfi_endproc
 153              	.LFE2:
 154              		.size	RPi_UART_Enable, .-RPi_UART_Enable
 155              		.section	.text.RPi_UART_Start,"ax",%progbits
 156              		.align	2
 157              		.global	RPi_UART_Start
 158              		.thumb
 159              		.thumb_func
 160              		.type	RPi_UART_Start, %function
 161              	RPi_UART_Start:
 162              	.LFB0:
  77:Generated_Source\PSoC5/RPi_UART.c ****     /* If not initialized then initialize all required hardware and software */
 163              		.loc 1 77 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 8


 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
  79:Generated_Source\PSoC5/RPi_UART.c ****     {
 168              		.loc 1 79 0
 169 0000 0C4B     		ldr	r3, .L14
 170 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 171 0004 9AB9     		cbnz	r2, .L12
  77:Generated_Source\PSoC5/RPi_UART.c ****     /* If not initialized then initialize all required hardware and software */
 172              		.loc 1 77 0
 173 0006 F0B4     		push	{r4, r5, r6, r7}
 174              		.cfi_def_cfa_offset 16
 175              		.cfi_offset 4, -16
 176              		.cfi_offset 5, -12
 177              		.cfi_offset 6, -8
 178              		.cfi_offset 7, -4
 179              	.LBB18:
 180              	.LBB19:
 124:Generated_Source\PSoC5/RPi_UART.c ****         /* Configure the Initial RX interrupt mask */
 181              		.loc 1 124 0
 182 0008 0B4D     		ldr	r5, .L14+4
 126:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
 183              		.loc 1 126 0
 184 000a 0C49     		ldr	r1, .L14+8
 124:Generated_Source\PSoC5/RPi_UART.c ****         /* Configure the Initial RX interrupt mask */
 185              		.loc 1 124 0
 186 000c 7227     		movs	r7, #114
 187 000e 2F70     		strb	r7, [r5]
 138:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKTX_COMPLETE_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
 188              		.loc 1 138 0
 189 0010 0B4E     		ldr	r6, .L14+12
 139:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_COUNT) - 1u;
 190              		.loc 1 139 0
 191 0012 0C4C     		ldr	r4, .L14+16
 126:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
 192              		.loc 1 126 0
 193 0014 2025     		movs	r5, #32
 150:Generated_Source\PSoC5/RPi_UART.c ****         #endif /*End RPi_UART_TX_INTERRUPT_ENABLED*/
 194              		.loc 1 150 0
 195 0016 0C48     		ldr	r0, .L14+20
 126:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* End RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
 196              		.loc 1 126 0
 197 0018 0D70     		strb	r5, [r1]
 138:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKTX_COMPLETE_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
 198              		.loc 1 138 0
 199 001a 0627     		movs	r7, #6
 139:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_COUNT) - 1u;
 200              		.loc 1 139 0
 201 001c 4725     		movs	r5, #71
 202              	.LBE19:
 203              	.LBE18:
  82:Generated_Source\PSoC5/RPi_UART.c ****     }
 204              		.loc 1 82 0
 205 001e 0121     		movs	r1, #1
 206              	.LBB21:
 207              	.LBB20:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 9


 138:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCLKTX_COMPLETE_REG = ((RPi_UART_NUMBER_OF_DATA_BITS +
 208              		.loc 1 138 0
 209 0020 3770     		strb	r7, [r6]
 139:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_NUMBER_OF_START_BIT) * RPi_UART_OVER_SAMPLE_COUNT) - 1u;
 210              		.loc 1 139 0
 211 0022 2570     		strb	r5, [r4]
 150:Generated_Source\PSoC5/RPi_UART.c ****         #endif /*End RPi_UART_TX_INTERRUPT_ENABLED*/
 212              		.loc 1 150 0
 213 0024 0270     		strb	r2, [r0]
 214              	.LBE20:
 215              	.LBE21:
  82:Generated_Source\PSoC5/RPi_UART.c ****     }
 216              		.loc 1 82 0
 217 0026 1970     		strb	r1, [r3]
  86:Generated_Source\PSoC5/RPi_UART.c **** 
 218              		.loc 1 86 0
 219 0028 F0BC     		pop	{r4, r5, r6, r7}
 220              		.cfi_restore 7
 221              		.cfi_restore 6
 222              		.cfi_restore 5
 223              		.cfi_restore 4
 224              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/RPi_UART.c **** }
 225              		.loc 1 85 0
 226 002a FFF7FEBF 		b	RPi_UART_Enable
 227              	.LVL5:
 228              	.L12:
 229 002e FFF7FEBF 		b	RPi_UART_Enable
 230              	.LVL6:
 231              	.L15:
 232 0032 00BF     		.align	2
 233              	.L14:
 234 0034 00000000 		.word	.LANCHOR0
 235 0038 87650040 		.word	1073767815
 236 003c 86640040 		.word	1073767558
 237 0040 26640040 		.word	1073767462
 238 0044 36640040 		.word	1073767478
 239 0048 85650040 		.word	1073767813
 240              		.cfi_endproc
 241              	.LFE0:
 242              		.size	RPi_UART_Start, .-RPi_UART_Start
 243              		.section	.text.RPi_UART_Stop,"ax",%progbits
 244              		.align	2
 245              		.global	RPi_UART_Stop
 246              		.thumb
 247              		.thumb_func
 248              		.type	RPi_UART_Stop, %function
 249              	RPi_UART_Stop:
 250              	.LFB3:
 224:Generated_Source\PSoC5/RPi_UART.c **** 
 225:Generated_Source\PSoC5/RPi_UART.c **** 
 226:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/RPi_UART.c **** * Function Name: RPi_UART_Stop
 228:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/RPi_UART.c **** *
 230:Generated_Source\PSoC5/RPi_UART.c **** * Summary:
 231:Generated_Source\PSoC5/RPi_UART.c **** *  Disables the UART operation.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 10


 232:Generated_Source\PSoC5/RPi_UART.c **** *
 233:Generated_Source\PSoC5/RPi_UART.c **** * Parameters:
 234:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 235:Generated_Source\PSoC5/RPi_UART.c **** *
 236:Generated_Source\PSoC5/RPi_UART.c **** * Return:
 237:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 238:Generated_Source\PSoC5/RPi_UART.c **** *
 239:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/RPi_UART.c **** void RPi_UART_Stop(void) 
 241:Generated_Source\PSoC5/RPi_UART.c **** {
 251              		.loc 1 241 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 10B5     		push	{r4, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 4, -8
 258              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/RPi_UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/RPi_UART.c ****     enableInterrupts = CyEnterCriticalSection();
 259              		.loc 1 243 0
 260 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 261              	.LVL7:
 262 0006 0446     		mov	r4, r0
 263              	.LVL8:
 244:Generated_Source\PSoC5/RPi_UART.c **** 
 245:Generated_Source\PSoC5/RPi_UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED)
 247:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXBITCTR_CONTROL_REG &= (uint8) ~RPi_UART_CNTR_ENABLE;
 264              		.loc 1 247 0
 265 0008 0A4A     		ldr	r2, .L18
 266 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 267 000c 03F0DF03 		and	r3, r3, #223
 268 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/RPi_UART.c **** 
 250:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_TX_ENABLED)
 251:Generated_Source\PSoC5/RPi_UART.c ****         #if(!RPi_UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXBITCTR_CONTROL_REG &= (uint8) ~RPi_UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (!RPi_UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/RPi_UART.c **** 
 256:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_IntClock_Stop();   /* Disable the clock */
 269              		.loc 1 257 0
 270 0012 FFF7FEFF 		bl	RPi_UART_IntClock_Stop
 271              	.LVL9:
 258:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/RPi_UART.c **** 
 260:Generated_Source\PSoC5/RPi_UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED)
 262:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXSTATUS_ACTL_REG  &= (uint8) ~RPi_UART_INT_ENABLE;
 272              		.loc 1 262 0
 273 0016 0849     		ldr	r1, .L18+4
 263:Generated_Source\PSoC5/RPi_UART.c **** 
 264:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_DisableRxInt();
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 11


 266:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/RPi_UART.c **** 
 269:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_TX_ENABLED)
 270:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_TXSTATUS_ACTL_REG &= (uint8) ~RPi_UART_INT_ENABLE;
 274              		.loc 1 270 0
 275 0018 084A     		ldr	r2, .L18+8
 262:Generated_Source\PSoC5/RPi_UART.c **** 
 276              		.loc 1 262 0
 277 001a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 271:Generated_Source\PSoC5/RPi_UART.c **** 
 272:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_DisableTxInt();
 274:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/RPi_UART.c **** 
 277:Generated_Source\PSoC5/RPi_UART.c ****     CyExitCriticalSection(enableInterrupts);
 278              		.loc 1 277 0
 279 001c 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/RPi_UART.c **** 
 280              		.loc 1 262 0
 281 001e 03F0EF03 		and	r3, r3, #239
 282 0022 0B70     		strb	r3, [r1]
 270:Generated_Source\PSoC5/RPi_UART.c **** 
 283              		.loc 1 270 0
 284 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 285 0026 03F0EF03 		and	r3, r3, #239
 286 002a 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/RPi_UART.c **** }
 287              		.loc 1 278 0
 288 002c BDE81040 		pop	{r4, lr}
 289              		.cfi_restore 14
 290              		.cfi_restore 4
 291              		.cfi_def_cfa_offset 0
 292              	.LVL10:
 277:Generated_Source\PSoC5/RPi_UART.c **** }
 293              		.loc 1 277 0
 294 0030 FFF7FEBF 		b	CyExitCriticalSection
 295              	.LVL11:
 296              	.L19:
 297              		.align	2
 298              	.L18:
 299 0034 97650040 		.word	1073767831
 300 0038 96640040 		.word	1073767574
 301 003c 95650040 		.word	1073767829
 302              		.cfi_endproc
 303              	.LFE3:
 304              		.size	RPi_UART_Stop, .-RPi_UART_Stop
 305              		.section	.text.RPi_UART_ReadControlRegister,"ax",%progbits
 306              		.align	2
 307              		.global	RPi_UART_ReadControlRegister
 308              		.thumb
 309              		.thumb_func
 310              		.type	RPi_UART_ReadControlRegister, %function
 311              	RPi_UART_ReadControlRegister:
 312              	.LFB4:
 279:Generated_Source\PSoC5/RPi_UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 12


 280:Generated_Source\PSoC5/RPi_UART.c **** 
 281:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/RPi_UART.c **** * Function Name: RPi_UART_ReadControlRegister
 283:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/RPi_UART.c **** *
 285:Generated_Source\PSoC5/RPi_UART.c **** * Summary:
 286:Generated_Source\PSoC5/RPi_UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/RPi_UART.c **** *
 288:Generated_Source\PSoC5/RPi_UART.c **** * Parameters:
 289:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 290:Generated_Source\PSoC5/RPi_UART.c **** *
 291:Generated_Source\PSoC5/RPi_UART.c **** * Return:
 292:Generated_Source\PSoC5/RPi_UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/RPi_UART.c **** *
 294:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/RPi_UART.c **** uint8 RPi_UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/RPi_UART.c **** {
 313              		.loc 1 296 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 297:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/RPi_UART.c ****         return(0u);
 299:Generated_Source\PSoC5/RPi_UART.c ****     #else
 300:Generated_Source\PSoC5/RPi_UART.c ****         return(RPi_UART_CONTROL_REG);
 301:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/RPi_UART.c **** }
 318              		.loc 1 302 0
 319 0000 0020     		movs	r0, #0
 320 0002 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE4:
 323              		.size	RPi_UART_ReadControlRegister, .-RPi_UART_ReadControlRegister
 324              		.section	.text.RPi_UART_WriteControlRegister,"ax",%progbits
 325              		.align	2
 326              		.global	RPi_UART_WriteControlRegister
 327              		.thumb
 328              		.thumb_func
 329              		.type	RPi_UART_WriteControlRegister, %function
 330              	RPi_UART_WriteControlRegister:
 331              	.LFB30:
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE30:
 339              		.size	RPi_UART_WriteControlRegister, .-RPi_UART_WriteControlRegister
 340 0002 00BF     		.section	.text.RPi_UART_SetRxInterruptMode,"ax",%progbits
 341              		.align	2
 342              		.global	RPi_UART_SetRxInterruptMode
 343              		.thumb
 344              		.thumb_func
 345              		.type	RPi_UART_SetRxInterruptMode, %function
 346              	RPi_UART_SetRxInterruptMode:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 13


 347              	.LFB6:
 303:Generated_Source\PSoC5/RPi_UART.c **** 
 304:Generated_Source\PSoC5/RPi_UART.c **** 
 305:Generated_Source\PSoC5/RPi_UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/RPi_UART.c **** * Function Name: RPi_UART_WriteControlRegister
 307:Generated_Source\PSoC5/RPi_UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/RPi_UART.c **** *
 309:Generated_Source\PSoC5/RPi_UART.c **** * Summary:
 310:Generated_Source\PSoC5/RPi_UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/RPi_UART.c **** *
 312:Generated_Source\PSoC5/RPi_UART.c **** * Parameters:
 313:Generated_Source\PSoC5/RPi_UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/RPi_UART.c **** *
 315:Generated_Source\PSoC5/RPi_UART.c **** * Return:
 316:Generated_Source\PSoC5/RPi_UART.c **** *  None.
 317:Generated_Source\PSoC5/RPi_UART.c **** *
 318:Generated_Source\PSoC5/RPi_UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/RPi_UART.c **** void  RPi_UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/RPi_UART.c **** {
 321:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/RPi_UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/RPi_UART.c ****         {
 324:Generated_Source\PSoC5/RPi_UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/RPi_UART.c ****         }
 326:Generated_Source\PSoC5/RPi_UART.c ****     #else
 327:Generated_Source\PSoC5/RPi_UART.c ****        RPi_UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/RPi_UART.c **** }
 330:Generated_Source\PSoC5/RPi_UART.c **** 
 331:Generated_Source\PSoC5/RPi_UART.c **** 
 332:Generated_Source\PSoC5/RPi_UART.c **** #if(RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED)
 333:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/RPi_UART.c ****     *
 337:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 338:Generated_Source\PSoC5/RPi_UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/RPi_UART.c ****     *
 340:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/RPi_UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/RPi_UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/RPi_UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/RPi_UART.c ****     *
 352:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 353:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 354:Generated_Source\PSoC5/RPi_UART.c ****     *
 355:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
 356:Generated_Source\PSoC5/RPi_UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/RPi_UART.c ****     *
 358:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 14


 359:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/RPi_UART.c ****     {
 348              		.loc 1 360 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL12:
 361:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXSTATUS_MASK_REG  = intSrc;
 354              		.loc 1 361 0
 355 0000 014B     		ldr	r3, .L23
 356 0002 1870     		strb	r0, [r3]
 357 0004 7047     		bx	lr
 358              	.L24:
 359 0006 00BF     		.align	2
 360              	.L23:
 361 0008 86640040 		.word	1073767558
 362              		.cfi_endproc
 363              	.LFE6:
 364              		.size	RPi_UART_SetRxInterruptMode, .-RPi_UART_SetRxInterruptMode
 365              		.section	.text.RPi_UART_ReadRxData,"ax",%progbits
 366              		.align	2
 367              		.global	RPi_UART_ReadRxData
 368              		.thumb
 369              		.thumb_func
 370              		.type	RPi_UART_ReadRxData, %function
 371              	RPi_UART_ReadRxData:
 372              	.LFB7:
 362:Generated_Source\PSoC5/RPi_UART.c ****     }
 363:Generated_Source\PSoC5/RPi_UART.c **** 
 364:Generated_Source\PSoC5/RPi_UART.c **** 
 365:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_ReadRxData
 367:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/RPi_UART.c ****     *
 369:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 370:Generated_Source\PSoC5/RPi_UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/RPi_UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/RPi_UART.c ****     *
 373:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 375:Generated_Source\PSoC5/RPi_UART.c ****     *
 376:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 377:Generated_Source\PSoC5/RPi_UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/RPi_UART.c ****     *
 379:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/RPi_UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/RPi_UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/RPi_UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/RPi_UART.c ****     *
 388:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
 390:Generated_Source\PSoC5/RPi_UART.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 15


 391:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/RPi_UART.c ****     {
 373              		.loc 1 393 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 394:Generated_Source\PSoC5/RPi_UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/RPi_UART.c **** 
 396:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/RPi_UART.c **** 
 398:Generated_Source\PSoC5/RPi_UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/RPi_UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/RPi_UART.c **** 
 401:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableRxInt();
 403:Generated_Source\PSoC5/RPi_UART.c **** 
 404:Generated_Source\PSoC5/RPi_UART.c ****         locRxBufferRead  = RPi_UART_rxBufferRead;
 405:Generated_Source\PSoC5/RPi_UART.c ****         locRxBufferWrite = RPi_UART_rxBufferWrite;
 406:Generated_Source\PSoC5/RPi_UART.c **** 
 407:Generated_Source\PSoC5/RPi_UART.c ****         if( (RPi_UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/RPi_UART.c ****         {
 409:Generated_Source\PSoC5/RPi_UART.c ****             rxData = RPi_UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/RPi_UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/RPi_UART.c **** 
 412:Generated_Source\PSoC5/RPi_UART.c ****             if(locRxBufferRead >= RPi_UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/RPi_UART.c ****             {
 414:Generated_Source\PSoC5/RPi_UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/RPi_UART.c ****             }
 416:Generated_Source\PSoC5/RPi_UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/RPi_UART.c **** 
 419:Generated_Source\PSoC5/RPi_UART.c ****             if(RPi_UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/RPi_UART.c ****             {
 421:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/RPi_UART.c ****                 #if ((RPi_UART_RX_INTERRUPT_ENABLED) && (RPi_UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/RPi_UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/RPi_UART.c ****                     #if( RPi_UART_HD_ENABLED )
 425:Generated_Source\PSoC5/RPi_UART.c ****                         if((RPi_UART_CONTROL_REG & RPi_UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/RPi_UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/RPi_UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/RPi_UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/RPi_UART.c ****                             */
 430:Generated_Source\PSoC5/RPi_UART.c ****                             RPi_UART_RXSTATUS_MASK_REG  |= RPi_UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/RPi_UART.c ****                         }
 432:Generated_Source\PSoC5/RPi_UART.c ****                     #else
 433:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_RXSTATUS_MASK_REG  |= RPi_UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/RPi_UART.c ****                     #endif /* end RPi_UART_HD_ENABLED */
 435:Generated_Source\PSoC5/RPi_UART.c ****                 #endif /* ((RPi_UART_RX_INTERRUPT_ENABLED) && (RPi_UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/RPi_UART.c ****             }
 437:Generated_Source\PSoC5/RPi_UART.c ****         }
 438:Generated_Source\PSoC5/RPi_UART.c ****         else
 439:Generated_Source\PSoC5/RPi_UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/RPi_UART.c ****             rxData = RPi_UART_RXDATA_REG;
 441:Generated_Source\PSoC5/RPi_UART.c ****         }
 442:Generated_Source\PSoC5/RPi_UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 16


 443:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableRxInt();
 444:Generated_Source\PSoC5/RPi_UART.c **** 
 445:Generated_Source\PSoC5/RPi_UART.c ****     #else
 446:Generated_Source\PSoC5/RPi_UART.c **** 
 447:Generated_Source\PSoC5/RPi_UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/RPi_UART.c ****         rxData = RPi_UART_RXDATA_REG;
 378              		.loc 1 448 0
 379 0000 014B     		ldr	r3, .L26
 380 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 381              	.LVL13:
 449:Generated_Source\PSoC5/RPi_UART.c **** 
 450:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/RPi_UART.c **** 
 452:Generated_Source\PSoC5/RPi_UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/RPi_UART.c ****     }
 382              		.loc 1 453 0
 383 0004 7047     		bx	lr
 384              	.L27:
 385 0006 00BF     		.align	2
 386              	.L26:
 387 0008 44650040 		.word	1073767748
 388              		.cfi_endproc
 389              	.LFE7:
 390              		.size	RPi_UART_ReadRxData, .-RPi_UART_ReadRxData
 391              		.section	.text.RPi_UART_ReadRxStatus,"ax",%progbits
 392              		.align	2
 393              		.global	RPi_UART_ReadRxStatus
 394              		.thumb
 395              		.thumb_func
 396              		.type	RPi_UART_ReadRxStatus, %function
 397              	RPi_UART_ReadRxStatus:
 398              	.LFB8:
 454:Generated_Source\PSoC5/RPi_UART.c **** 
 455:Generated_Source\PSoC5/RPi_UART.c **** 
 456:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_ReadRxStatus
 458:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/RPi_UART.c ****     *
 460:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 461:Generated_Source\PSoC5/RPi_UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/RPi_UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/RPi_UART.c ****     *
 464:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 466:Generated_Source\PSoC5/RPi_UART.c ****     *
 467:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 468:Generated_Source\PSoC5/RPi_UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/RPi_UART.c ****     *
 470:Generated_Source\PSoC5/RPi_UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/RPi_UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/RPi_UART.c ****     *  register read.
 475:Generated_Source\PSoC5/RPi_UART.c ****     *
 476:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/RPi_UART.c ****     *   It set to one in RX interrupt when there isn't free space in
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 17


 479:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/RPi_UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/RPi_UART.c ****     *   bits.
 483:Generated_Source\PSoC5/RPi_UART.c ****     *
 484:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/RPi_UART.c ****     {
 399              		.loc 1 486 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 487:Generated_Source\PSoC5/RPi_UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/RPi_UART.c **** 
 489:Generated_Source\PSoC5/RPi_UART.c ****         status = RPi_UART_RXSTATUS_REG & RPi_UART_RX_HW_MASK;
 404              		.loc 1 489 0
 405 0000 024B     		ldr	r3, .L29
 406 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 407              	.LVL14:
 490:Generated_Source\PSoC5/RPi_UART.c **** 
 491:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/RPi_UART.c ****         {
 494:Generated_Source\PSoC5/RPi_UART.c ****             status |= RPi_UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/RPi_UART.c ****         }
 497:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/RPi_UART.c **** 
 499:Generated_Source\PSoC5/RPi_UART.c ****         return(status);
 500:Generated_Source\PSoC5/RPi_UART.c ****     }
 408              		.loc 1 500 0
 409 0004 00F07F00 		and	r0, r0, #127
 410              	.LVL15:
 411 0008 7047     		bx	lr
 412              	.L30:
 413 000a 00BF     		.align	2
 414              	.L29:
 415 000c 66640040 		.word	1073767526
 416              		.cfi_endproc
 417              	.LFE8:
 418              		.size	RPi_UART_ReadRxStatus, .-RPi_UART_ReadRxStatus
 419              		.section	.text.RPi_UART_GetChar,"ax",%progbits
 420              		.align	2
 421              		.global	RPi_UART_GetChar
 422              		.thumb
 423              		.thumb_func
 424              		.type	RPi_UART_GetChar, %function
 425              	RPi_UART_GetChar:
 426              	.LFB9:
 501:Generated_Source\PSoC5/RPi_UART.c **** 
 502:Generated_Source\PSoC5/RPi_UART.c **** 
 503:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_GetChar
 505:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/RPi_UART.c ****     *
 507:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 18


 508:Generated_Source\PSoC5/RPi_UART.c ****     *  Returns the last received byte of data. RPi_UART_GetChar() is
 509:Generated_Source\PSoC5/RPi_UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/RPi_UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/RPi_UART.c ****     *
 512:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 514:Generated_Source\PSoC5/RPi_UART.c ****     *
 515:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 516:Generated_Source\PSoC5/RPi_UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/RPi_UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/RPi_UART.c ****     *
 519:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/RPi_UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/RPi_UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/RPi_UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/RPi_UART.c ****     *
 528:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
 530:Generated_Source\PSoC5/RPi_UART.c ****     *
 531:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_GetChar(void) 
 533:Generated_Source\PSoC5/RPi_UART.c ****     {
 427              		.loc 1 533 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432              	.LVL16:
 534:Generated_Source\PSoC5/RPi_UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/RPi_UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/RPi_UART.c **** 
 537:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/RPi_UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/RPi_UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/RPi_UART.c **** 
 541:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableRxInt();
 543:Generated_Source\PSoC5/RPi_UART.c **** 
 544:Generated_Source\PSoC5/RPi_UART.c ****         locRxBufferRead  = RPi_UART_rxBufferRead;
 545:Generated_Source\PSoC5/RPi_UART.c ****         locRxBufferWrite = RPi_UART_rxBufferWrite;
 546:Generated_Source\PSoC5/RPi_UART.c **** 
 547:Generated_Source\PSoC5/RPi_UART.c ****         if( (RPi_UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/RPi_UART.c ****         {
 549:Generated_Source\PSoC5/RPi_UART.c ****             rxData = RPi_UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/RPi_UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/RPi_UART.c ****             if(locRxBufferRead >= RPi_UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/RPi_UART.c ****             {
 553:Generated_Source\PSoC5/RPi_UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/RPi_UART.c ****             }
 555:Generated_Source\PSoC5/RPi_UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/RPi_UART.c **** 
 558:Generated_Source\PSoC5/RPi_UART.c ****             if(RPi_UART_rxBufferLoopDetect != 0u)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 19


 559:Generated_Source\PSoC5/RPi_UART.c ****             {
 560:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/RPi_UART.c ****                 #if( (RPi_UART_RX_INTERRUPT_ENABLED) && (RPi_UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/RPi_UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/RPi_UART.c ****                     #if( RPi_UART_HD_ENABLED )
 564:Generated_Source\PSoC5/RPi_UART.c ****                         if((RPi_UART_CONTROL_REG & RPi_UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/RPi_UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/RPi_UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/RPi_UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/RPi_UART.c ****                             */
 569:Generated_Source\PSoC5/RPi_UART.c ****                             RPi_UART_RXSTATUS_MASK_REG |= RPi_UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/RPi_UART.c ****                         }
 571:Generated_Source\PSoC5/RPi_UART.c ****                     #else
 572:Generated_Source\PSoC5/RPi_UART.c ****                         RPi_UART_RXSTATUS_MASK_REG |= RPi_UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/RPi_UART.c ****                     #endif /* end RPi_UART_HD_ENABLED */
 574:Generated_Source\PSoC5/RPi_UART.c ****                 #endif /* RPi_UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/RPi_UART.c ****             }
 576:Generated_Source\PSoC5/RPi_UART.c **** 
 577:Generated_Source\PSoC5/RPi_UART.c ****         }
 578:Generated_Source\PSoC5/RPi_UART.c ****         else
 579:Generated_Source\PSoC5/RPi_UART.c ****         {   rxStatus = RPi_UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/RPi_UART.c ****             if((rxStatus & RPi_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/RPi_UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/RPi_UART.c ****                 rxData = RPi_UART_RXDATA_REG;
 583:Generated_Source\PSoC5/RPi_UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/RPi_UART.c ****                 if((rxStatus & (RPi_UART_RX_STS_BREAK | RPi_UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/RPi_UART.c ****                                 RPi_UART_RX_STS_STOP_ERROR | RPi_UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/RPi_UART.c ****                 {
 587:Generated_Source\PSoC5/RPi_UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/RPi_UART.c ****                 }
 589:Generated_Source\PSoC5/RPi_UART.c ****             }
 590:Generated_Source\PSoC5/RPi_UART.c ****         }
 591:Generated_Source\PSoC5/RPi_UART.c **** 
 592:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableRxInt();
 593:Generated_Source\PSoC5/RPi_UART.c **** 
 594:Generated_Source\PSoC5/RPi_UART.c ****     #else
 595:Generated_Source\PSoC5/RPi_UART.c **** 
 596:Generated_Source\PSoC5/RPi_UART.c ****         rxStatus =RPi_UART_RXSTATUS_REG;
 433              		.loc 1 596 0
 434 0000 074B     		ldr	r3, .L35
 435 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 436 0004 DBB2     		uxtb	r3, r3
 437              	.LVL17:
 597:Generated_Source\PSoC5/RPi_UART.c ****         if((rxStatus & RPi_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 438              		.loc 1 597 0
 439 0006 03F02002 		and	r2, r3, #32
 440 000a 02F0FF00 		and	r0, r2, #255
 441 000e 2AB1     		cbz	r2, .L32
 598:Generated_Source\PSoC5/RPi_UART.c ****         {
 599:Generated_Source\PSoC5/RPi_UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/RPi_UART.c ****             rxData = RPi_UART_RXDATA_REG;
 442              		.loc 1 600 0
 443 0010 044A     		ldr	r2, .L35+4
 601:Generated_Source\PSoC5/RPi_UART.c **** 
 602:Generated_Source\PSoC5/RPi_UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/RPi_UART.c ****             if((rxStatus & (RPi_UART_RX_STS_BREAK | RPi_UART_RX_STS_PAR_ERROR |
 444              		.loc 1 603 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 20


 445 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/RPi_UART.c **** 
 446              		.loc 1 600 0
 447 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 448              	.LVL18:
 604:Generated_Source\PSoC5/RPi_UART.c ****                             RPi_UART_RX_STS_STOP_ERROR | RPi_UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/RPi_UART.c ****             {
 606:Generated_Source\PSoC5/RPi_UART.c ****                 rxData = 0u;
 449              		.loc 1 606 0
 450 0018 18BF     		it	ne
 451 001a 0020     		movne	r0, #0
 452              	.LVL19:
 453              	.L32:
 607:Generated_Source\PSoC5/RPi_UART.c ****             }
 608:Generated_Source\PSoC5/RPi_UART.c ****         }
 609:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/RPi_UART.c **** 
 611:Generated_Source\PSoC5/RPi_UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/RPi_UART.c ****     }
 454              		.loc 1 612 0
 455 001c 7047     		bx	lr
 456              	.L36:
 457 001e 00BF     		.align	2
 458              	.L35:
 459 0020 66640040 		.word	1073767526
 460 0024 44650040 		.word	1073767748
 461              		.cfi_endproc
 462              	.LFE9:
 463              		.size	RPi_UART_GetChar, .-RPi_UART_GetChar
 464              		.section	.text.RPi_UART_GetByte,"ax",%progbits
 465              		.align	2
 466              		.global	RPi_UART_GetByte
 467              		.thumb
 468              		.thumb_func
 469              		.type	RPi_UART_GetByte, %function
 470              	RPi_UART_GetByte:
 471              	.LFB10:
 613:Generated_Source\PSoC5/RPi_UART.c **** 
 614:Generated_Source\PSoC5/RPi_UART.c **** 
 615:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_GetByte
 617:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/RPi_UART.c ****     *
 619:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 620:Generated_Source\PSoC5/RPi_UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/RPi_UART.c ****     *  condition.
 622:Generated_Source\PSoC5/RPi_UART.c ****     *
 623:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 625:Generated_Source\PSoC5/RPi_UART.c ****     *
 626:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 627:Generated_Source\PSoC5/RPi_UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/RPi_UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/RPi_UART.c ****     *
 630:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
 632:Generated_Source\PSoC5/RPi_UART.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 21


 633:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/RPi_UART.c ****     uint16 RPi_UART_GetByte(void) 
 635:Generated_Source\PSoC5/RPi_UART.c ****     {
 472              		.loc 1 635 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LBB22:
 478              	.LBB23:
 489:Generated_Source\PSoC5/RPi_UART.c **** 
 479              		.loc 1 489 0
 480 0000 044B     		ldr	r3, .L38
 481              	.LBE23:
 482              	.LBE22:
 483              	.LBB25:
 484              	.LBB26:
 448:Generated_Source\PSoC5/RPi_UART.c **** 
 485              		.loc 1 448 0
 486 0002 054A     		ldr	r2, .L38+4
 487              	.LBE26:
 488              	.LBE25:
 489              	.LBB28:
 490              	.LBB24:
 489:Generated_Source\PSoC5/RPi_UART.c **** 
 491              		.loc 1 489 0
 492 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 493              	.LBE24:
 494              	.LBE28:
 495              	.LBB29:
 496              	.LBB27:
 448:Generated_Source\PSoC5/RPi_UART.c **** 
 497              		.loc 1 448 0
 498 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 499              	.LBE27:
 500              	.LBE29:
 636:Generated_Source\PSoC5/RPi_UART.c ****         
 637:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/RPi_UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableRxInt();
 641:Generated_Source\PSoC5/RPi_UART.c ****         locErrorStatus = (uint16)RPi_UART_errorStatus;
 642:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableRxInt();
 644:Generated_Source\PSoC5/RPi_UART.c ****         return ( (uint16)(locErrorStatus << 8u) | RPi_UART_ReadRxData() );
 645:Generated_Source\PSoC5/RPi_UART.c ****     #else
 646:Generated_Source\PSoC5/RPi_UART.c ****         return ( ((uint16)RPi_UART_ReadRxStatus() << 8u) | RPi_UART_ReadRxData() );
 501              		.loc 1 646 0
 502 0008 03F07F03 		and	r3, r3, #127
 647:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* RPi_UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/RPi_UART.c ****         
 649:Generated_Source\PSoC5/RPi_UART.c ****     }
 503              		.loc 1 649 0
 504 000c 40EA0320 		orr	r0, r0, r3, lsl #8
 505 0010 7047     		bx	lr
 506              	.L39:
 507 0012 00BF     		.align	2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 22


 508              	.L38:
 509 0014 66640040 		.word	1073767526
 510 0018 44650040 		.word	1073767748
 511              		.cfi_endproc
 512              	.LFE10:
 513              		.size	RPi_UART_GetByte, .-RPi_UART_GetByte
 514              		.section	.text.RPi_UART_GetRxBufferSize,"ax",%progbits
 515              		.align	2
 516              		.global	RPi_UART_GetRxBufferSize
 517              		.thumb
 518              		.thumb_func
 519              		.type	RPi_UART_GetRxBufferSize, %function
 520              	RPi_UART_GetRxBufferSize:
 521              	.LFB11:
 650:Generated_Source\PSoC5/RPi_UART.c **** 
 651:Generated_Source\PSoC5/RPi_UART.c **** 
 652:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_GetRxBufferSize
 654:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/RPi_UART.c ****     *
 656:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 657:Generated_Source\PSoC5/RPi_UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/RPi_UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/RPi_UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/RPi_UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/RPi_UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/RPi_UART.c ****     *    account.
 663:Generated_Source\PSoC5/RPi_UART.c ****     *
 664:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 666:Generated_Source\PSoC5/RPi_UART.c ****     *
 667:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 668:Generated_Source\PSoC5/RPi_UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/RPi_UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/RPi_UART.c ****     *
 671:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/RPi_UART.c ****     *
 676:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
 678:Generated_Source\PSoC5/RPi_UART.c ****     *
 679:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
 680:Generated_Source\PSoC5/RPi_UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/RPi_UART.c ****     *
 682:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/RPi_UART.c ****                                                             
 685:Generated_Source\PSoC5/RPi_UART.c ****     {
 522              		.loc 1 685 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 686:Generated_Source\PSoC5/RPi_UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/RPi_UART.c **** 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 23


 688:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/RPi_UART.c **** 
 690:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableRxInt();
 692:Generated_Source\PSoC5/RPi_UART.c **** 
 693:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_rxBufferRead == RPi_UART_rxBufferWrite)
 694:Generated_Source\PSoC5/RPi_UART.c ****         {
 695:Generated_Source\PSoC5/RPi_UART.c ****             if(RPi_UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/RPi_UART.c ****             {
 697:Generated_Source\PSoC5/RPi_UART.c ****                 size = RPi_UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/RPi_UART.c ****             }
 699:Generated_Source\PSoC5/RPi_UART.c ****             else
 700:Generated_Source\PSoC5/RPi_UART.c ****             {
 701:Generated_Source\PSoC5/RPi_UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/RPi_UART.c ****             }
 703:Generated_Source\PSoC5/RPi_UART.c ****         }
 704:Generated_Source\PSoC5/RPi_UART.c ****         else if(RPi_UART_rxBufferRead < RPi_UART_rxBufferWrite)
 705:Generated_Source\PSoC5/RPi_UART.c ****         {
 706:Generated_Source\PSoC5/RPi_UART.c ****             size = (RPi_UART_rxBufferWrite - RPi_UART_rxBufferRead);
 707:Generated_Source\PSoC5/RPi_UART.c ****         }
 708:Generated_Source\PSoC5/RPi_UART.c ****         else
 709:Generated_Source\PSoC5/RPi_UART.c ****         {
 710:Generated_Source\PSoC5/RPi_UART.c ****             size = (RPi_UART_RX_BUFFER_SIZE - RPi_UART_rxBufferRead) + RPi_UART_rxBufferWrite;
 711:Generated_Source\PSoC5/RPi_UART.c ****         }
 712:Generated_Source\PSoC5/RPi_UART.c **** 
 713:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableRxInt();
 714:Generated_Source\PSoC5/RPi_UART.c **** 
 715:Generated_Source\PSoC5/RPi_UART.c ****     #else
 716:Generated_Source\PSoC5/RPi_UART.c **** 
 717:Generated_Source\PSoC5/RPi_UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/RPi_UART.c ****         size = ((RPi_UART_RXSTATUS_REG & RPi_UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 527              		.loc 1 718 0
 528 0000 024B     		ldr	r3, .L41
 529 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 530              	.LVL20:
 719:Generated_Source\PSoC5/RPi_UART.c **** 
 720:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/RPi_UART.c **** 
 722:Generated_Source\PSoC5/RPi_UART.c ****         return(size);
 723:Generated_Source\PSoC5/RPi_UART.c ****     }
 531              		.loc 1 723 0
 532 0004 C0F34010 		ubfx	r0, r0, #5, #1
 533              	.LVL21:
 534 0008 7047     		bx	lr
 535              	.L42:
 536 000a 00BF     		.align	2
 537              	.L41:
 538 000c 66640040 		.word	1073767526
 539              		.cfi_endproc
 540              	.LFE11:
 541              		.size	RPi_UART_GetRxBufferSize, .-RPi_UART_GetRxBufferSize
 542              		.section	.text.RPi_UART_ClearRxBuffer,"ax",%progbits
 543              		.align	2
 544              		.global	RPi_UART_ClearRxBuffer
 545              		.thumb
 546              		.thumb_func
 547              		.type	RPi_UART_ClearRxBuffer, %function
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 24


 548              	RPi_UART_ClearRxBuffer:
 549              	.LFB12:
 724:Generated_Source\PSoC5/RPi_UART.c **** 
 725:Generated_Source\PSoC5/RPi_UART.c **** 
 726:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_ClearRxBuffer
 728:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/RPi_UART.c ****     *
 730:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 731:Generated_Source\PSoC5/RPi_UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/RPi_UART.c ****     *
 733:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 735:Generated_Source\PSoC5/RPi_UART.c ****     *
 736:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 737:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 738:Generated_Source\PSoC5/RPi_UART.c ****     *
 739:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/RPi_UART.c ****     *
 745:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
 747:Generated_Source\PSoC5/RPi_UART.c ****     *
 748:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
 749:Generated_Source\PSoC5/RPi_UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/RPi_UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/RPi_UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/RPi_UART.c ****     *
 753:Generated_Source\PSoC5/RPi_UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/RPi_UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/RPi_UART.c ****     *
 756:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/RPi_UART.c ****     {
 550              		.loc 1 758 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554 0000 08B5     		push	{r3, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 3, -8
 557              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/RPi_UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/RPi_UART.c **** 
 761:Generated_Source\PSoC5/RPi_UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/RPi_UART.c ****         enableInterrupts = CyEnterCriticalSection();
 558              		.loc 1 762 0
 559 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 560              	.LVL22:
 763:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXDATA_AUX_CTL_REG |= (uint8)  RPi_UART_RX_FIFO_CLR;
 561              		.loc 1 763 0
 562 0006 064B     		ldr	r3, .L45
 563 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 564 000a 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 25


 565 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXDATA_AUX_CTL_REG &= (uint8) ~RPi_UART_RX_FIFO_CLR;
 566              		.loc 1 764 0
 567 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 568 0012 02F0FE02 		and	r2, r2, #254
 569 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/RPi_UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/RPi_UART.c **** 
 767:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/RPi_UART.c **** 
 769:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableRxInt();
 771:Generated_Source\PSoC5/RPi_UART.c **** 
 772:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/RPi_UART.c **** 
 777:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableRxInt();
 778:Generated_Source\PSoC5/RPi_UART.c **** 
 779:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/RPi_UART.c **** 
 781:Generated_Source\PSoC5/RPi_UART.c ****     }
 570              		.loc 1 781 0
 571 0018 BDE80840 		pop	{r3, lr}
 572              		.cfi_restore 14
 573              		.cfi_restore 3
 574              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/RPi_UART.c ****         CyExitCriticalSection(enableInterrupts);
 575              		.loc 1 765 0
 576 001c FFF7FEBF 		b	CyExitCriticalSection
 577              	.LVL23:
 578              	.L46:
 579              		.align	2
 580              	.L45:
 581 0020 94650040 		.word	1073767828
 582              		.cfi_endproc
 583              	.LFE12:
 584              		.size	RPi_UART_ClearRxBuffer, .-RPi_UART_ClearRxBuffer
 585              		.section	.text.RPi_UART_SetRxAddressMode,"ax",%progbits
 586              		.align	2
 587              		.global	RPi_UART_SetRxAddressMode
 588              		.thumb
 589              		.thumb_func
 590              		.type	RPi_UART_SetRxAddressMode, %function
 591              	RPi_UART_SetRxAddressMode:
 592              	.LFB28:
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597 0000 7047     		bx	lr
 598              		.cfi_endproc
 599              	.LFE28:
 600              		.size	RPi_UART_SetRxAddressMode, .-RPi_UART_SetRxAddressMode
 601 0002 00BF     		.section	.text.RPi_UART_SetRxAddress1,"ax",%progbits
 602              		.align	2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 26


 603              		.global	RPi_UART_SetRxAddress1
 604              		.thumb
 605              		.thumb_func
 606              		.type	RPi_UART_SetRxAddress1, %function
 607              	RPi_UART_SetRxAddress1:
 608              	.LFB14:
 782:Generated_Source\PSoC5/RPi_UART.c **** 
 783:Generated_Source\PSoC5/RPi_UART.c **** 
 784:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SetRxAddressMode
 786:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/RPi_UART.c ****     *
 788:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 789:Generated_Source\PSoC5/RPi_UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/RPi_UART.c ****     *  UART.
 791:Generated_Source\PSoC5/RPi_UART.c ****     *
 792:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/RPi_UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/RPi_UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/RPi_UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/RPi_UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/RPi_UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/RPi_UART.c ****     *
 804:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 805:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 806:Generated_Source\PSoC5/RPi_UART.c ****     *
 807:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/RPi_UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/RPi_UART.c ****     *
 812:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/RPi_UART.c ****                                                         
 815:Generated_Source\PSoC5/RPi_UART.c ****     {
 816:Generated_Source\PSoC5/RPi_UART.c ****         #if(RPi_UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/RPi_UART.c ****             #if(RPi_UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/RPi_UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/RPi_UART.c ****                 {
 820:Generated_Source\PSoC5/RPi_UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/RPi_UART.c ****                 }
 822:Generated_Source\PSoC5/RPi_UART.c ****             #else /* RPi_UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/RPi_UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/RPi_UART.c ****                 tmpCtrl = RPi_UART_CONTROL_REG & (uint8)~RPi_UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/RPi_UART.c ****                 tmpCtrl |= (uint8)(addressMode << RPi_UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/RPi_UART.c **** 
 828:Generated_Source\PSoC5/RPi_UART.c ****                 #if(RPi_UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/RPi_UART.c ****                    (RPi_UART_RXBUFFERSIZE > RPi_UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/RPi_UART.c ****                 #endif /* End RPi_UART_RXBUFFERSIZE > RPi_UART_FIFO_LENGTH*/
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 27


 833:Generated_Source\PSoC5/RPi_UART.c ****             #endif /* End RPi_UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/RPi_UART.c ****         #else /* RPi_UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/RPi_UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/RPi_UART.c ****             {
 837:Generated_Source\PSoC5/RPi_UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/RPi_UART.c ****             }
 839:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* End RPi_UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/RPi_UART.c ****     }
 841:Generated_Source\PSoC5/RPi_UART.c **** 
 842:Generated_Source\PSoC5/RPi_UART.c **** 
 843:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SetRxAddress1
 845:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/RPi_UART.c ****     *
 847:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 848:Generated_Source\PSoC5/RPi_UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/RPi_UART.c ****     *
 850:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/RPi_UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/RPi_UART.c ****     *
 853:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 854:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 855:Generated_Source\PSoC5/RPi_UART.c ****     *
 856:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/RPi_UART.c ****     {
 609              		.loc 1 858 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614              	.LVL24:
 859:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXADDRESS1_REG = address;
 615              		.loc 1 859 0
 616 0000 014B     		ldr	r3, .L49
 617 0002 1870     		strb	r0, [r3]
 618 0004 7047     		bx	lr
 619              	.L50:
 620 0006 00BF     		.align	2
 621              	.L49:
 622 0008 24650040 		.word	1073767716
 623              		.cfi_endproc
 624              	.LFE14:
 625              		.size	RPi_UART_SetRxAddress1, .-RPi_UART_SetRxAddress1
 626              		.section	.text.RPi_UART_SetRxAddress2,"ax",%progbits
 627              		.align	2
 628              		.global	RPi_UART_SetRxAddress2
 629              		.thumb
 630              		.thumb_func
 631              		.type	RPi_UART_SetRxAddress2, %function
 632              	RPi_UART_SetRxAddress2:
 633              	.LFB15:
 860:Generated_Source\PSoC5/RPi_UART.c ****     }
 861:Generated_Source\PSoC5/RPi_UART.c **** 
 862:Generated_Source\PSoC5/RPi_UART.c **** 
 863:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SetRxAddress2
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 28


 865:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/RPi_UART.c ****     *
 867:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 868:Generated_Source\PSoC5/RPi_UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/RPi_UART.c ****     *
 870:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/RPi_UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/RPi_UART.c ****     *
 873:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 874:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 875:Generated_Source\PSoC5/RPi_UART.c ****     *
 876:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/RPi_UART.c ****     {
 634              		.loc 1 878 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639              	.LVL25:
 879:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_RXADDRESS2_REG = address;
 640              		.loc 1 879 0
 641 0000 014B     		ldr	r3, .L52
 642 0002 1870     		strb	r0, [r3]
 643 0004 7047     		bx	lr
 644              	.L53:
 645 0006 00BF     		.align	2
 646              	.L52:
 647 0008 34650040 		.word	1073767732
 648              		.cfi_endproc
 649              	.LFE15:
 650              		.size	RPi_UART_SetRxAddress2, .-RPi_UART_SetRxAddress2
 651              		.section	.text.RPi_UART_SetTxInterruptMode,"ax",%progbits
 652              		.align	2
 653              		.global	RPi_UART_SetTxInterruptMode
 654              		.thumb
 655              		.thumb_func
 656              		.type	RPi_UART_SetTxInterruptMode, %function
 657              	RPi_UART_SetTxInterruptMode:
 658              	.LFB16:
 880:Generated_Source\PSoC5/RPi_UART.c ****     }
 881:Generated_Source\PSoC5/RPi_UART.c **** 
 882:Generated_Source\PSoC5/RPi_UART.c **** #endif  /* RPi_UART_RX_ENABLED || RPi_UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/RPi_UART.c **** 
 884:Generated_Source\PSoC5/RPi_UART.c **** 
 885:Generated_Source\PSoC5/RPi_UART.c **** #if( (RPi_UART_TX_ENABLED) || (RPi_UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/RPi_UART.c ****     *
 890:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 891:Generated_Source\PSoC5/RPi_UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/RPi_UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/RPi_UART.c ****     *
 894:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/RPi_UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_TX_STS_COMPLETE        Interrupt on TX byte complete
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 29


 897:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/RPi_UART.c ****     *
 901:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 902:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 903:Generated_Source\PSoC5/RPi_UART.c ****     *
 904:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
 905:Generated_Source\PSoC5/RPi_UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/RPi_UART.c ****     *
 907:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/RPi_UART.c ****     {
 659              		.loc 1 909 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664              	.LVL26:
 910:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_TXSTATUS_MASK_REG = intSrc;
 665              		.loc 1 910 0
 666 0000 014B     		ldr	r3, .L55
 667 0002 1870     		strb	r0, [r3]
 668 0004 7047     		bx	lr
 669              	.L56:
 670 0006 00BF     		.align	2
 671              	.L55:
 672 0008 85650040 		.word	1073767813
 673              		.cfi_endproc
 674              	.LFE16:
 675              		.size	RPi_UART_SetTxInterruptMode, .-RPi_UART_SetTxInterruptMode
 676              		.section	.text.RPi_UART_WriteTxData,"ax",%progbits
 677              		.align	2
 678              		.global	RPi_UART_WriteTxData
 679              		.thumb
 680              		.thumb_func
 681              		.type	RPi_UART_WriteTxData, %function
 682              	RPi_UART_WriteTxData:
 683              	.LFB17:
 911:Generated_Source\PSoC5/RPi_UART.c ****     }
 912:Generated_Source\PSoC5/RPi_UART.c **** 
 913:Generated_Source\PSoC5/RPi_UART.c **** 
 914:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_WriteTxData
 916:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/RPi_UART.c ****     *
 918:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 919:Generated_Source\PSoC5/RPi_UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/RPi_UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/RPi_UART.c ****     *  separately.
 922:Generated_Source\PSoC5/RPi_UART.c ****     *
 923:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/RPi_UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/RPi_UART.c ****     *
 926:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 927:Generated_Source\PSoC5/RPi_UART.c ****     * None.
 928:Generated_Source\PSoC5/RPi_UART.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 30


 929:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/RPi_UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/RPi_UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/RPi_UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/RPi_UART.c ****     *
 938:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
 940:Generated_Source\PSoC5/RPi_UART.c ****     *
 941:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/RPi_UART.c ****     {
 684              		.loc 1 943 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LVL27:
 944:Generated_Source\PSoC5/RPi_UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_initVar != 0u)
 690              		.loc 1 945 0
 691 0000 024B     		ldr	r3, .L62
 692 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 693 0004 0BB1     		cbz	r3, .L57
 946:Generated_Source\PSoC5/RPi_UART.c ****         {
 947:Generated_Source\PSoC5/RPi_UART.c ****         #if (RPi_UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/RPi_UART.c **** 
 949:Generated_Source\PSoC5/RPi_UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_DisableTxInt();
 951:Generated_Source\PSoC5/RPi_UART.c **** 
 952:Generated_Source\PSoC5/RPi_UART.c ****             if( (RPi_UART_txBufferRead == RPi_UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/RPi_UART.c ****                 ((RPi_UART_TXSTATUS_REG & RPi_UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/RPi_UART.c ****             {
 955:Generated_Source\PSoC5/RPi_UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/RPi_UART.c ****             }
 958:Generated_Source\PSoC5/RPi_UART.c ****             else
 959:Generated_Source\PSoC5/RPi_UART.c ****             {
 960:Generated_Source\PSoC5/RPi_UART.c ****                 if(RPi_UART_txBufferWrite >= RPi_UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/RPi_UART.c ****                 {
 962:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/RPi_UART.c ****                 }
 964:Generated_Source\PSoC5/RPi_UART.c **** 
 965:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_txBuffer[RPi_UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/RPi_UART.c **** 
 967:Generated_Source\PSoC5/RPi_UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_txBufferWrite++;
 969:Generated_Source\PSoC5/RPi_UART.c ****             }
 970:Generated_Source\PSoC5/RPi_UART.c **** 
 971:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_EnableTxInt();
 972:Generated_Source\PSoC5/RPi_UART.c **** 
 973:Generated_Source\PSoC5/RPi_UART.c ****         #else
 974:Generated_Source\PSoC5/RPi_UART.c **** 
 975:Generated_Source\PSoC5/RPi_UART.c ****             /* Add directly to the FIFO. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 31


 976:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXDATA_REG = txDataByte;
 694              		.loc 1 976 0
 695 0006 024B     		ldr	r3, .L62+4
 696 0008 1870     		strb	r0, [r3]
 697              	.L57:
 698 000a 7047     		bx	lr
 699              	.L63:
 700              		.align	2
 701              	.L62:
 702 000c 00000000 		.word	.LANCHOR0
 703 0010 46650040 		.word	1073767750
 704              		.cfi_endproc
 705              	.LFE17:
 706              		.size	RPi_UART_WriteTxData, .-RPi_UART_WriteTxData
 707              		.section	.text.RPi_UART_ReadTxStatus,"ax",%progbits
 708              		.align	2
 709              		.global	RPi_UART_ReadTxStatus
 710              		.thumb
 711              		.thumb_func
 712              		.type	RPi_UART_ReadTxStatus, %function
 713              	RPi_UART_ReadTxStatus:
 714              	.LFB18:
 977:Generated_Source\PSoC5/RPi_UART.c **** 
 978:Generated_Source\PSoC5/RPi_UART.c ****         #endif /*(RPi_UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/RPi_UART.c ****         }
 980:Generated_Source\PSoC5/RPi_UART.c ****     }
 981:Generated_Source\PSoC5/RPi_UART.c **** 
 982:Generated_Source\PSoC5/RPi_UART.c **** 
 983:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_ReadTxStatus
 985:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/RPi_UART.c ****     *
 987:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
 988:Generated_Source\PSoC5/RPi_UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/RPi_UART.c ****     *
 990:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
 992:Generated_Source\PSoC5/RPi_UART.c ****     *
 993:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
 994:Generated_Source\PSoC5/RPi_UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/RPi_UART.c ****     *
 996:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
 997:Generated_Source\PSoC5/RPi_UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/RPi_UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/RPi_UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/RPi_UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/RPi_UART.c ****     *
1002:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/RPi_UART.c ****     {
 715              		.loc 1 1004 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
1005:Generated_Source\PSoC5/RPi_UART.c ****         return(RPi_UART_TXSTATUS_REG);
 720              		.loc 1 1005 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 32


 721 0000 014B     		ldr	r3, .L65
 722 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/RPi_UART.c ****     }
 723              		.loc 1 1006 0
 724 0004 7047     		bx	lr
 725              	.L66:
 726 0006 00BF     		.align	2
 727              	.L65:
 728 0008 65650040 		.word	1073767781
 729              		.cfi_endproc
 730              	.LFE18:
 731              		.size	RPi_UART_ReadTxStatus, .-RPi_UART_ReadTxStatus
 732              		.section	.text.RPi_UART_PutChar,"ax",%progbits
 733              		.align	2
 734              		.global	RPi_UART_PutChar
 735              		.thumb
 736              		.thumb_func
 737              		.type	RPi_UART_PutChar, %function
 738              	RPi_UART_PutChar:
 739              	.LFB19:
1007:Generated_Source\PSoC5/RPi_UART.c **** 
1008:Generated_Source\PSoC5/RPi_UART.c **** 
1009:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_PutChar
1011:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/RPi_UART.c ****     *
1013:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1014:Generated_Source\PSoC5/RPi_UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/RPi_UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/RPi_UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/RPi_UART.c ****     *
1018:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/RPi_UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/RPi_UART.c ****     *
1021:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1022:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1023:Generated_Source\PSoC5/RPi_UART.c ****     *
1024:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/RPi_UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/RPi_UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/RPi_UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/RPi_UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/RPi_UART.c ****     *
1034:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1036:Generated_Source\PSoC5/RPi_UART.c ****     *
1037:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
1038:Generated_Source\PSoC5/RPi_UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/RPi_UART.c ****     *
1040:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/RPi_UART.c ****     {
 740              		.loc 1 1042 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 33


 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745              	.LVL28:
1043:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/RPi_UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/RPi_UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/RPi_UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/RPi_UART.c ****         */
1048:Generated_Source\PSoC5/RPi_UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/RPi_UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/RPi_UART.c **** 
1051:Generated_Source\PSoC5/RPi_UART.c ****         do
1052:Generated_Source\PSoC5/RPi_UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/RPi_UART.c **** 
1054:Generated_Source\PSoC5/RPi_UART.c ****         #if ((RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/RPi_UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_DisableTxInt();
1057:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/RPi_UART.c **** 
1059:Generated_Source\PSoC5/RPi_UART.c ****             locTxBufferWrite = RPi_UART_txBufferWrite;
1060:Generated_Source\PSoC5/RPi_UART.c ****             locTxBufferRead  = RPi_UART_txBufferRead;
1061:Generated_Source\PSoC5/RPi_UART.c **** 
1062:Generated_Source\PSoC5/RPi_UART.c ****         #if ((RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/RPi_UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_EnableTxInt();
1065:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/RPi_UART.c ****         }
1067:Generated_Source\PSoC5/RPi_UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/RPi_UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/RPi_UART.c ****                                 (uint8)(RPi_UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/RPi_UART.c **** 
1071:Generated_Source\PSoC5/RPi_UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/RPi_UART.c ****             ((RPi_UART_TXSTATUS_REG & RPi_UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/RPi_UART.c ****         {
1074:Generated_Source\PSoC5/RPi_UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/RPi_UART.c ****         }
1077:Generated_Source\PSoC5/RPi_UART.c ****         else
1078:Generated_Source\PSoC5/RPi_UART.c ****         {
1079:Generated_Source\PSoC5/RPi_UART.c ****             if(locTxBufferWrite >= RPi_UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/RPi_UART.c ****             {
1081:Generated_Source\PSoC5/RPi_UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/RPi_UART.c ****             }
1083:Generated_Source\PSoC5/RPi_UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/RPi_UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/RPi_UART.c **** 
1087:Generated_Source\PSoC5/RPi_UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/RPi_UART.c ****         #if ((RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_DisableTxInt();
1090:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/RPi_UART.c **** 
1092:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/RPi_UART.c **** 
1094:Generated_Source\PSoC5/RPi_UART.c ****         #if ((RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 34


1095:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_EnableTxInt();
1096:Generated_Source\PSoC5/RPi_UART.c ****         #endif /* (RPi_UART_TX_BUFFER_SIZE > RPi_UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/RPi_UART.c **** 
1098:Generated_Source\PSoC5/RPi_UART.c ****             if(0u != (RPi_UART_TXSTATUS_REG & RPi_UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/RPi_UART.c ****             {
1100:Generated_Source\PSoC5/RPi_UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/RPi_UART.c ****             }
1103:Generated_Source\PSoC5/RPi_UART.c ****         }
1104:Generated_Source\PSoC5/RPi_UART.c **** 
1105:Generated_Source\PSoC5/RPi_UART.c ****     #else
1106:Generated_Source\PSoC5/RPi_UART.c **** 
1107:Generated_Source\PSoC5/RPi_UART.c ****         while((RPi_UART_TXSTATUS_REG & RPi_UART_TX_STS_FIFO_FULL) != 0u)
 746              		.loc 1 1107 0
 747 0000 034A     		ldr	r2, .L70
 748              	.L68:
 749              		.loc 1 1107 0 is_stmt 0 discriminator 1
 750 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 751 0004 5B07     		lsls	r3, r3, #29
 752 0006 FCD4     		bmi	.L68
1108:Generated_Source\PSoC5/RPi_UART.c ****         {
1109:Generated_Source\PSoC5/RPi_UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/RPi_UART.c ****         }
1111:Generated_Source\PSoC5/RPi_UART.c **** 
1112:Generated_Source\PSoC5/RPi_UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_TXDATA_REG = txDataByte;
 753              		.loc 1 1113 0 is_stmt 1
 754 0008 024B     		ldr	r3, .L70+4
 755 000a 1870     		strb	r0, [r3]
 756 000c 7047     		bx	lr
 757              	.L71:
 758 000e 00BF     		.align	2
 759              	.L70:
 760 0010 65650040 		.word	1073767781
 761 0014 46650040 		.word	1073767750
 762              		.cfi_endproc
 763              	.LFE19:
 764              		.size	RPi_UART_PutChar, .-RPi_UART_PutChar
 765              		.section	.text.RPi_UART_PutString,"ax",%progbits
 766              		.align	2
 767              		.global	RPi_UART_PutString
 768              		.thumb
 769              		.thumb_func
 770              		.type	RPi_UART_PutString, %function
 771              	RPi_UART_PutString:
 772              	.LFB20:
1114:Generated_Source\PSoC5/RPi_UART.c **** 
1115:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* RPi_UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/RPi_UART.c ****     }
1117:Generated_Source\PSoC5/RPi_UART.c **** 
1118:Generated_Source\PSoC5/RPi_UART.c **** 
1119:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_PutString
1121:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/RPi_UART.c ****     *
1123:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1124:Generated_Source\PSoC5/RPi_UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 35


1125:Generated_Source\PSoC5/RPi_UART.c ****     *
1126:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/RPi_UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/RPi_UART.c ****     *
1129:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1130:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1131:Generated_Source\PSoC5/RPi_UART.c ****     *
1132:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/RPi_UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/RPi_UART.c ****     *
1136:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1138:Generated_Source\PSoC5/RPi_UART.c ****     *
1139:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
1140:Generated_Source\PSoC5/RPi_UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/RPi_UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/RPi_UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/RPi_UART.c ****     *
1144:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/RPi_UART.c ****     {
 773              		.loc 1 1146 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL29:
1147:Generated_Source\PSoC5/RPi_UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/RPi_UART.c **** 
1149:Generated_Source\PSoC5/RPi_UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_initVar != 0u)
 779              		.loc 1 1150 0
 780 0000 094B     		ldr	r3, .L85
 781 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 782 0004 7BB1     		cbz	r3, .L84
1146:Generated_Source\PSoC5/RPi_UART.c ****         uint16 bufIndex = 0u;
 783              		.loc 1 1146 0
 784 0006 30B4     		push	{r4, r5}
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 4, -8
 787              		.cfi_offset 5, -4
1151:Generated_Source\PSoC5/RPi_UART.c ****         {
1152:Generated_Source\PSoC5/RPi_UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/RPi_UART.c ****             while(string[bufIndex] != (char8) 0)
 788              		.loc 1 1153 0
 789 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 790 000a 5CB1     		cbz	r4, .L72
 791              	.LBB30:
 792              	.LBB31:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 793              		.loc 1 1107 0
 794 000c 074A     		ldr	r2, .L85+4
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 795              		.loc 1 1113 0
 796 000e 084D     		ldr	r5, .L85+8
 797              	.LBE31:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 36


 798              	.LBE30:
 799              		.loc 1 1153 0
 800 0010 0021     		movs	r1, #0
 801              	.LVL30:
 802              	.L75:
 803              	.LBB34:
 804              	.LBB32:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 805              		.loc 1 1107 0
 806 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 807 0014 5B07     		lsls	r3, r3, #29
 808 0016 FCD4     		bmi	.L75
 809              	.LBE32:
 810              	.LBE34:
1154:Generated_Source\PSoC5/RPi_UART.c ****             {
1155:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_PutChar((uint8)string[bufIndex]);
1156:Generated_Source\PSoC5/RPi_UART.c ****                 bufIndex++;
 811              		.loc 1 1156 0
 812 0018 0131     		adds	r1, r1, #1
 813 001a 89B2     		uxth	r1, r1
 814              	.LBB35:
 815              	.LBB33:
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 816              		.loc 1 1113 0
 817 001c 2C70     		strb	r4, [r5]
 818              	.LVL31:
 819              	.LBE33:
 820              	.LBE35:
1153:Generated_Source\PSoC5/RPi_UART.c ****             {
 821              		.loc 1 1153 0
 822 001e 445C     		ldrb	r4, [r0, r1]	@ zero_extendqisi2
 823 0020 002C     		cmp	r4, #0
 824 0022 F6D1     		bne	.L75
 825              	.LVL32:
 826              	.L72:
1157:Generated_Source\PSoC5/RPi_UART.c ****             }
1158:Generated_Source\PSoC5/RPi_UART.c ****         }
1159:Generated_Source\PSoC5/RPi_UART.c ****     }
 827              		.loc 1 1159 0
 828 0024 30BC     		pop	{r4, r5}
 829              		.cfi_restore 5
 830              		.cfi_restore 4
 831              		.cfi_def_cfa_offset 0
 832              	.L84:
 833 0026 7047     		bx	lr
 834              	.L86:
 835              		.align	2
 836              	.L85:
 837 0028 00000000 		.word	.LANCHOR0
 838 002c 65650040 		.word	1073767781
 839 0030 46650040 		.word	1073767750
 840              		.cfi_endproc
 841              	.LFE20:
 842              		.size	RPi_UART_PutString, .-RPi_UART_PutString
 843              		.section	.text.RPi_UART_PutArray,"ax",%progbits
 844              		.align	2
 845              		.global	RPi_UART_PutArray
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 37


 846              		.thumb
 847              		.thumb_func
 848              		.type	RPi_UART_PutArray, %function
 849              	RPi_UART_PutArray:
 850              	.LFB21:
1160:Generated_Source\PSoC5/RPi_UART.c **** 
1161:Generated_Source\PSoC5/RPi_UART.c **** 
1162:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_PutArray
1164:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/RPi_UART.c ****     *
1166:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1167:Generated_Source\PSoC5/RPi_UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/RPi_UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/RPi_UART.c ****     *
1170:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/RPi_UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/RPi_UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/RPi_UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/RPi_UART.c ****     *
1175:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1176:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1177:Generated_Source\PSoC5/RPi_UART.c ****     *
1178:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/RPi_UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/RPi_UART.c ****     *
1182:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1184:Generated_Source\PSoC5/RPi_UART.c ****     *
1185:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
1186:Generated_Source\PSoC5/RPi_UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/RPi_UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/RPi_UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/RPi_UART.c ****     *
1190:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/RPi_UART.c ****                                                                     
1193:Generated_Source\PSoC5/RPi_UART.c ****     {
 851              		.loc 1 1193 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL33:
1194:Generated_Source\PSoC5/RPi_UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/RPi_UART.c **** 
1196:Generated_Source\PSoC5/RPi_UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_initVar != 0u)
 857              		.loc 1 1197 0
 858 0000 0A4B     		ldr	r3, .L100
 859 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 0004 83B1     		cbz	r3, .L99
1198:Generated_Source\PSoC5/RPi_UART.c ****         {
1199:Generated_Source\PSoC5/RPi_UART.c ****             while(bufIndex < byteCount)
 861              		.loc 1 1199 0
 862 0006 79B1     		cbz	r1, .L99
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 38


1193:Generated_Source\PSoC5/RPi_UART.c ****         uint8 bufIndex = 0u;
 863              		.loc 1 1193 0
 864 0008 30B4     		push	{r4, r5}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 4, -8
 867              		.cfi_offset 5, -4
 868 000a 4C1E     		subs	r4, r1, #1
 869 000c E4B2     		uxtb	r4, r4
 870              	.LBB36:
 871              	.LBB37:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 872              		.loc 1 1107 0
 873 000e 084A     		ldr	r2, .L100+4
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 874              		.loc 1 1113 0
 875 0010 084D     		ldr	r5, .L100+8
 876 0012 0444     		add	r4, r4, r0
 877 0014 411E     		subs	r1, r0, #1
 878              	.LVL34:
 879              	.L91:
 880              	.LBE37:
 881              	.LBE36:
1200:Generated_Source\PSoC5/RPi_UART.c ****             {
1201:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_PutChar(string[bufIndex]);
 882              		.loc 1 1201 0
 883 0016 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 884              	.LVL35:
 885              	.L90:
 886              	.LBB40:
 887              	.LBB38:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 888              		.loc 1 1107 0
 889 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 890 001c 5B07     		lsls	r3, r3, #29
 891 001e FCD4     		bmi	.L90
 892              	.LBE38:
 893              	.LBE40:
1199:Generated_Source\PSoC5/RPi_UART.c ****             {
 894              		.loc 1 1199 0
 895 0020 A142     		cmp	r1, r4
 896              	.LBB41:
 897              	.LBB39:
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 898              		.loc 1 1113 0
 899 0022 2870     		strb	r0, [r5]
 900              	.LVL36:
 901              	.LBE39:
 902              	.LBE41:
1199:Generated_Source\PSoC5/RPi_UART.c ****             {
 903              		.loc 1 1199 0
 904 0024 F7D1     		bne	.L91
1202:Generated_Source\PSoC5/RPi_UART.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/RPi_UART.c ****             }
1204:Generated_Source\PSoC5/RPi_UART.c ****         }
1205:Generated_Source\PSoC5/RPi_UART.c ****     }
 905              		.loc 1 1205 0
 906 0026 30BC     		pop	{r4, r5}
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 39


 907              		.cfi_restore 5
 908              		.cfi_restore 4
 909              		.cfi_def_cfa_offset 0
 910              	.LVL37:
 911              	.L99:
 912 0028 7047     		bx	lr
 913              	.L101:
 914 002a 00BF     		.align	2
 915              	.L100:
 916 002c 00000000 		.word	.LANCHOR0
 917 0030 65650040 		.word	1073767781
 918 0034 46650040 		.word	1073767750
 919              		.cfi_endproc
 920              	.LFE21:
 921              		.size	RPi_UART_PutArray, .-RPi_UART_PutArray
 922              		.section	.text.RPi_UART_PutCRLF,"ax",%progbits
 923              		.align	2
 924              		.global	RPi_UART_PutCRLF
 925              		.thumb
 926              		.thumb_func
 927              		.type	RPi_UART_PutCRLF, %function
 928              	RPi_UART_PutCRLF:
 929              	.LFB22:
1206:Generated_Source\PSoC5/RPi_UART.c **** 
1207:Generated_Source\PSoC5/RPi_UART.c **** 
1208:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_PutCRLF
1210:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/RPi_UART.c ****     *
1212:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1213:Generated_Source\PSoC5/RPi_UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/RPi_UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/RPi_UART.c ****     *
1216:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/RPi_UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/RPi_UART.c ****     *
1219:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1220:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1221:Generated_Source\PSoC5/RPi_UART.c ****     *
1222:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/RPi_UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/RPi_UART.c ****     *
1226:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1228:Generated_Source\PSoC5/RPi_UART.c ****     *
1229:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/RPi_UART.c ****     {
 930              		.loc 1 1231 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935              	.LVL38:
1232:Generated_Source\PSoC5/RPi_UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_initVar != 0u)
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 40


 936              		.loc 1 1233 0
 937 0000 0B4B     		ldr	r3, .L114
 938 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 0004 9BB1     		cbz	r3, .L102
 940              	.LBB42:
 941              	.LBB43:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 942              		.loc 1 1107 0
 943 0006 0B4A     		ldr	r2, .L114+4
 944              	.L109:
 945 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 946 000a 5B07     		lsls	r3, r3, #29
 947 000c FCD4     		bmi	.L109
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 948              		.loc 1 1113 0
 949 000e 0A4B     		ldr	r3, .L114+8
 950              	.LBE43:
 951              	.LBE42:
 952              	.LBB45:
 953              	.LBB46:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 954              		.loc 1 1107 0
 955 0010 084A     		ldr	r2, .L114+4
 956              	.LBE46:
 957              	.LBE45:
 958              	.LBB49:
 959              	.LBB44:
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 960              		.loc 1 1113 0
 961 0012 1870     		strb	r0, [r3]
 962              	.L105:
 963              	.LBE44:
 964              	.LBE49:
 965              	.LBB50:
 966              	.LBB47:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 967              		.loc 1 1107 0
 968 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 969 0016 5907     		lsls	r1, r3, #29
 970 0018 FCD4     		bmi	.L105
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 971              		.loc 1 1113 0
 972 001a 074B     		ldr	r3, .L114+8
 973 001c 0D21     		movs	r1, #13
 974              	.LBE47:
 975              	.LBE50:
 976              	.LBB51:
 977              	.LBB52:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 978              		.loc 1 1107 0
 979 001e 054A     		ldr	r2, .L114+4
 980              	.LBE52:
 981              	.LBE51:
 982              	.LBB54:
 983              	.LBB48:
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 984              		.loc 1 1113 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 41


 985 0020 1970     		strb	r1, [r3]
 986              	.L106:
 987              	.LBE48:
 988              	.LBE54:
 989              	.LBB55:
 990              	.LBB53:
1107:Generated_Source\PSoC5/RPi_UART.c ****         {
 991              		.loc 1 1107 0
 992 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 993 0024 5B07     		lsls	r3, r3, #29
 994 0026 FCD4     		bmi	.L106
1113:Generated_Source\PSoC5/RPi_UART.c **** 
 995              		.loc 1 1113 0
 996 0028 034B     		ldr	r3, .L114+8
 997 002a 0A22     		movs	r2, #10
 998 002c 1A70     		strb	r2, [r3]
 999              	.L102:
 1000 002e 7047     		bx	lr
 1001              	.L115:
 1002              		.align	2
 1003              	.L114:
 1004 0030 00000000 		.word	.LANCHOR0
 1005 0034 65650040 		.word	1073767781
 1006 0038 46650040 		.word	1073767750
 1007              	.LBE53:
 1008              	.LBE55:
 1009              		.cfi_endproc
 1010              	.LFE22:
 1011              		.size	RPi_UART_PutCRLF, .-RPi_UART_PutCRLF
 1012              		.section	.text.RPi_UART_GetTxBufferSize,"ax",%progbits
 1013              		.align	2
 1014              		.global	RPi_UART_GetTxBufferSize
 1015              		.thumb
 1016              		.thumb_func
 1017              		.type	RPi_UART_GetTxBufferSize, %function
 1018              	RPi_UART_GetTxBufferSize:
 1019              	.LFB23:
1234:Generated_Source\PSoC5/RPi_UART.c ****         {
1235:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_PutChar(txDataByte);
1236:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_PutChar(0x0Du);
1237:Generated_Source\PSoC5/RPi_UART.c ****             RPi_UART_PutChar(0x0Au);
1238:Generated_Source\PSoC5/RPi_UART.c ****         }
1239:Generated_Source\PSoC5/RPi_UART.c ****     }
1240:Generated_Source\PSoC5/RPi_UART.c **** 
1241:Generated_Source\PSoC5/RPi_UART.c **** 
1242:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_GetTxBufferSize
1244:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/RPi_UART.c ****     *
1246:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1247:Generated_Source\PSoC5/RPi_UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/RPi_UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/RPi_UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/RPi_UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/RPi_UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/RPi_UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/RPi_UART.c ****     *    TX FIFO do not count.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 42


1254:Generated_Source\PSoC5/RPi_UART.c ****     *
1255:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1257:Generated_Source\PSoC5/RPi_UART.c ****     *
1258:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1259:Generated_Source\PSoC5/RPi_UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/RPi_UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/RPi_UART.c ****     *
1262:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/RPi_UART.c ****     *
1266:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1268:Generated_Source\PSoC5/RPi_UART.c ****     *
1269:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
1270:Generated_Source\PSoC5/RPi_UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/RPi_UART.c ****     *
1272:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/RPi_UART.c ****     uint8 RPi_UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/RPi_UART.c ****                                                             
1275:Generated_Source\PSoC5/RPi_UART.c ****     {
 1020              		.loc 1 1275 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
1276:Generated_Source\PSoC5/RPi_UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/RPi_UART.c **** 
1278:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/RPi_UART.c **** 
1280:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableTxInt();
1282:Generated_Source\PSoC5/RPi_UART.c **** 
1283:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_txBufferRead == RPi_UART_txBufferWrite)
1284:Generated_Source\PSoC5/RPi_UART.c ****         {
1285:Generated_Source\PSoC5/RPi_UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/RPi_UART.c ****         }
1287:Generated_Source\PSoC5/RPi_UART.c ****         else if(RPi_UART_txBufferRead < RPi_UART_txBufferWrite)
1288:Generated_Source\PSoC5/RPi_UART.c ****         {
1289:Generated_Source\PSoC5/RPi_UART.c ****             size = (RPi_UART_txBufferWrite - RPi_UART_txBufferRead);
1290:Generated_Source\PSoC5/RPi_UART.c ****         }
1291:Generated_Source\PSoC5/RPi_UART.c ****         else
1292:Generated_Source\PSoC5/RPi_UART.c ****         {
1293:Generated_Source\PSoC5/RPi_UART.c ****             size = (RPi_UART_TX_BUFFER_SIZE - RPi_UART_txBufferRead) +
1294:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_txBufferWrite;
1295:Generated_Source\PSoC5/RPi_UART.c ****         }
1296:Generated_Source\PSoC5/RPi_UART.c **** 
1297:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableTxInt();
1298:Generated_Source\PSoC5/RPi_UART.c **** 
1299:Generated_Source\PSoC5/RPi_UART.c ****     #else
1300:Generated_Source\PSoC5/RPi_UART.c **** 
1301:Generated_Source\PSoC5/RPi_UART.c ****         size = RPi_UART_TXSTATUS_REG;
 1025              		.loc 1 1301 0
 1026 0000 054B     		ldr	r3, .L119
 1027 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1028 0004 C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 43


 1029              	.LVL39:
1302:Generated_Source\PSoC5/RPi_UART.c **** 
1303:Generated_Source\PSoC5/RPi_UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/RPi_UART.c ****         if((size & RPi_UART_TX_STS_FIFO_FULL) != 0u)
 1030              		.loc 1 1304 0
 1031 0006 4307     		lsls	r3, r0, #29
1305:Generated_Source\PSoC5/RPi_UART.c ****         {
1306:Generated_Source\PSoC5/RPi_UART.c ****             size = RPi_UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/RPi_UART.c ****         }
1308:Generated_Source\PSoC5/RPi_UART.c ****         else if((size & RPi_UART_TX_STS_FIFO_EMPTY) != 0u)
 1032              		.loc 1 1308 0
 1033 0008 5ABF     		itte	pl
 1034 000a 80F00200 		eorpl	r0, r0, #2
 1035              	.LVL40:
 1036 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:Generated_Source\PSoC5/RPi_UART.c ****         }
 1037              		.loc 1 1306 0
 1038 0012 0420     		movmi	r0, #4
 1039              	.LVL41:
1309:Generated_Source\PSoC5/RPi_UART.c ****         {
1310:Generated_Source\PSoC5/RPi_UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/RPi_UART.c ****         }
1312:Generated_Source\PSoC5/RPi_UART.c ****         else
1313:Generated_Source\PSoC5/RPi_UART.c ****         {
1314:Generated_Source\PSoC5/RPi_UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/RPi_UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/RPi_UART.c ****         }
1317:Generated_Source\PSoC5/RPi_UART.c **** 
1318:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/RPi_UART.c **** 
1320:Generated_Source\PSoC5/RPi_UART.c ****     return(size);
1321:Generated_Source\PSoC5/RPi_UART.c ****     }
 1040              		.loc 1 1321 0
 1041 0014 7047     		bx	lr
 1042              	.L120:
 1043 0016 00BF     		.align	2
 1044              	.L119:
 1045 0018 65650040 		.word	1073767781
 1046              		.cfi_endproc
 1047              	.LFE23:
 1048              		.size	RPi_UART_GetTxBufferSize, .-RPi_UART_GetTxBufferSize
 1049              		.section	.text.RPi_UART_ClearTxBuffer,"ax",%progbits
 1050              		.align	2
 1051              		.global	RPi_UART_ClearTxBuffer
 1052              		.thumb
 1053              		.thumb_func
 1054              		.type	RPi_UART_ClearTxBuffer, %function
 1055              	RPi_UART_ClearTxBuffer:
 1056              	.LFB24:
1322:Generated_Source\PSoC5/RPi_UART.c **** 
1323:Generated_Source\PSoC5/RPi_UART.c **** 
1324:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_ClearTxBuffer
1326:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/RPi_UART.c ****     *
1328:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1329:Generated_Source\PSoC5/RPi_UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 44


1330:Generated_Source\PSoC5/RPi_UART.c ****     *
1331:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1333:Generated_Source\PSoC5/RPi_UART.c ****     *
1334:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1335:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1336:Generated_Source\PSoC5/RPi_UART.c ****     *
1337:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/RPi_UART.c ****     *
1341:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1343:Generated_Source\PSoC5/RPi_UART.c ****     *
1344:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
1345:Generated_Source\PSoC5/RPi_UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/RPi_UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/RPi_UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/RPi_UART.c ****     *
1349:Generated_Source\PSoC5/RPi_UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/RPi_UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/RPi_UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/RPi_UART.c ****     *
1353:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/RPi_UART.c ****     {
 1057              		.loc 1 1355 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061 0000 08B5     		push	{r3, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 3, -8
 1064              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/RPi_UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/RPi_UART.c **** 
1358:Generated_Source\PSoC5/RPi_UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1065              		.loc 1 1358 0
 1066 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1067              	.LVL42:
1359:Generated_Source\PSoC5/RPi_UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_TXDATA_AUX_CTL_REG |= (uint8)  RPi_UART_TX_FIFO_CLR;
 1068              		.loc 1 1360 0
 1069 0006 064B     		ldr	r3, .L123
 1070 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1071 000a 42F00102 		orr	r2, r2, #1
 1072 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_TXDATA_AUX_CTL_REG &= (uint8) ~RPi_UART_TX_FIFO_CLR;
 1073              		.loc 1 1361 0
 1074 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1075 0012 02F0FE02 		and	r2, r2, #254
 1076 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/RPi_UART.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/RPi_UART.c **** 
1364:Generated_Source\PSoC5/RPi_UART.c ****     #if (RPi_UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/RPi_UART.c **** 
1366:Generated_Source\PSoC5/RPi_UART.c ****         /* Protect variables that could change on interrupt. */
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 45


1367:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_DisableTxInt();
1368:Generated_Source\PSoC5/RPi_UART.c **** 
1369:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/RPi_UART.c **** 
1372:Generated_Source\PSoC5/RPi_UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/RPi_UART.c ****         RPi_UART_EnableTxInt();
1374:Generated_Source\PSoC5/RPi_UART.c **** 
1375:Generated_Source\PSoC5/RPi_UART.c ****     #endif /* (RPi_UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/RPi_UART.c ****     }
 1077              		.loc 1 1376 0
 1078 0018 BDE80840 		pop	{r3, lr}
 1079              		.cfi_restore 14
 1080              		.cfi_restore 3
 1081              		.cfi_def_cfa_offset 0
1362:Generated_Source\PSoC5/RPi_UART.c ****         CyExitCriticalSection(enableInterrupts);
 1082              		.loc 1 1362 0
 1083 001c FFF7FEBF 		b	CyExitCriticalSection
 1084              	.LVL43:
 1085              	.L124:
 1086              		.align	2
 1087              	.L123:
 1088 0020 96650040 		.word	1073767830
 1089              		.cfi_endproc
 1090              	.LFE24:
 1091              		.size	RPi_UART_ClearTxBuffer, .-RPi_UART_ClearTxBuffer
 1092              		.section	.text.RPi_UART_SendBreak,"ax",%progbits
 1093              		.align	2
 1094              		.global	RPi_UART_SendBreak
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	RPi_UART_SendBreak, %function
 1098              	RPi_UART_SendBreak:
 1099              	.LFB25:
1377:Generated_Source\PSoC5/RPi_UART.c **** 
1378:Generated_Source\PSoC5/RPi_UART.c **** 
1379:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SendBreak
1381:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/RPi_UART.c ****     *
1383:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1384:Generated_Source\PSoC5/RPi_UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/RPi_UART.c ****     *
1386:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/RPi_UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/RPi_UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/RPi_UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/RPi_UART.c ****     *       then return.
1394:Generated_Source\PSoC5/RPi_UART.c ****     *   RPi_UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/RPi_UART.c ****     *      RPi_UART_SEND_BREAK and RPi_UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/RPi_UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/RPi_UART.c ****     *
1398:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1399:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 46


1400:Generated_Source\PSoC5/RPi_UART.c ****     *
1401:Generated_Source\PSoC5/RPi_UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/RPi_UART.c ****     *  RPi_UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/RPi_UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/RPi_UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/RPi_UART.c ****     *
1406:Generated_Source\PSoC5/RPi_UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/RPi_UART.c ****     *  No.
1408:Generated_Source\PSoC5/RPi_UART.c ****     *
1409:Generated_Source\PSoC5/RPi_UART.c ****     * Theory:
1410:Generated_Source\PSoC5/RPi_UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/RPi_UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/RPi_UART.c ****     *  operation.
1413:Generated_Source\PSoC5/RPi_UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/RPi_UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/RPi_UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/RPi_UART.c ****     *     complete.
1417:Generated_Source\PSoC5/RPi_UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/RPi_UART.c ****     *     operation
1419:Generated_Source\PSoC5/RPi_UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/RPi_UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/RPi_UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/RPi_UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/RPi_UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/RPi_UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/RPi_UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/RPi_UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/RPi_UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/RPi_UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/RPi_UART.c ****     *     When interrupt appear with RPi_UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/RPi_UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/RPi_UART.c ****     *
1432:Generated_Source\PSoC5/RPi_UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/RPi_UART.c ****     *  The RPi_UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/RPi_UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/RPi_UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/RPi_UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/RPi_UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/RPi_UART.c ****     *
1439:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/RPi_UART.c ****     {
 1100              		.loc 1 1441 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105              	.LVL44:
1442:Generated_Source\PSoC5/RPi_UART.c **** 
1443:Generated_Source\PSoC5/RPi_UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/RPi_UART.c ****         if(RPi_UART_initVar != 0u)
 1106              		.loc 1 1444 0
 1107 0000 1249     		ldr	r1, .L151
 1108 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1109 0004 C3B1     		cbz	r3, .L149
1441:Generated_Source\PSoC5/RPi_UART.c **** 
 1110              		.loc 1 1441 0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 47


 1111 0006 F0B4     		push	{r4, r5, r6, r7}
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 4, -16
 1114              		.cfi_offset 5, -12
 1115              		.cfi_offset 6, -8
 1116              		.cfi_offset 7, -4
 1117              	.LBB56:
1445:Generated_Source\PSoC5/RPi_UART.c ****         {
1446:Generated_Source\PSoC5/RPi_UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/RPi_UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/RPi_UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/RPi_UART.c **** 
1450:Generated_Source\PSoC5/RPi_UART.c ****         #if(RPi_UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/RPi_UART.c **** 
1452:Generated_Source\PSoC5/RPi_UART.c ****             if( (retMode == RPi_UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/RPi_UART.c ****             {
1455:Generated_Source\PSoC5/RPi_UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_WriteControlRegister(RPi_UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/RPi_UART.c ****                                                       RPi_UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/RPi_UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/RPi_UART.c **** 
1461:Generated_Source\PSoC5/RPi_UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/RPi_UART.c ****                 {
1463:Generated_Source\PSoC5/RPi_UART.c ****                     tmpStat = RPi_UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/RPi_UART.c ****                 }
1465:Generated_Source\PSoC5/RPi_UART.c ****                 while((tmpStat & RPi_UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/RPi_UART.c ****             }
1467:Generated_Source\PSoC5/RPi_UART.c **** 
1468:Generated_Source\PSoC5/RPi_UART.c ****             if( (retMode == RPi_UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/RPi_UART.c ****             {
1471:Generated_Source\PSoC5/RPi_UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/RPi_UART.c ****                 {
1473:Generated_Source\PSoC5/RPi_UART.c ****                     tmpStat = RPi_UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/RPi_UART.c ****                 }
1475:Generated_Source\PSoC5/RPi_UART.c ****                 while(((uint8)~tmpStat & RPi_UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/RPi_UART.c ****             }
1477:Generated_Source\PSoC5/RPi_UART.c **** 
1478:Generated_Source\PSoC5/RPi_UART.c ****             if( (retMode == RPi_UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_REINIT) ||
1480:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/RPi_UART.c ****             {
1482:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_WriteControlRegister(RPi_UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/RPi_UART.c ****                                               (uint8)~RPi_UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/RPi_UART.c ****             }
1485:Generated_Source\PSoC5/RPi_UART.c **** 
1486:Generated_Source\PSoC5/RPi_UART.c ****         #else /* RPi_UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/RPi_UART.c **** 
1488:Generated_Source\PSoC5/RPi_UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/RPi_UART.c **** 
1490:Generated_Source\PSoC5/RPi_UART.c ****             if( (retMode == RPi_UART_SEND_BREAK) ||
 1118              		.loc 1 1490 0
 1119 0008 B8B9     		cbnz	r0, .L150
 1120              	.L128:
1491:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 48


1492:Generated_Source\PSoC5/RPi_UART.c ****             {
1493:Generated_Source\PSoC5/RPi_UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/RPi_UART.c ****                 #if( (RPi_UART_PARITY_TYPE != RPi_UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/RPi_UART.c ****                                     (RPi_UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_WriteControlRegister(RPi_UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/RPi_UART.c ****                                                           RPi_UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/RPi_UART.c ****                 #endif /* End RPi_UART_PARITY_TYPE != RPi_UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/RPi_UART.c **** 
1500:Generated_Source\PSoC5/RPi_UART.c ****                 #if(RPi_UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/RPi_UART.c ****                     txPeriod = RPi_UART_TXBITCLKTX_COMPLETE_REG;
 1121              		.loc 1 1501 0
 1122 000a 114B     		ldr	r3, .L151+4
1502:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_TXBITCLKTX_COMPLETE_REG = RPi_UART_TXBITCTR_BREAKBITS;
1503:Generated_Source\PSoC5/RPi_UART.c ****                 #else
1504:Generated_Source\PSoC5/RPi_UART.c ****                     txPeriod = RPi_UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_TXBITCTR_PERIOD_REG = RPi_UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/RPi_UART.c ****                 #endif /* End RPi_UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/RPi_UART.c **** 
1508:Generated_Source\PSoC5/RPi_UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_TXDATA_REG = 0u;
 1123              		.loc 1 1509 0
 1124 000c 114C     		ldr	r4, .L151+8
1501:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_TXBITCLKTX_COMPLETE_REG = RPi_UART_TXBITCTR_BREAKBITS;
 1125              		.loc 1 1501 0
 1126 000e 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
1502:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_TXBITCLKTX_COMPLETE_REG = RPi_UART_TXBITCTR_BREAKBITS;
 1127              		.loc 1 1502 0
 1128 0010 6726     		movs	r6, #103
 1129              		.loc 1 1509 0
 1130 0012 0025     		movs	r5, #0
1510:Generated_Source\PSoC5/RPi_UART.c **** 
1511:Generated_Source\PSoC5/RPi_UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/RPi_UART.c ****                 {
1513:Generated_Source\PSoC5/RPi_UART.c ****                     tmpStat = RPi_UART_TXSTATUS_REG;
 1131              		.loc 1 1513 0
 1132 0014 104A     		ldr	r2, .L151+12
1501:Generated_Source\PSoC5/RPi_UART.c ****                     RPi_UART_TXBITCLKTX_COMPLETE_REG = RPi_UART_TXBITCTR_BREAKBITS;
 1133              		.loc 1 1501 0
 1134 0016 4F70     		strb	r7, [r1, #1]
1502:Generated_Source\PSoC5/RPi_UART.c ****                 #else
 1135              		.loc 1 1502 0
 1136 0018 1E70     		strb	r6, [r3]
1509:Generated_Source\PSoC5/RPi_UART.c **** 
 1137              		.loc 1 1509 0
 1138 001a 2570     		strb	r5, [r4]
 1139              	.L130:
 1140              		.loc 1 1513 0 discriminator 1
 1141 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1142              	.LVL45:
1514:Generated_Source\PSoC5/RPi_UART.c ****                 }
1515:Generated_Source\PSoC5/RPi_UART.c ****                 while((tmpStat & RPi_UART_TX_STS_FIFO_EMPTY) != 0u);
 1143              		.loc 1 1515 0 discriminator 1
 1144 001e 9C07     		lsls	r4, r3, #30
 1145 0020 FCD4     		bmi	.L130
1516:Generated_Source\PSoC5/RPi_UART.c ****             }
1517:Generated_Source\PSoC5/RPi_UART.c **** 
1518:Generated_Source\PSoC5/RPi_UART.c ****             if( (retMode == RPi_UART_WAIT_FOR_COMPLETE_REINIT) ||
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 49


 1146              		.loc 1 1518 0
 1147 0022 00F0FD03 		and	r3, r0, #253
 1148              	.LVL46:
 1149 0026 012B     		cmp	r3, #1
 1150 0028 0BD0     		beq	.L131
 1151              	.L135:
1519:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/RPi_UART.c ****             {
1521:Generated_Source\PSoC5/RPi_UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/RPi_UART.c ****                 {
1523:Generated_Source\PSoC5/RPi_UART.c ****                     tmpStat = RPi_UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/RPi_UART.c ****                 }
1525:Generated_Source\PSoC5/RPi_UART.c ****                 while(((uint8)~tmpStat & RPi_UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/RPi_UART.c ****             }
1527:Generated_Source\PSoC5/RPi_UART.c **** 
1528:Generated_Source\PSoC5/RPi_UART.c ****             if( (retMode == RPi_UART_WAIT_FOR_COMPLETE_REINIT) ||
 1152              		.loc 1 1528 0
 1153 002a 0138     		subs	r0, r0, #1
 1154              	.LVL47:
 1155 002c 0228     		cmp	r0, #2
 1156 002e 02D8     		bhi	.L125
1529:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_REINIT) ||
1530:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/RPi_UART.c ****             {
1532:Generated_Source\PSoC5/RPi_UART.c **** 
1533:Generated_Source\PSoC5/RPi_UART.c ****             #if(RPi_UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1157              		.loc 1 1534 0
 1158 0030 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1159 0032 074B     		ldr	r3, .L151+4
 1160 0034 1A70     		strb	r2, [r3]
 1161              	.L125:
 1162              	.LBE56:
1535:Generated_Source\PSoC5/RPi_UART.c ****             #else
1536:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/RPi_UART.c ****             #endif /* End RPi_UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/RPi_UART.c **** 
1539:Generated_Source\PSoC5/RPi_UART.c ****             #if( (RPi_UART_PARITY_TYPE != RPi_UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/RPi_UART.c ****                  (RPi_UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/RPi_UART.c ****                 RPi_UART_WriteControlRegister(RPi_UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/RPi_UART.c ****                                                       (uint8) ~RPi_UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/RPi_UART.c ****             #endif /* End RPi_UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/RPi_UART.c ****             }
1545:Generated_Source\PSoC5/RPi_UART.c ****         #endif    /* End RPi_UART_HD_ENABLED */
1546:Generated_Source\PSoC5/RPi_UART.c ****         }
1547:Generated_Source\PSoC5/RPi_UART.c ****     }
 1163              		.loc 1 1547 0
 1164 0036 F0BC     		pop	{r4, r5, r6, r7}
 1165              		.cfi_restore 7
 1166              		.cfi_restore 6
 1167              		.cfi_restore 5
 1168              		.cfi_restore 4
 1169              		.cfi_def_cfa_offset 0
 1170              	.L149:
 1171 0038 7047     		bx	lr
 1172              	.LVL48:
 1173              	.L150:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 50


 1174              		.cfi_def_cfa_offset 16
 1175              		.cfi_offset 4, -16
 1176              		.cfi_offset 5, -12
 1177              		.cfi_offset 6, -8
 1178              		.cfi_offset 7, -4
 1179              	.LBB57:
1490:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
 1180              		.loc 1 1490 0 discriminator 1
 1181 003a 0328     		cmp	r0, #3
 1182 003c E5D0     		beq	.L128
1518:Generated_Source\PSoC5/RPi_UART.c ****                 (retMode == RPi_UART_SEND_WAIT_REINIT) )
 1183              		.loc 1 1518 0
 1184 003e 0128     		cmp	r0, #1
 1185 0040 F3D1     		bne	.L135
 1186              	.L131:
1523:Generated_Source\PSoC5/RPi_UART.c ****                 }
 1187              		.loc 1 1523 0
 1188 0042 054A     		ldr	r2, .L151+12
 1189              	.L134:
1523:Generated_Source\PSoC5/RPi_UART.c ****                 }
 1190              		.loc 1 1523 0 is_stmt 0 discriminator 1
 1191 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1192              	.LVL49:
1525:Generated_Source\PSoC5/RPi_UART.c ****             }
 1193              		.loc 1 1525 0 is_stmt 1 discriminator 1
 1194 0046 DB07     		lsls	r3, r3, #31
 1195              	.LVL50:
 1196 0048 FCD5     		bpl	.L134
 1197 004a EEE7     		b	.L135
 1198              	.L152:
 1199              		.align	2
 1200              	.L151:
 1201 004c 00000000 		.word	.LANCHOR0
 1202 0050 36640040 		.word	1073767478
 1203 0054 46650040 		.word	1073767750
 1204 0058 65650040 		.word	1073767781
 1205              	.LBE57:
 1206              		.cfi_endproc
 1207              	.LFE25:
 1208              		.size	RPi_UART_SendBreak, .-RPi_UART_SendBreak
 1209              		.section	.text.RPi_UART_SetTxAddressMode,"ax",%progbits
 1210              		.align	2
 1211              		.global	RPi_UART_SetTxAddressMode
 1212              		.thumb
 1213              		.thumb_func
 1214              		.type	RPi_UART_SetTxAddressMode, %function
 1215              	RPi_UART_SetTxAddressMode:
 1216              	.LFB26:
1548:Generated_Source\PSoC5/RPi_UART.c **** 
1549:Generated_Source\PSoC5/RPi_UART.c **** 
1550:Generated_Source\PSoC5/RPi_UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/RPi_UART.c ****     * Function Name: RPi_UART_SetTxAddressMode
1552:Generated_Source\PSoC5/RPi_UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/RPi_UART.c ****     *
1554:Generated_Source\PSoC5/RPi_UART.c ****     * Summary:
1555:Generated_Source\PSoC5/RPi_UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/RPi_UART.c ****     *
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 51


1557:Generated_Source\PSoC5/RPi_UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/RPi_UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/RPi_UART.c ****     *       RPi_UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/RPi_UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/RPi_UART.c ****     *       RPi_UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/RPi_UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/RPi_UART.c ****     *
1564:Generated_Source\PSoC5/RPi_UART.c ****     * Return:
1565:Generated_Source\PSoC5/RPi_UART.c ****     *  None.
1566:Generated_Source\PSoC5/RPi_UART.c ****     *
1567:Generated_Source\PSoC5/RPi_UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/RPi_UART.c ****     *  This function sets and clears RPi_UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/RPi_UART.c ****     *  register.
1570:Generated_Source\PSoC5/RPi_UART.c ****     *
1571:Generated_Source\PSoC5/RPi_UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/RPi_UART.c ****     void RPi_UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/RPi_UART.c ****     {
 1217              		.loc 1 1573 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              		@ link register save eliminated.
 1222              	.LVL51:
 1223 0000 7047     		bx	lr
 1224              		.cfi_endproc
 1225              	.LFE26:
 1226              		.size	RPi_UART_SetTxAddressMode, .-RPi_UART_SetTxAddressMode
 1227              		.global	RPi_UART_initVar
 1228 0002 00BF     		.bss
 1229              		.set	.LANCHOR0,. + 0
 1230              		.type	RPi_UART_initVar, %object
 1231              		.size	RPi_UART_initVar, 1
 1232              	RPi_UART_initVar:
 1233 0000 00       		.space	1
 1234              		.type	txPeriod.5112, %object
 1235              		.size	txPeriod.5112, 1
 1236              	txPeriod.5112:
 1237 0001 00       		.space	1
 1238              		.text
 1239              	.Letext0:
 1240              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1241              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1242              		.file 4 "Generated_Source\\PSoC5\\RPi_UART_IntClock.h"
 1243              		.section	.debug_info,"",%progbits
 1244              	.Ldebug_info0:
 1245 0000 66060000 		.4byte	0x666
 1246 0004 0400     		.2byte	0x4
 1247 0006 00000000 		.4byte	.Ldebug_abbrev0
 1248 000a 04       		.byte	0x4
 1249 000b 01       		.uleb128 0x1
 1250 000c 1B040000 		.4byte	.LASF61
 1251 0010 0C       		.byte	0xc
 1252 0011 C3000000 		.4byte	.LASF62
 1253 0015 5E030000 		.4byte	.LASF63
 1254 0019 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 1255 001d 00000000 		.4byte	0
 1256 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 52


 1257 0025 02       		.uleb128 0x2
 1258 0026 01       		.byte	0x1
 1259 0027 06       		.byte	0x6
 1260 0028 AE000000 		.4byte	.LASF0
 1261 002c 02       		.uleb128 0x2
 1262 002d 01       		.byte	0x1
 1263 002e 08       		.byte	0x8
 1264 002f C2020000 		.4byte	.LASF1
 1265 0033 02       		.uleb128 0x2
 1266 0034 02       		.byte	0x2
 1267 0035 05       		.byte	0x5
 1268 0036 D0020000 		.4byte	.LASF2
 1269 003a 02       		.uleb128 0x2
 1270 003b 02       		.byte	0x2
 1271 003c 07       		.byte	0x7
 1272 003d BD010000 		.4byte	.LASF3
 1273 0041 02       		.uleb128 0x2
 1274 0042 04       		.byte	0x4
 1275 0043 05       		.byte	0x5
 1276 0044 E5000000 		.4byte	.LASF4
 1277 0048 02       		.uleb128 0x2
 1278 0049 04       		.byte	0x4
 1279 004a 07       		.byte	0x7
 1280 004b 8F010000 		.4byte	.LASF5
 1281 004f 02       		.uleb128 0x2
 1282 0050 08       		.byte	0x8
 1283 0051 05       		.byte	0x5
 1284 0052 A0000000 		.4byte	.LASF6
 1285 0056 02       		.uleb128 0x2
 1286 0057 08       		.byte	0x8
 1287 0058 07       		.byte	0x7
 1288 0059 89000000 		.4byte	.LASF7
 1289 005d 03       		.uleb128 0x3
 1290 005e 04       		.byte	0x4
 1291 005f 05       		.byte	0x5
 1292 0060 696E7400 		.ascii	"int\000"
 1293 0064 02       		.uleb128 0x2
 1294 0065 04       		.byte	0x4
 1295 0066 07       		.byte	0x7
 1296 0067 6B010000 		.4byte	.LASF8
 1297 006b 04       		.uleb128 0x4
 1298 006c EE000000 		.4byte	.LASF9
 1299 0070 02       		.byte	0x2
 1300 0071 9201     		.2byte	0x192
 1301 0073 2C000000 		.4byte	0x2c
 1302 0077 04       		.uleb128 0x4
 1303 0078 00000000 		.4byte	.LASF10
 1304 007c 02       		.byte	0x2
 1305 007d 9301     		.2byte	0x193
 1306 007f 3A000000 		.4byte	0x3a
 1307 0083 02       		.uleb128 0x2
 1308 0084 04       		.byte	0x4
 1309 0085 04       		.byte	0x4
 1310 0086 B7020000 		.4byte	.LASF11
 1311 008a 02       		.uleb128 0x2
 1312 008b 08       		.byte	0x8
 1313 008c 04       		.byte	0x4
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 53


 1314 008d 22010000 		.4byte	.LASF12
 1315 0091 04       		.uleb128 0x4
 1316 0092 58030000 		.4byte	.LASF13
 1317 0096 02       		.byte	0x2
 1318 0097 A301     		.2byte	0x1a3
 1319 0099 9D000000 		.4byte	0x9d
 1320 009d 02       		.uleb128 0x2
 1321 009e 01       		.byte	0x1
 1322 009f 08       		.byte	0x8
 1323 00a0 53030000 		.4byte	.LASF14
 1324 00a4 04       		.uleb128 0x4
 1325 00a5 BD020000 		.4byte	.LASF15
 1326 00a9 02       		.byte	0x2
 1327 00aa 3C02     		.2byte	0x23c
 1328 00ac B0000000 		.4byte	0xb0
 1329 00b0 05       		.uleb128 0x5
 1330 00b1 6B000000 		.4byte	0x6b
 1331 00b5 02       		.uleb128 0x2
 1332 00b6 08       		.byte	0x8
 1333 00b7 04       		.byte	0x4
 1334 00b8 88020000 		.4byte	.LASF16
 1335 00bc 02       		.uleb128 0x2
 1336 00bd 04       		.byte	0x4
 1337 00be 07       		.byte	0x7
 1338 00bf 7F020000 		.4byte	.LASF17
 1339 00c3 06       		.uleb128 0x6
 1340 00c4 7B000000 		.4byte	.LASF64
 1341 00c8 01       		.byte	0x1
 1342 00c9 6A       		.byte	0x6a
 1343 00ca 01       		.byte	0x1
 1344 00cb 07       		.uleb128 0x7
 1345 00cc 98030000 		.4byte	.LASF18
 1346 00d0 01       		.byte	0x1
 1347 00d1 8801     		.2byte	0x188
 1348 00d3 6B000000 		.4byte	0x6b
 1349 00d7 01       		.byte	0x1
 1350 00d8 E9000000 		.4byte	0xe9
 1351 00dc 08       		.uleb128 0x8
 1352 00dd 18030000 		.4byte	.LASF20
 1353 00e1 01       		.byte	0x1
 1354 00e2 8A01     		.2byte	0x18a
 1355 00e4 6B000000 		.4byte	0x6b
 1356 00e8 00       		.byte	0
 1357 00e9 07       		.uleb128 0x7
 1358 00ea 65000000 		.4byte	.LASF19
 1359 00ee 01       		.byte	0x1
 1360 00ef E501     		.2byte	0x1e5
 1361 00f1 6B000000 		.4byte	0x6b
 1362 00f5 01       		.byte	0x1
 1363 00f6 07010000 		.4byte	0x107
 1364 00fa 08       		.uleb128 0x8
 1365 00fb BD030000 		.4byte	.LASF21
 1366 00ff 01       		.byte	0x1
 1367 0100 E701     		.2byte	0x1e7
 1368 0102 6B000000 		.4byte	0x6b
 1369 0106 00       		.byte	0
 1370 0107 09       		.uleb128 0x9
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 54


 1371 0108 35010000 		.4byte	.LASF54
 1372 010c 01       		.byte	0x1
 1373 010d 1104     		.2byte	0x411
 1374 010f 01       		.byte	0x1
 1375 0110 21010000 		.4byte	0x121
 1376 0114 0A       		.uleb128 0xa
 1377 0115 2D000000 		.4byte	.LASF39
 1378 0119 01       		.byte	0x1
 1379 011a 1104     		.2byte	0x411
 1380 011c 6B000000 		.4byte	0x6b
 1381 0120 00       		.byte	0
 1382 0121 0B       		.uleb128 0xb
 1383 0122 C3000000 		.4byte	0xc3
 1384 0126 00000000 		.4byte	.LFB1
 1385 012a 38000000 		.4byte	.LFE1-.LFB1
 1386 012e 01       		.uleb128 0x1
 1387 012f 9C       		.byte	0x9c
 1388 0130 0C       		.uleb128 0xc
 1389 0131 07000000 		.4byte	.LASF22
 1390 0135 01       		.byte	0x1
 1391 0136 B7       		.byte	0xb7
 1392 0137 00000000 		.4byte	.LFB2
 1393 013b 40000000 		.4byte	.LFE2-.LFB2
 1394 013f 01       		.uleb128 0x1
 1395 0140 9C       		.byte	0x9c
 1396 0141 70010000 		.4byte	0x170
 1397 0145 0D       		.uleb128 0xd
 1398 0146 AC030000 		.4byte	.LASF25
 1399 014a 01       		.byte	0x1
 1400 014b B9       		.byte	0xb9
 1401 014c 6B000000 		.4byte	0x6b
 1402 0150 00000000 		.4byte	.LLST0
 1403 0154 0E       		.uleb128 0xe
 1404 0155 06000000 		.4byte	.LVL0
 1405 0159 3D060000 		.4byte	0x63d
 1406 015d 0E       		.uleb128 0xe
 1407 015e 2A000000 		.4byte	.LVL2
 1408 0162 48060000 		.4byte	0x648
 1409 0166 0F       		.uleb128 0xf
 1410 0167 34000000 		.4byte	.LVL4
 1411 016b 53060000 		.4byte	0x653
 1412 016f 00       		.byte	0
 1413 0170 0C       		.uleb128 0xc
 1414 0171 DA020000 		.4byte	.LASF23
 1415 0175 01       		.byte	0x1
 1416 0176 4C       		.byte	0x4c
 1417 0177 00000000 		.4byte	.LFB0
 1418 017b 4C000000 		.4byte	.LFE0-.LFB0
 1419 017f 01       		.uleb128 0x1
 1420 0180 9C       		.byte	0x9c
 1421 0181 A7010000 		.4byte	0x1a7
 1422 0185 10       		.uleb128 0x10
 1423 0186 C3000000 		.4byte	0xc3
 1424 018a 08000000 		.4byte	.LBB18
 1425 018e 00000000 		.4byte	.Ldebug_ranges0+0
 1426 0192 01       		.byte	0x1
 1427 0193 51       		.byte	0x51
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 55


 1428 0194 0F       		.uleb128 0xf
 1429 0195 2E000000 		.4byte	.LVL5
 1430 0199 30010000 		.4byte	0x130
 1431 019d 0F       		.uleb128 0xf
 1432 019e 32000000 		.4byte	.LVL6
 1433 01a2 30010000 		.4byte	0x130
 1434 01a6 00       		.byte	0
 1435 01a7 0C       		.uleb128 0xc
 1436 01a8 E9020000 		.4byte	.LASF24
 1437 01ac 01       		.byte	0x1
 1438 01ad F0       		.byte	0xf0
 1439 01ae 00000000 		.4byte	.LFB3
 1440 01b2 40000000 		.4byte	.LFE3-.LFB3
 1441 01b6 01       		.uleb128 0x1
 1442 01b7 9C       		.byte	0x9c
 1443 01b8 E7010000 		.4byte	0x1e7
 1444 01bc 0D       		.uleb128 0xd
 1445 01bd AC030000 		.4byte	.LASF25
 1446 01c1 01       		.byte	0x1
 1447 01c2 F2       		.byte	0xf2
 1448 01c3 6B000000 		.4byte	0x6b
 1449 01c7 13000000 		.4byte	.LLST1
 1450 01cb 0E       		.uleb128 0xe
 1451 01cc 06000000 		.4byte	.LVL7
 1452 01d0 3D060000 		.4byte	0x63d
 1453 01d4 0E       		.uleb128 0xe
 1454 01d5 16000000 		.4byte	.LVL9
 1455 01d9 5E060000 		.4byte	0x65e
 1456 01dd 0F       		.uleb128 0xf
 1457 01de 34000000 		.4byte	.LVL11
 1458 01e2 53060000 		.4byte	0x653
 1459 01e6 00       		.byte	0
 1460 01e7 11       		.uleb128 0x11
 1461 01e8 4E010000 		.4byte	.LASF40
 1462 01ec 01       		.byte	0x1
 1463 01ed 2701     		.2byte	0x127
 1464 01ef 6B000000 		.4byte	0x6b
 1465 01f3 00000000 		.4byte	.LFB4
 1466 01f7 04000000 		.4byte	.LFE4-.LFB4
 1467 01fb 01       		.uleb128 0x1
 1468 01fc 9C       		.byte	0x9c
 1469 01fd 12       		.uleb128 0x12
 1470 01fe 48020000 		.4byte	.LASF26
 1471 0202 01       		.byte	0x1
 1472 0203 6701     		.2byte	0x167
 1473 0205 00000000 		.4byte	.LFB6
 1474 0209 0C000000 		.4byte	.LFE6-.LFB6
 1475 020d 01       		.uleb128 0x1
 1476 020e 9C       		.byte	0x9c
 1477 020f 22020000 		.4byte	0x222
 1478 0213 13       		.uleb128 0x13
 1479 0214 29020000 		.4byte	.LASF34
 1480 0218 01       		.byte	0x1
 1481 0219 6701     		.2byte	0x167
 1482 021b 6B000000 		.4byte	0x6b
 1483 021f 01       		.uleb128 0x1
 1484 0220 50       		.byte	0x50
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 56


 1485 0221 00       		.byte	0
 1486 0222 14       		.uleb128 0x14
 1487 0223 CB000000 		.4byte	0xcb
 1488 0227 00000000 		.4byte	.LFB7
 1489 022b 0C000000 		.4byte	.LFE7-.LFB7
 1490 022f 01       		.uleb128 0x1
 1491 0230 9C       		.byte	0x9c
 1492 0231 3D020000 		.4byte	0x23d
 1493 0235 15       		.uleb128 0x15
 1494 0236 DC000000 		.4byte	0xdc
 1495 023a 01       		.uleb128 0x1
 1496 023b 50       		.byte	0x50
 1497 023c 00       		.byte	0
 1498 023d 14       		.uleb128 0x14
 1499 023e E9000000 		.4byte	0xe9
 1500 0242 00000000 		.4byte	.LFB8
 1501 0246 10000000 		.4byte	.LFE8-.LFB8
 1502 024a 01       		.uleb128 0x1
 1503 024b 9C       		.byte	0x9c
 1504 024c 5A020000 		.4byte	0x25a
 1505 0250 16       		.uleb128 0x16
 1506 0251 FA000000 		.4byte	0xfa
 1507 0255 26000000 		.4byte	.LLST2
 1508 0259 00       		.byte	0
 1509 025a 17       		.uleb128 0x17
 1510 025b F1030000 		.4byte	.LASF28
 1511 025f 01       		.byte	0x1
 1512 0260 1402     		.2byte	0x214
 1513 0262 6B000000 		.4byte	0x6b
 1514 0266 00000000 		.4byte	.LFB9
 1515 026a 28000000 		.4byte	.LFE9-.LFB9
 1516 026e 01       		.uleb128 0x1
 1517 026f 9C       		.byte	0x9c
 1518 0270 93020000 		.4byte	0x293
 1519 0274 18       		.uleb128 0x18
 1520 0275 18030000 		.4byte	.LASF20
 1521 0279 01       		.byte	0x1
 1522 027a 1602     		.2byte	0x216
 1523 027c 6B000000 		.4byte	0x6b
 1524 0280 3E000000 		.4byte	.LLST3
 1525 0284 19       		.uleb128 0x19
 1526 0285 9C020000 		.4byte	.LASF27
 1527 0289 01       		.byte	0x1
 1528 028a 1702     		.2byte	0x217
 1529 028c 6B000000 		.4byte	0x6b
 1530 0290 01       		.uleb128 0x1
 1531 0291 53       		.byte	0x53
 1532 0292 00       		.byte	0
 1533 0293 17       		.uleb128 0x17
 1534 0294 D0010000 		.4byte	.LASF29
 1535 0298 01       		.byte	0x1
 1536 0299 7A02     		.2byte	0x27a
 1537 029b 77000000 		.4byte	0x77
 1538 029f 00000000 		.4byte	.LFB10
 1539 02a3 1C000000 		.4byte	.LFE10-.LFB10
 1540 02a7 01       		.uleb128 0x1
 1541 02a8 9C       		.byte	0x9c
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 57


 1542 02a9 EA020000 		.4byte	0x2ea
 1543 02ad 1A       		.uleb128 0x1a
 1544 02ae E9000000 		.4byte	0xe9
 1545 02b2 00000000 		.4byte	.LBB22
 1546 02b6 18000000 		.4byte	.Ldebug_ranges0+0x18
 1547 02ba 01       		.byte	0x1
 1548 02bb 8602     		.2byte	0x286
 1549 02bd CD020000 		.4byte	0x2cd
 1550 02c1 1B       		.uleb128 0x1b
 1551 02c2 18000000 		.4byte	.Ldebug_ranges0+0x18
 1552 02c6 1C       		.uleb128 0x1c
 1553 02c7 FA000000 		.4byte	0xfa
 1554 02cb 00       		.byte	0
 1555 02cc 00       		.byte	0
 1556 02cd 1D       		.uleb128 0x1d
 1557 02ce CB000000 		.4byte	0xcb
 1558 02d2 02000000 		.4byte	.LBB25
 1559 02d6 30000000 		.4byte	.Ldebug_ranges0+0x30
 1560 02da 01       		.byte	0x1
 1561 02db 8602     		.2byte	0x286
 1562 02dd 1B       		.uleb128 0x1b
 1563 02de 30000000 		.4byte	.Ldebug_ranges0+0x30
 1564 02e2 1C       		.uleb128 0x1c
 1565 02e3 DC000000 		.4byte	0xdc
 1566 02e7 00       		.byte	0
 1567 02e8 00       		.byte	0
 1568 02e9 00       		.byte	0
 1569 02ea 17       		.uleb128 0x17
 1570 02eb 02040000 		.4byte	.LASF30
 1571 02ef 01       		.byte	0x1
 1572 02f0 AB02     		.2byte	0x2ab
 1573 02f2 6B000000 		.4byte	0x6b
 1574 02f6 00000000 		.4byte	.LFB11
 1575 02fa 10000000 		.4byte	.LFE11-.LFB11
 1576 02fe 01       		.uleb128 0x1
 1577 02ff 9C       		.byte	0x9c
 1578 0300 15030000 		.4byte	0x315
 1579 0304 18       		.uleb128 0x18
 1580 0305 B8010000 		.4byte	.LASF31
 1581 0309 01       		.byte	0x1
 1582 030a AE02     		.2byte	0x2ae
 1583 030c 6B000000 		.4byte	0x6b
 1584 0310 5D000000 		.4byte	.LLST4
 1585 0314 00       		.byte	0
 1586 0315 12       		.uleb128 0x12
 1587 0316 78010000 		.4byte	.LASF32
 1588 031a 01       		.byte	0x1
 1589 031b F502     		.2byte	0x2f5
 1590 031d 00000000 		.4byte	.LFB12
 1591 0321 24000000 		.4byte	.LFE12-.LFB12
 1592 0325 01       		.uleb128 0x1
 1593 0326 9C       		.byte	0x9c
 1594 0327 4E030000 		.4byte	0x34e
 1595 032b 18       		.uleb128 0x18
 1596 032c AC030000 		.4byte	.LASF25
 1597 0330 01       		.byte	0x1
 1598 0331 F702     		.2byte	0x2f7
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 58


 1599 0333 6B000000 		.4byte	0x6b
 1600 0337 79000000 		.4byte	.LLST5
 1601 033b 0E       		.uleb128 0xe
 1602 033c 06000000 		.4byte	.LVL22
 1603 0340 3D060000 		.4byte	0x63d
 1604 0344 0F       		.uleb128 0xf
 1605 0345 20000000 		.4byte	.LVL23
 1606 0349 53060000 		.4byte	0x653
 1607 034d 00       		.byte	0
 1608 034e 12       		.uleb128 0x12
 1609 034f F4000000 		.4byte	.LASF33
 1610 0353 01       		.byte	0x1
 1611 0354 5903     		.2byte	0x359
 1612 0356 00000000 		.4byte	.LFB14
 1613 035a 0C000000 		.4byte	.LFE14-.LFB14
 1614 035e 01       		.uleb128 0x1
 1615 035f 9C       		.byte	0x9c
 1616 0360 73030000 		.4byte	0x373
 1617 0364 13       		.uleb128 0x13
 1618 0365 94020000 		.4byte	.LASF35
 1619 0369 01       		.byte	0x1
 1620 036a 5903     		.2byte	0x359
 1621 036c 6B000000 		.4byte	0x6b
 1622 0370 01       		.uleb128 0x1
 1623 0371 50       		.byte	0x50
 1624 0372 00       		.byte	0
 1625 0373 12       		.uleb128 0x12
 1626 0374 0B010000 		.4byte	.LASF36
 1627 0378 01       		.byte	0x1
 1628 0379 6D03     		.2byte	0x36d
 1629 037b 00000000 		.4byte	.LFB15
 1630 037f 0C000000 		.4byte	.LFE15-.LFB15
 1631 0383 01       		.uleb128 0x1
 1632 0384 9C       		.byte	0x9c
 1633 0385 98030000 		.4byte	0x398
 1634 0389 13       		.uleb128 0x13
 1635 038a 94020000 		.4byte	.LASF35
 1636 038e 01       		.byte	0x1
 1637 038f 6D03     		.2byte	0x36d
 1638 0391 6B000000 		.4byte	0x6b
 1639 0395 01       		.uleb128 0x1
 1640 0396 50       		.byte	0x50
 1641 0397 00       		.byte	0
 1642 0398 12       		.uleb128 0x12
 1643 0399 C4030000 		.4byte	.LASF37
 1644 039d 01       		.byte	0x1
 1645 039e 8C03     		.2byte	0x38c
 1646 03a0 00000000 		.4byte	.LFB16
 1647 03a4 0C000000 		.4byte	.LFE16-.LFB16
 1648 03a8 01       		.uleb128 0x1
 1649 03a9 9C       		.byte	0x9c
 1650 03aa BD030000 		.4byte	0x3bd
 1651 03ae 13       		.uleb128 0x13
 1652 03af 29020000 		.4byte	.LASF34
 1653 03b3 01       		.byte	0x1
 1654 03b4 8C03     		.2byte	0x38c
 1655 03b6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 59


 1656 03ba 01       		.uleb128 0x1
 1657 03bb 50       		.byte	0x50
 1658 03bc 00       		.byte	0
 1659 03bd 12       		.uleb128 0x12
 1660 03be FB010000 		.4byte	.LASF38
 1661 03c2 01       		.byte	0x1
 1662 03c3 AE03     		.2byte	0x3ae
 1663 03c5 00000000 		.4byte	.LFB17
 1664 03c9 14000000 		.4byte	.LFE17-.LFB17
 1665 03cd 01       		.uleb128 0x1
 1666 03ce 9C       		.byte	0x9c
 1667 03cf E2030000 		.4byte	0x3e2
 1668 03d3 13       		.uleb128 0x13
 1669 03d4 2D000000 		.4byte	.LASF39
 1670 03d8 01       		.byte	0x1
 1671 03d9 AE03     		.2byte	0x3ae
 1672 03db 6B000000 		.4byte	0x6b
 1673 03df 01       		.uleb128 0x1
 1674 03e0 50       		.byte	0x50
 1675 03e1 00       		.byte	0
 1676 03e2 11       		.uleb128 0x11
 1677 03e3 3D030000 		.4byte	.LASF41
 1678 03e7 01       		.byte	0x1
 1679 03e8 EB03     		.2byte	0x3eb
 1680 03ea 6B000000 		.4byte	0x6b
 1681 03ee 00000000 		.4byte	.LFB18
 1682 03f2 0C000000 		.4byte	.LFE18-.LFB18
 1683 03f6 01       		.uleb128 0x1
 1684 03f7 9C       		.byte	0x9c
 1685 03f8 14       		.uleb128 0x14
 1686 03f9 07010000 		.4byte	0x107
 1687 03fd 00000000 		.4byte	.LFB19
 1688 0401 18000000 		.4byte	.LFE19-.LFB19
 1689 0405 01       		.uleb128 0x1
 1690 0406 9C       		.byte	0x9c
 1691 0407 13040000 		.4byte	0x413
 1692 040b 1E       		.uleb128 0x1e
 1693 040c 14010000 		.4byte	0x114
 1694 0410 01       		.uleb128 0x1
 1695 0411 50       		.byte	0x50
 1696 0412 00       		.byte	0
 1697 0413 12       		.uleb128 0x12
 1698 0414 38000000 		.4byte	.LASF42
 1699 0418 01       		.byte	0x1
 1700 0419 7904     		.2byte	0x479
 1701 041b 00000000 		.4byte	.LFB20
 1702 041f 34000000 		.4byte	.LFE20-.LFB20
 1703 0423 01       		.uleb128 0x1
 1704 0424 9C       		.byte	0x9c
 1705 0425 5E040000 		.4byte	0x45e
 1706 0429 13       		.uleb128 0x13
 1707 042a 1F030000 		.4byte	.LASF43
 1708 042e 01       		.byte	0x1
 1709 042f 7904     		.2byte	0x479
 1710 0431 5E040000 		.4byte	0x45e
 1711 0435 01       		.uleb128 0x1
 1712 0436 50       		.byte	0x50
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 60


 1713 0437 18       		.uleb128 0x18
 1714 0438 F2010000 		.4byte	.LASF44
 1715 043c 01       		.byte	0x1
 1716 043d 7B04     		.2byte	0x47b
 1717 043f 77000000 		.4byte	0x77
 1718 0443 8C000000 		.4byte	.LLST6
 1719 0447 1D       		.uleb128 0x1d
 1720 0448 07010000 		.4byte	0x107
 1721 044c 0C000000 		.4byte	.LBB30
 1722 0450 48000000 		.4byte	.Ldebug_ranges0+0x48
 1723 0454 01       		.byte	0x1
 1724 0455 8304     		.2byte	0x483
 1725 0457 1F       		.uleb128 0x1f
 1726 0458 14010000 		.4byte	0x114
 1727 045c 00       		.byte	0
 1728 045d 00       		.byte	0
 1729 045e 20       		.uleb128 0x20
 1730 045f 04       		.byte	0x4
 1731 0460 64040000 		.4byte	0x464
 1732 0464 21       		.uleb128 0x21
 1733 0465 91000000 		.4byte	0x91
 1734 0469 12       		.uleb128 0x12
 1735 046a A5020000 		.4byte	.LASF45
 1736 046e 01       		.byte	0x1
 1737 046f A704     		.2byte	0x4a7
 1738 0471 00000000 		.4byte	.LFB21
 1739 0475 38000000 		.4byte	.LFE21-.LFB21
 1740 0479 01       		.uleb128 0x1
 1741 047a 9C       		.byte	0x9c
 1742 047b CA040000 		.4byte	0x4ca
 1743 047f 22       		.uleb128 0x22
 1744 0480 1F030000 		.4byte	.LASF43
 1745 0484 01       		.byte	0x1
 1746 0485 A704     		.2byte	0x4a7
 1747 0487 CA040000 		.4byte	0x4ca
 1748 048b AB000000 		.4byte	.LLST7
 1749 048f 22       		.uleb128 0x22
 1750 0490 0E030000 		.4byte	.LASF46
 1751 0494 01       		.byte	0x1
 1752 0495 A704     		.2byte	0x4a7
 1753 0497 6B000000 		.4byte	0x6b
 1754 049b CC000000 		.4byte	.LLST8
 1755 049f 18       		.uleb128 0x18
 1756 04a0 F2010000 		.4byte	.LASF44
 1757 04a4 01       		.byte	0x1
 1758 04a5 AA04     		.2byte	0x4aa
 1759 04a7 6B000000 		.4byte	0x6b
 1760 04ab ED000000 		.4byte	.LLST9
 1761 04af 1D       		.uleb128 0x1d
 1762 04b0 07010000 		.4byte	0x107
 1763 04b4 0E000000 		.4byte	.LBB36
 1764 04b8 68000000 		.4byte	.Ldebug_ranges0+0x68
 1765 04bc 01       		.byte	0x1
 1766 04bd B104     		.2byte	0x4b1
 1767 04bf 23       		.uleb128 0x23
 1768 04c0 14010000 		.4byte	0x114
 1769 04c4 27010000 		.4byte	.LLST10
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 61


 1770 04c8 00       		.byte	0
 1771 04c9 00       		.byte	0
 1772 04ca 20       		.uleb128 0x20
 1773 04cb 04       		.byte	0x4
 1774 04cc D0040000 		.4byte	0x4d0
 1775 04d0 21       		.uleb128 0x21
 1776 04d1 6B000000 		.4byte	0x6b
 1777 04d5 12       		.uleb128 0x12
 1778 04d6 E1010000 		.4byte	.LASF47
 1779 04da 01       		.byte	0x1
 1780 04db CE04     		.2byte	0x4ce
 1781 04dd 00000000 		.4byte	.LFB22
 1782 04e1 3C000000 		.4byte	.LFE22-.LFB22
 1783 04e5 01       		.uleb128 0x1
 1784 04e6 9C       		.byte	0x9c
 1785 04e7 44050000 		.4byte	0x544
 1786 04eb 13       		.uleb128 0x13
 1787 04ec 2D000000 		.4byte	.LASF39
 1788 04f0 01       		.byte	0x1
 1789 04f1 CE04     		.2byte	0x4ce
 1790 04f3 6B000000 		.4byte	0x6b
 1791 04f7 01       		.uleb128 0x1
 1792 04f8 50       		.byte	0x50
 1793 04f9 1A       		.uleb128 0x1a
 1794 04fa 07010000 		.4byte	0x107
 1795 04fe 06000000 		.4byte	.LBB42
 1796 0502 88000000 		.4byte	.Ldebug_ranges0+0x88
 1797 0506 01       		.byte	0x1
 1798 0507 D304     		.2byte	0x4d3
 1799 0509 13050000 		.4byte	0x513
 1800 050d 1F       		.uleb128 0x1f
 1801 050e 14010000 		.4byte	0x114
 1802 0512 00       		.byte	0
 1803 0513 1A       		.uleb128 0x1a
 1804 0514 07010000 		.4byte	0x107
 1805 0518 10000000 		.4byte	.LBB45
 1806 051c A0000000 		.4byte	.Ldebug_ranges0+0xa0
 1807 0520 01       		.byte	0x1
 1808 0521 D404     		.2byte	0x4d4
 1809 0523 2D050000 		.4byte	0x52d
 1810 0527 1F       		.uleb128 0x1f
 1811 0528 14010000 		.4byte	0x114
 1812 052c 00       		.byte	0
 1813 052d 1D       		.uleb128 0x1d
 1814 052e 07010000 		.4byte	0x107
 1815 0532 1E000000 		.4byte	.LBB51
 1816 0536 C0000000 		.4byte	.Ldebug_ranges0+0xc0
 1817 053a 01       		.byte	0x1
 1818 053b D504     		.2byte	0x4d5
 1819 053d 1F       		.uleb128 0x1f
 1820 053e 14010000 		.4byte	0x114
 1821 0542 00       		.byte	0
 1822 0543 00       		.byte	0
 1823 0544 17       		.uleb128 0x17
 1824 0545 10020000 		.4byte	.LASF48
 1825 0549 01       		.byte	0x1
 1826 054a F904     		.2byte	0x4f9
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 62


 1827 054c 6B000000 		.4byte	0x6b
 1828 0550 00000000 		.4byte	.LFB23
 1829 0554 1C000000 		.4byte	.LFE23-.LFB23
 1830 0558 01       		.uleb128 0x1
 1831 0559 9C       		.byte	0x9c
 1832 055a 6F050000 		.4byte	0x56f
 1833 055e 18       		.uleb128 0x18
 1834 055f B8010000 		.4byte	.LASF31
 1835 0563 01       		.byte	0x1
 1836 0564 FC04     		.2byte	0x4fc
 1837 0566 6B000000 		.4byte	0x6b
 1838 056a 3A010000 		.4byte	.LLST11
 1839 056e 00       		.byte	0
 1840 056f 12       		.uleb128 0x12
 1841 0570 26030000 		.4byte	.LASF49
 1842 0574 01       		.byte	0x1
 1843 0575 4A05     		.2byte	0x54a
 1844 0577 00000000 		.4byte	.LFB24
 1845 057b 24000000 		.4byte	.LFE24-.LFB24
 1846 057f 01       		.uleb128 0x1
 1847 0580 9C       		.byte	0x9c
 1848 0581 A8050000 		.4byte	0x5a8
 1849 0585 18       		.uleb128 0x18
 1850 0586 AC030000 		.4byte	.LASF25
 1851 058a 01       		.byte	0x1
 1852 058b 4C05     		.2byte	0x54c
 1853 058d 6B000000 		.4byte	0x6b
 1854 0591 58010000 		.4byte	.LLST12
 1855 0595 0E       		.uleb128 0xe
 1856 0596 06000000 		.4byte	.LVL42
 1857 059a 3D060000 		.4byte	0x63d
 1858 059e 0F       		.uleb128 0xf
 1859 059f 20000000 		.4byte	.LVL43
 1860 05a3 53060000 		.4byte	0x653
 1861 05a7 00       		.byte	0
 1862 05a8 12       		.uleb128 0x12
 1863 05a9 64020000 		.4byte	.LASF50
 1864 05ad 01       		.byte	0x1
 1865 05ae A005     		.2byte	0x5a0
 1866 05b0 00000000 		.4byte	.LFB25
 1867 05b4 5C000000 		.4byte	.LFE25-.LFB25
 1868 05b8 01       		.uleb128 0x1
 1869 05b9 9C       		.byte	0x9c
 1870 05ba F7050000 		.4byte	0x5f7
 1871 05be 22       		.uleb128 0x22
 1872 05bf 46010000 		.4byte	.LASF51
 1873 05c3 01       		.byte	0x1
 1874 05c4 A005     		.2byte	0x5a0
 1875 05c6 6B000000 		.4byte	0x6b
 1876 05ca 6B010000 		.4byte	.LLST13
 1877 05ce 1B       		.uleb128 0x1b
 1878 05cf D8000000 		.4byte	.Ldebug_ranges0+0xd8
 1879 05d3 18       		.uleb128 0x18
 1880 05d4 77020000 		.4byte	.LASF52
 1881 05d8 01       		.byte	0x1
 1882 05d9 A805     		.2byte	0x5a8
 1883 05db 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 63


 1884 05df 97010000 		.4byte	.LLST14
 1885 05e3 19       		.uleb128 0x19
 1886 05e4 BA000000 		.4byte	.LASF53
 1887 05e8 01       		.byte	0x1
 1888 05e9 D005     		.2byte	0x5d0
 1889 05eb 6B000000 		.4byte	0x6b
 1890 05ef 05       		.uleb128 0x5
 1891 05f0 03       		.byte	0x3
 1892 05f1 01000000 		.4byte	txPeriod.5112
 1893 05f5 00       		.byte	0
 1894 05f6 00       		.byte	0
 1895 05f7 09       		.uleb128 0x9
 1896 05f8 4B000000 		.4byte	.LASF55
 1897 05fc 01       		.byte	0x1
 1898 05fd 2406     		.2byte	0x624
 1899 05ff 01       		.byte	0x1
 1900 0600 11060000 		.4byte	0x611
 1901 0604 0A       		.uleb128 0xa
 1902 0605 29010000 		.4byte	.LASF56
 1903 0609 01       		.byte	0x1
 1904 060a 2406     		.2byte	0x624
 1905 060c 6B000000 		.4byte	0x6b
 1906 0610 00       		.byte	0
 1907 0611 14       		.uleb128 0x14
 1908 0612 F7050000 		.4byte	0x5f7
 1909 0616 00000000 		.4byte	.LFB26
 1910 061a 02000000 		.4byte	.LFE26-.LFB26
 1911 061e 01       		.uleb128 0x1
 1912 061f 9C       		.byte	0x9c
 1913 0620 2C060000 		.4byte	0x62c
 1914 0624 1E       		.uleb128 0x1e
 1915 0625 04060000 		.4byte	0x604
 1916 0629 01       		.uleb128 0x1
 1917 062a 50       		.byte	0x50
 1918 062b 00       		.byte	0
 1919 062c 24       		.uleb128 0x24
 1920 062d E0030000 		.4byte	.LASF65
 1921 0631 01       		.byte	0x1
 1922 0632 1B       		.byte	0x1b
 1923 0633 6B000000 		.4byte	0x6b
 1924 0637 05       		.uleb128 0x5
 1925 0638 03       		.byte	0x3
 1926 0639 00000000 		.4byte	RPi_UART_initVar
 1927 063d 25       		.uleb128 0x25
 1928 063e A1010000 		.4byte	.LASF57
 1929 0642 A1010000 		.4byte	.LASF57
 1930 0646 03       		.byte	0x3
 1931 0647 7D       		.byte	0x7d
 1932 0648 25       		.uleb128 0x25
 1933 0649 30020000 		.4byte	.LASF58
 1934 064d 30020000 		.4byte	.LASF58
 1935 0651 04       		.byte	0x4
 1936 0652 27       		.byte	0x27
 1937 0653 25       		.uleb128 0x25
 1938 0654 17000000 		.4byte	.LASF59
 1939 0658 17000000 		.4byte	.LASF59
 1940 065c 03       		.byte	0x3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 64


 1941 065d 7E       		.byte	0x7e
 1942 065e 25       		.uleb128 0x25
 1943 065f F7020000 		.4byte	.LASF60
 1944 0663 F7020000 		.4byte	.LASF60
 1945 0667 04       		.byte	0x4
 1946 0668 28       		.byte	0x28
 1947 0669 00       		.byte	0
 1948              		.section	.debug_abbrev,"",%progbits
 1949              	.Ldebug_abbrev0:
 1950 0000 01       		.uleb128 0x1
 1951 0001 11       		.uleb128 0x11
 1952 0002 01       		.byte	0x1
 1953 0003 25       		.uleb128 0x25
 1954 0004 0E       		.uleb128 0xe
 1955 0005 13       		.uleb128 0x13
 1956 0006 0B       		.uleb128 0xb
 1957 0007 03       		.uleb128 0x3
 1958 0008 0E       		.uleb128 0xe
 1959 0009 1B       		.uleb128 0x1b
 1960 000a 0E       		.uleb128 0xe
 1961 000b 55       		.uleb128 0x55
 1962 000c 17       		.uleb128 0x17
 1963 000d 11       		.uleb128 0x11
 1964 000e 01       		.uleb128 0x1
 1965 000f 10       		.uleb128 0x10
 1966 0010 17       		.uleb128 0x17
 1967 0011 00       		.byte	0
 1968 0012 00       		.byte	0
 1969 0013 02       		.uleb128 0x2
 1970 0014 24       		.uleb128 0x24
 1971 0015 00       		.byte	0
 1972 0016 0B       		.uleb128 0xb
 1973 0017 0B       		.uleb128 0xb
 1974 0018 3E       		.uleb128 0x3e
 1975 0019 0B       		.uleb128 0xb
 1976 001a 03       		.uleb128 0x3
 1977 001b 0E       		.uleb128 0xe
 1978 001c 00       		.byte	0
 1979 001d 00       		.byte	0
 1980 001e 03       		.uleb128 0x3
 1981 001f 24       		.uleb128 0x24
 1982 0020 00       		.byte	0
 1983 0021 0B       		.uleb128 0xb
 1984 0022 0B       		.uleb128 0xb
 1985 0023 3E       		.uleb128 0x3e
 1986 0024 0B       		.uleb128 0xb
 1987 0025 03       		.uleb128 0x3
 1988 0026 08       		.uleb128 0x8
 1989 0027 00       		.byte	0
 1990 0028 00       		.byte	0
 1991 0029 04       		.uleb128 0x4
 1992 002a 16       		.uleb128 0x16
 1993 002b 00       		.byte	0
 1994 002c 03       		.uleb128 0x3
 1995 002d 0E       		.uleb128 0xe
 1996 002e 3A       		.uleb128 0x3a
 1997 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 65


 1998 0030 3B       		.uleb128 0x3b
 1999 0031 05       		.uleb128 0x5
 2000 0032 49       		.uleb128 0x49
 2001 0033 13       		.uleb128 0x13
 2002 0034 00       		.byte	0
 2003 0035 00       		.byte	0
 2004 0036 05       		.uleb128 0x5
 2005 0037 35       		.uleb128 0x35
 2006 0038 00       		.byte	0
 2007 0039 49       		.uleb128 0x49
 2008 003a 13       		.uleb128 0x13
 2009 003b 00       		.byte	0
 2010 003c 00       		.byte	0
 2011 003d 06       		.uleb128 0x6
 2012 003e 2E       		.uleb128 0x2e
 2013 003f 00       		.byte	0
 2014 0040 3F       		.uleb128 0x3f
 2015 0041 19       		.uleb128 0x19
 2016 0042 03       		.uleb128 0x3
 2017 0043 0E       		.uleb128 0xe
 2018 0044 3A       		.uleb128 0x3a
 2019 0045 0B       		.uleb128 0xb
 2020 0046 3B       		.uleb128 0x3b
 2021 0047 0B       		.uleb128 0xb
 2022 0048 27       		.uleb128 0x27
 2023 0049 19       		.uleb128 0x19
 2024 004a 20       		.uleb128 0x20
 2025 004b 0B       		.uleb128 0xb
 2026 004c 00       		.byte	0
 2027 004d 00       		.byte	0
 2028 004e 07       		.uleb128 0x7
 2029 004f 2E       		.uleb128 0x2e
 2030 0050 01       		.byte	0x1
 2031 0051 3F       		.uleb128 0x3f
 2032 0052 19       		.uleb128 0x19
 2033 0053 03       		.uleb128 0x3
 2034 0054 0E       		.uleb128 0xe
 2035 0055 3A       		.uleb128 0x3a
 2036 0056 0B       		.uleb128 0xb
 2037 0057 3B       		.uleb128 0x3b
 2038 0058 05       		.uleb128 0x5
 2039 0059 27       		.uleb128 0x27
 2040 005a 19       		.uleb128 0x19
 2041 005b 49       		.uleb128 0x49
 2042 005c 13       		.uleb128 0x13
 2043 005d 20       		.uleb128 0x20
 2044 005e 0B       		.uleb128 0xb
 2045 005f 01       		.uleb128 0x1
 2046 0060 13       		.uleb128 0x13
 2047 0061 00       		.byte	0
 2048 0062 00       		.byte	0
 2049 0063 08       		.uleb128 0x8
 2050 0064 34       		.uleb128 0x34
 2051 0065 00       		.byte	0
 2052 0066 03       		.uleb128 0x3
 2053 0067 0E       		.uleb128 0xe
 2054 0068 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 66


 2055 0069 0B       		.uleb128 0xb
 2056 006a 3B       		.uleb128 0x3b
 2057 006b 05       		.uleb128 0x5
 2058 006c 49       		.uleb128 0x49
 2059 006d 13       		.uleb128 0x13
 2060 006e 00       		.byte	0
 2061 006f 00       		.byte	0
 2062 0070 09       		.uleb128 0x9
 2063 0071 2E       		.uleb128 0x2e
 2064 0072 01       		.byte	0x1
 2065 0073 3F       		.uleb128 0x3f
 2066 0074 19       		.uleb128 0x19
 2067 0075 03       		.uleb128 0x3
 2068 0076 0E       		.uleb128 0xe
 2069 0077 3A       		.uleb128 0x3a
 2070 0078 0B       		.uleb128 0xb
 2071 0079 3B       		.uleb128 0x3b
 2072 007a 05       		.uleb128 0x5
 2073 007b 27       		.uleb128 0x27
 2074 007c 19       		.uleb128 0x19
 2075 007d 20       		.uleb128 0x20
 2076 007e 0B       		.uleb128 0xb
 2077 007f 01       		.uleb128 0x1
 2078 0080 13       		.uleb128 0x13
 2079 0081 00       		.byte	0
 2080 0082 00       		.byte	0
 2081 0083 0A       		.uleb128 0xa
 2082 0084 05       		.uleb128 0x5
 2083 0085 00       		.byte	0
 2084 0086 03       		.uleb128 0x3
 2085 0087 0E       		.uleb128 0xe
 2086 0088 3A       		.uleb128 0x3a
 2087 0089 0B       		.uleb128 0xb
 2088 008a 3B       		.uleb128 0x3b
 2089 008b 05       		.uleb128 0x5
 2090 008c 49       		.uleb128 0x49
 2091 008d 13       		.uleb128 0x13
 2092 008e 00       		.byte	0
 2093 008f 00       		.byte	0
 2094 0090 0B       		.uleb128 0xb
 2095 0091 2E       		.uleb128 0x2e
 2096 0092 00       		.byte	0
 2097 0093 31       		.uleb128 0x31
 2098 0094 13       		.uleb128 0x13
 2099 0095 11       		.uleb128 0x11
 2100 0096 01       		.uleb128 0x1
 2101 0097 12       		.uleb128 0x12
 2102 0098 06       		.uleb128 0x6
 2103 0099 40       		.uleb128 0x40
 2104 009a 18       		.uleb128 0x18
 2105 009b 9742     		.uleb128 0x2117
 2106 009d 19       		.uleb128 0x19
 2107 009e 00       		.byte	0
 2108 009f 00       		.byte	0
 2109 00a0 0C       		.uleb128 0xc
 2110 00a1 2E       		.uleb128 0x2e
 2111 00a2 01       		.byte	0x1
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 67


 2112 00a3 3F       		.uleb128 0x3f
 2113 00a4 19       		.uleb128 0x19
 2114 00a5 03       		.uleb128 0x3
 2115 00a6 0E       		.uleb128 0xe
 2116 00a7 3A       		.uleb128 0x3a
 2117 00a8 0B       		.uleb128 0xb
 2118 00a9 3B       		.uleb128 0x3b
 2119 00aa 0B       		.uleb128 0xb
 2120 00ab 27       		.uleb128 0x27
 2121 00ac 19       		.uleb128 0x19
 2122 00ad 11       		.uleb128 0x11
 2123 00ae 01       		.uleb128 0x1
 2124 00af 12       		.uleb128 0x12
 2125 00b0 06       		.uleb128 0x6
 2126 00b1 40       		.uleb128 0x40
 2127 00b2 18       		.uleb128 0x18
 2128 00b3 9742     		.uleb128 0x2117
 2129 00b5 19       		.uleb128 0x19
 2130 00b6 01       		.uleb128 0x1
 2131 00b7 13       		.uleb128 0x13
 2132 00b8 00       		.byte	0
 2133 00b9 00       		.byte	0
 2134 00ba 0D       		.uleb128 0xd
 2135 00bb 34       		.uleb128 0x34
 2136 00bc 00       		.byte	0
 2137 00bd 03       		.uleb128 0x3
 2138 00be 0E       		.uleb128 0xe
 2139 00bf 3A       		.uleb128 0x3a
 2140 00c0 0B       		.uleb128 0xb
 2141 00c1 3B       		.uleb128 0x3b
 2142 00c2 0B       		.uleb128 0xb
 2143 00c3 49       		.uleb128 0x49
 2144 00c4 13       		.uleb128 0x13
 2145 00c5 02       		.uleb128 0x2
 2146 00c6 17       		.uleb128 0x17
 2147 00c7 00       		.byte	0
 2148 00c8 00       		.byte	0
 2149 00c9 0E       		.uleb128 0xe
 2150 00ca 898201   		.uleb128 0x4109
 2151 00cd 00       		.byte	0
 2152 00ce 11       		.uleb128 0x11
 2153 00cf 01       		.uleb128 0x1
 2154 00d0 31       		.uleb128 0x31
 2155 00d1 13       		.uleb128 0x13
 2156 00d2 00       		.byte	0
 2157 00d3 00       		.byte	0
 2158 00d4 0F       		.uleb128 0xf
 2159 00d5 898201   		.uleb128 0x4109
 2160 00d8 00       		.byte	0
 2161 00d9 11       		.uleb128 0x11
 2162 00da 01       		.uleb128 0x1
 2163 00db 9542     		.uleb128 0x2115
 2164 00dd 19       		.uleb128 0x19
 2165 00de 31       		.uleb128 0x31
 2166 00df 13       		.uleb128 0x13
 2167 00e0 00       		.byte	0
 2168 00e1 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 68


 2169 00e2 10       		.uleb128 0x10
 2170 00e3 1D       		.uleb128 0x1d
 2171 00e4 00       		.byte	0
 2172 00e5 31       		.uleb128 0x31
 2173 00e6 13       		.uleb128 0x13
 2174 00e7 52       		.uleb128 0x52
 2175 00e8 01       		.uleb128 0x1
 2176 00e9 55       		.uleb128 0x55
 2177 00ea 17       		.uleb128 0x17
 2178 00eb 58       		.uleb128 0x58
 2179 00ec 0B       		.uleb128 0xb
 2180 00ed 59       		.uleb128 0x59
 2181 00ee 0B       		.uleb128 0xb
 2182 00ef 00       		.byte	0
 2183 00f0 00       		.byte	0
 2184 00f1 11       		.uleb128 0x11
 2185 00f2 2E       		.uleb128 0x2e
 2186 00f3 00       		.byte	0
 2187 00f4 3F       		.uleb128 0x3f
 2188 00f5 19       		.uleb128 0x19
 2189 00f6 03       		.uleb128 0x3
 2190 00f7 0E       		.uleb128 0xe
 2191 00f8 3A       		.uleb128 0x3a
 2192 00f9 0B       		.uleb128 0xb
 2193 00fa 3B       		.uleb128 0x3b
 2194 00fb 05       		.uleb128 0x5
 2195 00fc 27       		.uleb128 0x27
 2196 00fd 19       		.uleb128 0x19
 2197 00fe 49       		.uleb128 0x49
 2198 00ff 13       		.uleb128 0x13
 2199 0100 11       		.uleb128 0x11
 2200 0101 01       		.uleb128 0x1
 2201 0102 12       		.uleb128 0x12
 2202 0103 06       		.uleb128 0x6
 2203 0104 40       		.uleb128 0x40
 2204 0105 18       		.uleb128 0x18
 2205 0106 9742     		.uleb128 0x2117
 2206 0108 19       		.uleb128 0x19
 2207 0109 00       		.byte	0
 2208 010a 00       		.byte	0
 2209 010b 12       		.uleb128 0x12
 2210 010c 2E       		.uleb128 0x2e
 2211 010d 01       		.byte	0x1
 2212 010e 3F       		.uleb128 0x3f
 2213 010f 19       		.uleb128 0x19
 2214 0110 03       		.uleb128 0x3
 2215 0111 0E       		.uleb128 0xe
 2216 0112 3A       		.uleb128 0x3a
 2217 0113 0B       		.uleb128 0xb
 2218 0114 3B       		.uleb128 0x3b
 2219 0115 05       		.uleb128 0x5
 2220 0116 27       		.uleb128 0x27
 2221 0117 19       		.uleb128 0x19
 2222 0118 11       		.uleb128 0x11
 2223 0119 01       		.uleb128 0x1
 2224 011a 12       		.uleb128 0x12
 2225 011b 06       		.uleb128 0x6
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 69


 2226 011c 40       		.uleb128 0x40
 2227 011d 18       		.uleb128 0x18
 2228 011e 9742     		.uleb128 0x2117
 2229 0120 19       		.uleb128 0x19
 2230 0121 01       		.uleb128 0x1
 2231 0122 13       		.uleb128 0x13
 2232 0123 00       		.byte	0
 2233 0124 00       		.byte	0
 2234 0125 13       		.uleb128 0x13
 2235 0126 05       		.uleb128 0x5
 2236 0127 00       		.byte	0
 2237 0128 03       		.uleb128 0x3
 2238 0129 0E       		.uleb128 0xe
 2239 012a 3A       		.uleb128 0x3a
 2240 012b 0B       		.uleb128 0xb
 2241 012c 3B       		.uleb128 0x3b
 2242 012d 05       		.uleb128 0x5
 2243 012e 49       		.uleb128 0x49
 2244 012f 13       		.uleb128 0x13
 2245 0130 02       		.uleb128 0x2
 2246 0131 18       		.uleb128 0x18
 2247 0132 00       		.byte	0
 2248 0133 00       		.byte	0
 2249 0134 14       		.uleb128 0x14
 2250 0135 2E       		.uleb128 0x2e
 2251 0136 01       		.byte	0x1
 2252 0137 31       		.uleb128 0x31
 2253 0138 13       		.uleb128 0x13
 2254 0139 11       		.uleb128 0x11
 2255 013a 01       		.uleb128 0x1
 2256 013b 12       		.uleb128 0x12
 2257 013c 06       		.uleb128 0x6
 2258 013d 40       		.uleb128 0x40
 2259 013e 18       		.uleb128 0x18
 2260 013f 9742     		.uleb128 0x2117
 2261 0141 19       		.uleb128 0x19
 2262 0142 01       		.uleb128 0x1
 2263 0143 13       		.uleb128 0x13
 2264 0144 00       		.byte	0
 2265 0145 00       		.byte	0
 2266 0146 15       		.uleb128 0x15
 2267 0147 34       		.uleb128 0x34
 2268 0148 00       		.byte	0
 2269 0149 31       		.uleb128 0x31
 2270 014a 13       		.uleb128 0x13
 2271 014b 02       		.uleb128 0x2
 2272 014c 18       		.uleb128 0x18
 2273 014d 00       		.byte	0
 2274 014e 00       		.byte	0
 2275 014f 16       		.uleb128 0x16
 2276 0150 34       		.uleb128 0x34
 2277 0151 00       		.byte	0
 2278 0152 31       		.uleb128 0x31
 2279 0153 13       		.uleb128 0x13
 2280 0154 02       		.uleb128 0x2
 2281 0155 17       		.uleb128 0x17
 2282 0156 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 70


 2283 0157 00       		.byte	0
 2284 0158 17       		.uleb128 0x17
 2285 0159 2E       		.uleb128 0x2e
 2286 015a 01       		.byte	0x1
 2287 015b 3F       		.uleb128 0x3f
 2288 015c 19       		.uleb128 0x19
 2289 015d 03       		.uleb128 0x3
 2290 015e 0E       		.uleb128 0xe
 2291 015f 3A       		.uleb128 0x3a
 2292 0160 0B       		.uleb128 0xb
 2293 0161 3B       		.uleb128 0x3b
 2294 0162 05       		.uleb128 0x5
 2295 0163 27       		.uleb128 0x27
 2296 0164 19       		.uleb128 0x19
 2297 0165 49       		.uleb128 0x49
 2298 0166 13       		.uleb128 0x13
 2299 0167 11       		.uleb128 0x11
 2300 0168 01       		.uleb128 0x1
 2301 0169 12       		.uleb128 0x12
 2302 016a 06       		.uleb128 0x6
 2303 016b 40       		.uleb128 0x40
 2304 016c 18       		.uleb128 0x18
 2305 016d 9742     		.uleb128 0x2117
 2306 016f 19       		.uleb128 0x19
 2307 0170 01       		.uleb128 0x1
 2308 0171 13       		.uleb128 0x13
 2309 0172 00       		.byte	0
 2310 0173 00       		.byte	0
 2311 0174 18       		.uleb128 0x18
 2312 0175 34       		.uleb128 0x34
 2313 0176 00       		.byte	0
 2314 0177 03       		.uleb128 0x3
 2315 0178 0E       		.uleb128 0xe
 2316 0179 3A       		.uleb128 0x3a
 2317 017a 0B       		.uleb128 0xb
 2318 017b 3B       		.uleb128 0x3b
 2319 017c 05       		.uleb128 0x5
 2320 017d 49       		.uleb128 0x49
 2321 017e 13       		.uleb128 0x13
 2322 017f 02       		.uleb128 0x2
 2323 0180 17       		.uleb128 0x17
 2324 0181 00       		.byte	0
 2325 0182 00       		.byte	0
 2326 0183 19       		.uleb128 0x19
 2327 0184 34       		.uleb128 0x34
 2328 0185 00       		.byte	0
 2329 0186 03       		.uleb128 0x3
 2330 0187 0E       		.uleb128 0xe
 2331 0188 3A       		.uleb128 0x3a
 2332 0189 0B       		.uleb128 0xb
 2333 018a 3B       		.uleb128 0x3b
 2334 018b 05       		.uleb128 0x5
 2335 018c 49       		.uleb128 0x49
 2336 018d 13       		.uleb128 0x13
 2337 018e 02       		.uleb128 0x2
 2338 018f 18       		.uleb128 0x18
 2339 0190 00       		.byte	0
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 71


 2340 0191 00       		.byte	0
 2341 0192 1A       		.uleb128 0x1a
 2342 0193 1D       		.uleb128 0x1d
 2343 0194 01       		.byte	0x1
 2344 0195 31       		.uleb128 0x31
 2345 0196 13       		.uleb128 0x13
 2346 0197 52       		.uleb128 0x52
 2347 0198 01       		.uleb128 0x1
 2348 0199 55       		.uleb128 0x55
 2349 019a 17       		.uleb128 0x17
 2350 019b 58       		.uleb128 0x58
 2351 019c 0B       		.uleb128 0xb
 2352 019d 59       		.uleb128 0x59
 2353 019e 05       		.uleb128 0x5
 2354 019f 01       		.uleb128 0x1
 2355 01a0 13       		.uleb128 0x13
 2356 01a1 00       		.byte	0
 2357 01a2 00       		.byte	0
 2358 01a3 1B       		.uleb128 0x1b
 2359 01a4 0B       		.uleb128 0xb
 2360 01a5 01       		.byte	0x1
 2361 01a6 55       		.uleb128 0x55
 2362 01a7 17       		.uleb128 0x17
 2363 01a8 00       		.byte	0
 2364 01a9 00       		.byte	0
 2365 01aa 1C       		.uleb128 0x1c
 2366 01ab 34       		.uleb128 0x34
 2367 01ac 00       		.byte	0
 2368 01ad 31       		.uleb128 0x31
 2369 01ae 13       		.uleb128 0x13
 2370 01af 00       		.byte	0
 2371 01b0 00       		.byte	0
 2372 01b1 1D       		.uleb128 0x1d
 2373 01b2 1D       		.uleb128 0x1d
 2374 01b3 01       		.byte	0x1
 2375 01b4 31       		.uleb128 0x31
 2376 01b5 13       		.uleb128 0x13
 2377 01b6 52       		.uleb128 0x52
 2378 01b7 01       		.uleb128 0x1
 2379 01b8 55       		.uleb128 0x55
 2380 01b9 17       		.uleb128 0x17
 2381 01ba 58       		.uleb128 0x58
 2382 01bb 0B       		.uleb128 0xb
 2383 01bc 59       		.uleb128 0x59
 2384 01bd 05       		.uleb128 0x5
 2385 01be 00       		.byte	0
 2386 01bf 00       		.byte	0
 2387 01c0 1E       		.uleb128 0x1e
 2388 01c1 05       		.uleb128 0x5
 2389 01c2 00       		.byte	0
 2390 01c3 31       		.uleb128 0x31
 2391 01c4 13       		.uleb128 0x13
 2392 01c5 02       		.uleb128 0x2
 2393 01c6 18       		.uleb128 0x18
 2394 01c7 00       		.byte	0
 2395 01c8 00       		.byte	0
 2396 01c9 1F       		.uleb128 0x1f
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 72


 2397 01ca 05       		.uleb128 0x5
 2398 01cb 00       		.byte	0
 2399 01cc 31       		.uleb128 0x31
 2400 01cd 13       		.uleb128 0x13
 2401 01ce 00       		.byte	0
 2402 01cf 00       		.byte	0
 2403 01d0 20       		.uleb128 0x20
 2404 01d1 0F       		.uleb128 0xf
 2405 01d2 00       		.byte	0
 2406 01d3 0B       		.uleb128 0xb
 2407 01d4 0B       		.uleb128 0xb
 2408 01d5 49       		.uleb128 0x49
 2409 01d6 13       		.uleb128 0x13
 2410 01d7 00       		.byte	0
 2411 01d8 00       		.byte	0
 2412 01d9 21       		.uleb128 0x21
 2413 01da 26       		.uleb128 0x26
 2414 01db 00       		.byte	0
 2415 01dc 49       		.uleb128 0x49
 2416 01dd 13       		.uleb128 0x13
 2417 01de 00       		.byte	0
 2418 01df 00       		.byte	0
 2419 01e0 22       		.uleb128 0x22
 2420 01e1 05       		.uleb128 0x5
 2421 01e2 00       		.byte	0
 2422 01e3 03       		.uleb128 0x3
 2423 01e4 0E       		.uleb128 0xe
 2424 01e5 3A       		.uleb128 0x3a
 2425 01e6 0B       		.uleb128 0xb
 2426 01e7 3B       		.uleb128 0x3b
 2427 01e8 05       		.uleb128 0x5
 2428 01e9 49       		.uleb128 0x49
 2429 01ea 13       		.uleb128 0x13
 2430 01eb 02       		.uleb128 0x2
 2431 01ec 17       		.uleb128 0x17
 2432 01ed 00       		.byte	0
 2433 01ee 00       		.byte	0
 2434 01ef 23       		.uleb128 0x23
 2435 01f0 05       		.uleb128 0x5
 2436 01f1 00       		.byte	0
 2437 01f2 31       		.uleb128 0x31
 2438 01f3 13       		.uleb128 0x13
 2439 01f4 02       		.uleb128 0x2
 2440 01f5 17       		.uleb128 0x17
 2441 01f6 00       		.byte	0
 2442 01f7 00       		.byte	0
 2443 01f8 24       		.uleb128 0x24
 2444 01f9 34       		.uleb128 0x34
 2445 01fa 00       		.byte	0
 2446 01fb 03       		.uleb128 0x3
 2447 01fc 0E       		.uleb128 0xe
 2448 01fd 3A       		.uleb128 0x3a
 2449 01fe 0B       		.uleb128 0xb
 2450 01ff 3B       		.uleb128 0x3b
 2451 0200 0B       		.uleb128 0xb
 2452 0201 49       		.uleb128 0x49
 2453 0202 13       		.uleb128 0x13
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 73


 2454 0203 3F       		.uleb128 0x3f
 2455 0204 19       		.uleb128 0x19
 2456 0205 02       		.uleb128 0x2
 2457 0206 18       		.uleb128 0x18
 2458 0207 00       		.byte	0
 2459 0208 00       		.byte	0
 2460 0209 25       		.uleb128 0x25
 2461 020a 2E       		.uleb128 0x2e
 2462 020b 00       		.byte	0
 2463 020c 3F       		.uleb128 0x3f
 2464 020d 19       		.uleb128 0x19
 2465 020e 3C       		.uleb128 0x3c
 2466 020f 19       		.uleb128 0x19
 2467 0210 6E       		.uleb128 0x6e
 2468 0211 0E       		.uleb128 0xe
 2469 0212 03       		.uleb128 0x3
 2470 0213 0E       		.uleb128 0xe
 2471 0214 3A       		.uleb128 0x3a
 2472 0215 0B       		.uleb128 0xb
 2473 0216 3B       		.uleb128 0x3b
 2474 0217 0B       		.uleb128 0xb
 2475 0218 00       		.byte	0
 2476 0219 00       		.byte	0
 2477 021a 00       		.byte	0
 2478              		.section	.debug_loc,"",%progbits
 2479              	.Ldebug_loc0:
 2480              	.LLST0:
 2481 0000 08000000 		.4byte	.LVL1
 2482 0004 30000000 		.4byte	.LVL3
 2483 0008 0100     		.2byte	0x1
 2484 000a 55       		.byte	0x55
 2485 000b 00000000 		.4byte	0
 2486 000f 00000000 		.4byte	0
 2487              	.LLST1:
 2488 0013 08000000 		.4byte	.LVL8
 2489 0017 30000000 		.4byte	.LVL10
 2490 001b 0100     		.2byte	0x1
 2491 001d 54       		.byte	0x54
 2492 001e 00000000 		.4byte	0
 2493 0022 00000000 		.4byte	0
 2494              	.LLST2:
 2495 0026 04000000 		.4byte	.LVL14
 2496 002a 08000000 		.4byte	.LVL15
 2497 002e 0600     		.2byte	0x6
 2498 0030 70       		.byte	0x70
 2499 0031 00       		.sleb128 0
 2500 0032 08       		.byte	0x8
 2501 0033 7F       		.byte	0x7f
 2502 0034 1A       		.byte	0x1a
 2503 0035 9F       		.byte	0x9f
 2504 0036 00000000 		.4byte	0
 2505 003a 00000000 		.4byte	0
 2506              	.LLST3:
 2507 003e 00000000 		.4byte	.LVL16
 2508 0042 18000000 		.4byte	.LVL18
 2509 0046 0200     		.2byte	0x2
 2510 0048 30       		.byte	0x30
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 74


 2511 0049 9F       		.byte	0x9f
 2512 004a 18000000 		.4byte	.LVL18
 2513 004e 28000000 		.4byte	.LFE9
 2514 0052 0100     		.2byte	0x1
 2515 0054 50       		.byte	0x50
 2516 0055 00000000 		.4byte	0
 2517 0059 00000000 		.4byte	0
 2518              	.LLST4:
 2519 005d 04000000 		.4byte	.LVL20
 2520 0061 08000000 		.4byte	.LVL21
 2521 0065 0A00     		.2byte	0xa
 2522 0067 70       		.byte	0x70
 2523 0068 00       		.sleb128 0
 2524 0069 08       		.byte	0x8
 2525 006a 20       		.byte	0x20
 2526 006b 1A       		.byte	0x1a
 2527 006c 48       		.byte	0x48
 2528 006d 24       		.byte	0x24
 2529 006e 30       		.byte	0x30
 2530 006f 2E       		.byte	0x2e
 2531 0070 9F       		.byte	0x9f
 2532 0071 00000000 		.4byte	0
 2533 0075 00000000 		.4byte	0
 2534              	.LLST5:
 2535 0079 06000000 		.4byte	.LVL22
 2536 007d 1F000000 		.4byte	.LVL23-1
 2537 0081 0100     		.2byte	0x1
 2538 0083 50       		.byte	0x50
 2539 0084 00000000 		.4byte	0
 2540 0088 00000000 		.4byte	0
 2541              	.LLST6:
 2542 008c 00000000 		.4byte	.LVL29
 2543 0090 12000000 		.4byte	.LVL30
 2544 0094 0200     		.2byte	0x2
 2545 0096 30       		.byte	0x30
 2546 0097 9F       		.byte	0x9f
 2547 0098 1E000000 		.4byte	.LVL31
 2548 009c 24000000 		.4byte	.LVL32
 2549 00a0 0100     		.2byte	0x1
 2550 00a2 51       		.byte	0x51
 2551 00a3 00000000 		.4byte	0
 2552 00a7 00000000 		.4byte	0
 2553              	.LLST7:
 2554 00ab 00000000 		.4byte	.LVL33
 2555 00af 16000000 		.4byte	.LVL34
 2556 00b3 0100     		.2byte	0x1
 2557 00b5 50       		.byte	0x50
 2558 00b6 16000000 		.4byte	.LVL34
 2559 00ba 38000000 		.4byte	.LFE21
 2560 00be 0400     		.2byte	0x4
 2561 00c0 F3       		.byte	0xf3
 2562 00c1 01       		.uleb128 0x1
 2563 00c2 50       		.byte	0x50
 2564 00c3 9F       		.byte	0x9f
 2565 00c4 00000000 		.4byte	0
 2566 00c8 00000000 		.4byte	0
 2567              	.LLST8:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 75


 2568 00cc 00000000 		.4byte	.LVL33
 2569 00d0 16000000 		.4byte	.LVL34
 2570 00d4 0100     		.2byte	0x1
 2571 00d6 51       		.byte	0x51
 2572 00d7 16000000 		.4byte	.LVL34
 2573 00db 38000000 		.4byte	.LFE21
 2574 00df 0400     		.2byte	0x4
 2575 00e1 F3       		.byte	0xf3
 2576 00e2 01       		.uleb128 0x1
 2577 00e3 51       		.byte	0x51
 2578 00e4 9F       		.byte	0x9f
 2579 00e5 00000000 		.4byte	0
 2580 00e9 00000000 		.4byte	0
 2581              	.LLST9:
 2582 00ed 00000000 		.4byte	.LVL33
 2583 00f1 16000000 		.4byte	.LVL34
 2584 00f5 0200     		.2byte	0x2
 2585 00f7 30       		.byte	0x30
 2586 00f8 9F       		.byte	0x9f
 2587 00f9 16000000 		.4byte	.LVL34
 2588 00fd 1A000000 		.4byte	.LVL35
 2589 0101 0900     		.2byte	0x9
 2590 0103 71       		.byte	0x71
 2591 0104 00       		.sleb128 0
 2592 0105 F3       		.byte	0xf3
 2593 0106 01       		.uleb128 0x1
 2594 0107 50       		.byte	0x50
 2595 0108 31       		.byte	0x31
 2596 0109 1C       		.byte	0x1c
 2597 010a 1C       		.byte	0x1c
 2598 010b 9F       		.byte	0x9f
 2599 010c 24000000 		.4byte	.LVL36
 2600 0110 28000000 		.4byte	.LVL37
 2601 0114 0900     		.2byte	0x9
 2602 0116 71       		.byte	0x71
 2603 0117 00       		.sleb128 0
 2604 0118 F3       		.byte	0xf3
 2605 0119 01       		.uleb128 0x1
 2606 011a 50       		.byte	0x50
 2607 011b 31       		.byte	0x31
 2608 011c 1C       		.byte	0x1c
 2609 011d 1C       		.byte	0x1c
 2610 011e 9F       		.byte	0x9f
 2611 011f 00000000 		.4byte	0
 2612 0123 00000000 		.4byte	0
 2613              	.LLST10:
 2614 0127 1A000000 		.4byte	.LVL35
 2615 012b 24000000 		.4byte	.LVL36
 2616 012f 0100     		.2byte	0x1
 2617 0131 50       		.byte	0x50
 2618 0132 00000000 		.4byte	0
 2619 0136 00000000 		.4byte	0
 2620              	.LLST11:
 2621 013a 06000000 		.4byte	.LVL39
 2622 013e 0E000000 		.4byte	.LVL40
 2623 0142 0100     		.2byte	0x1
 2624 0144 50       		.byte	0x50
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 76


 2625 0145 14000000 		.4byte	.LVL41
 2626 0149 1C000000 		.4byte	.LFE23
 2627 014d 0100     		.2byte	0x1
 2628 014f 50       		.byte	0x50
 2629 0150 00000000 		.4byte	0
 2630 0154 00000000 		.4byte	0
 2631              	.LLST12:
 2632 0158 06000000 		.4byte	.LVL42
 2633 015c 1F000000 		.4byte	.LVL43-1
 2634 0160 0100     		.2byte	0x1
 2635 0162 50       		.byte	0x50
 2636 0163 00000000 		.4byte	0
 2637 0167 00000000 		.4byte	0
 2638              	.LLST13:
 2639 016b 00000000 		.4byte	.LVL44
 2640 016f 2C000000 		.4byte	.LVL47
 2641 0173 0100     		.2byte	0x1
 2642 0175 50       		.byte	0x50
 2643 0176 2C000000 		.4byte	.LVL47
 2644 017a 3A000000 		.4byte	.LVL48
 2645 017e 0400     		.2byte	0x4
 2646 0180 F3       		.byte	0xf3
 2647 0181 01       		.uleb128 0x1
 2648 0182 50       		.byte	0x50
 2649 0183 9F       		.byte	0x9f
 2650 0184 3A000000 		.4byte	.LVL48
 2651 0188 5C000000 		.4byte	.LFE25
 2652 018c 0100     		.2byte	0x1
 2653 018e 50       		.byte	0x50
 2654 018f 00000000 		.4byte	0
 2655 0193 00000000 		.4byte	0
 2656              	.LLST14:
 2657 0197 1E000000 		.4byte	.LVL45
 2658 019b 26000000 		.4byte	.LVL46
 2659 019f 0100     		.2byte	0x1
 2660 01a1 53       		.byte	0x53
 2661 01a2 46000000 		.4byte	.LVL49
 2662 01a6 48000000 		.4byte	.LVL50
 2663 01aa 0100     		.2byte	0x1
 2664 01ac 53       		.byte	0x53
 2665 01ad 00000000 		.4byte	0
 2666 01b1 00000000 		.4byte	0
 2667              		.section	.debug_aranges,"",%progbits
 2668 0000 DC000000 		.4byte	0xdc
 2669 0004 0200     		.2byte	0x2
 2670 0006 00000000 		.4byte	.Ldebug_info0
 2671 000a 04       		.byte	0x4
 2672 000b 00       		.byte	0
 2673 000c 0000     		.2byte	0
 2674 000e 0000     		.2byte	0
 2675 0010 00000000 		.4byte	.LFB1
 2676 0014 38000000 		.4byte	.LFE1-.LFB1
 2677 0018 00000000 		.4byte	.LFB2
 2678 001c 40000000 		.4byte	.LFE2-.LFB2
 2679 0020 00000000 		.4byte	.LFB0
 2680 0024 4C000000 		.4byte	.LFE0-.LFB0
 2681 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 77


 2682 002c 40000000 		.4byte	.LFE3-.LFB3
 2683 0030 00000000 		.4byte	.LFB4
 2684 0034 04000000 		.4byte	.LFE4-.LFB4
 2685 0038 00000000 		.4byte	.LFB6
 2686 003c 0C000000 		.4byte	.LFE6-.LFB6
 2687 0040 00000000 		.4byte	.LFB7
 2688 0044 0C000000 		.4byte	.LFE7-.LFB7
 2689 0048 00000000 		.4byte	.LFB8
 2690 004c 10000000 		.4byte	.LFE8-.LFB8
 2691 0050 00000000 		.4byte	.LFB9
 2692 0054 28000000 		.4byte	.LFE9-.LFB9
 2693 0058 00000000 		.4byte	.LFB10
 2694 005c 1C000000 		.4byte	.LFE10-.LFB10
 2695 0060 00000000 		.4byte	.LFB11
 2696 0064 10000000 		.4byte	.LFE11-.LFB11
 2697 0068 00000000 		.4byte	.LFB12
 2698 006c 24000000 		.4byte	.LFE12-.LFB12
 2699 0070 00000000 		.4byte	.LFB14
 2700 0074 0C000000 		.4byte	.LFE14-.LFB14
 2701 0078 00000000 		.4byte	.LFB15
 2702 007c 0C000000 		.4byte	.LFE15-.LFB15
 2703 0080 00000000 		.4byte	.LFB16
 2704 0084 0C000000 		.4byte	.LFE16-.LFB16
 2705 0088 00000000 		.4byte	.LFB17
 2706 008c 14000000 		.4byte	.LFE17-.LFB17
 2707 0090 00000000 		.4byte	.LFB18
 2708 0094 0C000000 		.4byte	.LFE18-.LFB18
 2709 0098 00000000 		.4byte	.LFB19
 2710 009c 18000000 		.4byte	.LFE19-.LFB19
 2711 00a0 00000000 		.4byte	.LFB20
 2712 00a4 34000000 		.4byte	.LFE20-.LFB20
 2713 00a8 00000000 		.4byte	.LFB21
 2714 00ac 38000000 		.4byte	.LFE21-.LFB21
 2715 00b0 00000000 		.4byte	.LFB22
 2716 00b4 3C000000 		.4byte	.LFE22-.LFB22
 2717 00b8 00000000 		.4byte	.LFB23
 2718 00bc 1C000000 		.4byte	.LFE23-.LFB23
 2719 00c0 00000000 		.4byte	.LFB24
 2720 00c4 24000000 		.4byte	.LFE24-.LFB24
 2721 00c8 00000000 		.4byte	.LFB25
 2722 00cc 5C000000 		.4byte	.LFE25-.LFB25
 2723 00d0 00000000 		.4byte	.LFB26
 2724 00d4 02000000 		.4byte	.LFE26-.LFB26
 2725 00d8 00000000 		.4byte	0
 2726 00dc 00000000 		.4byte	0
 2727              		.section	.debug_ranges,"",%progbits
 2728              	.Ldebug_ranges0:
 2729 0000 08000000 		.4byte	.LBB18
 2730 0004 1E000000 		.4byte	.LBE18
 2731 0008 20000000 		.4byte	.LBB21
 2732 000c 26000000 		.4byte	.LBE21
 2733 0010 00000000 		.4byte	0
 2734 0014 00000000 		.4byte	0
 2735 0018 00000000 		.4byte	.LBB22
 2736 001c 02000000 		.4byte	.LBE22
 2737 0020 04000000 		.4byte	.LBB28
 2738 0024 06000000 		.4byte	.LBE28
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 78


 2739 0028 00000000 		.4byte	0
 2740 002c 00000000 		.4byte	0
 2741 0030 02000000 		.4byte	.LBB25
 2742 0034 04000000 		.4byte	.LBE25
 2743 0038 06000000 		.4byte	.LBB29
 2744 003c 08000000 		.4byte	.LBE29
 2745 0040 00000000 		.4byte	0
 2746 0044 00000000 		.4byte	0
 2747 0048 0C000000 		.4byte	.LBB30
 2748 004c 10000000 		.4byte	.LBE30
 2749 0050 12000000 		.4byte	.LBB34
 2750 0054 18000000 		.4byte	.LBE34
 2751 0058 1C000000 		.4byte	.LBB35
 2752 005c 1E000000 		.4byte	.LBE35
 2753 0060 00000000 		.4byte	0
 2754 0064 00000000 		.4byte	0
 2755 0068 0E000000 		.4byte	.LBB36
 2756 006c 16000000 		.4byte	.LBE36
 2757 0070 1A000000 		.4byte	.LBB40
 2758 0074 20000000 		.4byte	.LBE40
 2759 0078 22000000 		.4byte	.LBB41
 2760 007c 24000000 		.4byte	.LBE41
 2761 0080 00000000 		.4byte	0
 2762 0084 00000000 		.4byte	0
 2763 0088 06000000 		.4byte	.LBB42
 2764 008c 10000000 		.4byte	.LBE42
 2765 0090 12000000 		.4byte	.LBB49
 2766 0094 14000000 		.4byte	.LBE49
 2767 0098 00000000 		.4byte	0
 2768 009c 00000000 		.4byte	0
 2769 00a0 10000000 		.4byte	.LBB45
 2770 00a4 12000000 		.4byte	.LBE45
 2771 00a8 14000000 		.4byte	.LBB50
 2772 00ac 1E000000 		.4byte	.LBE50
 2773 00b0 20000000 		.4byte	.LBB54
 2774 00b4 22000000 		.4byte	.LBE54
 2775 00b8 00000000 		.4byte	0
 2776 00bc 00000000 		.4byte	0
 2777 00c0 1E000000 		.4byte	.LBB51
 2778 00c4 20000000 		.4byte	.LBE51
 2779 00c8 22000000 		.4byte	.LBB55
 2780 00cc 3C000000 		.4byte	.LBE55
 2781 00d0 00000000 		.4byte	0
 2782 00d4 00000000 		.4byte	0
 2783 00d8 08000000 		.4byte	.LBB56
 2784 00dc 36000000 		.4byte	.LBE56
 2785 00e0 3A000000 		.4byte	.LBB57
 2786 00e4 5C000000 		.4byte	.LBE57
 2787 00e8 00000000 		.4byte	0
 2788 00ec 00000000 		.4byte	0
 2789 00f0 00000000 		.4byte	.LFB1
 2790 00f4 38000000 		.4byte	.LFE1
 2791 00f8 00000000 		.4byte	.LFB2
 2792 00fc 40000000 		.4byte	.LFE2
 2793 0100 00000000 		.4byte	.LFB0
 2794 0104 4C000000 		.4byte	.LFE0
 2795 0108 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 79


 2796 010c 40000000 		.4byte	.LFE3
 2797 0110 00000000 		.4byte	.LFB4
 2798 0114 04000000 		.4byte	.LFE4
 2799 0118 00000000 		.4byte	.LFB6
 2800 011c 0C000000 		.4byte	.LFE6
 2801 0120 00000000 		.4byte	.LFB7
 2802 0124 0C000000 		.4byte	.LFE7
 2803 0128 00000000 		.4byte	.LFB8
 2804 012c 10000000 		.4byte	.LFE8
 2805 0130 00000000 		.4byte	.LFB9
 2806 0134 28000000 		.4byte	.LFE9
 2807 0138 00000000 		.4byte	.LFB10
 2808 013c 1C000000 		.4byte	.LFE10
 2809 0140 00000000 		.4byte	.LFB11
 2810 0144 10000000 		.4byte	.LFE11
 2811 0148 00000000 		.4byte	.LFB12
 2812 014c 24000000 		.4byte	.LFE12
 2813 0150 00000000 		.4byte	.LFB14
 2814 0154 0C000000 		.4byte	.LFE14
 2815 0158 00000000 		.4byte	.LFB15
 2816 015c 0C000000 		.4byte	.LFE15
 2817 0160 00000000 		.4byte	.LFB16
 2818 0164 0C000000 		.4byte	.LFE16
 2819 0168 00000000 		.4byte	.LFB17
 2820 016c 14000000 		.4byte	.LFE17
 2821 0170 00000000 		.4byte	.LFB18
 2822 0174 0C000000 		.4byte	.LFE18
 2823 0178 00000000 		.4byte	.LFB19
 2824 017c 18000000 		.4byte	.LFE19
 2825 0180 00000000 		.4byte	.LFB20
 2826 0184 34000000 		.4byte	.LFE20
 2827 0188 00000000 		.4byte	.LFB21
 2828 018c 38000000 		.4byte	.LFE21
 2829 0190 00000000 		.4byte	.LFB22
 2830 0194 3C000000 		.4byte	.LFE22
 2831 0198 00000000 		.4byte	.LFB23
 2832 019c 1C000000 		.4byte	.LFE23
 2833 01a0 00000000 		.4byte	.LFB24
 2834 01a4 24000000 		.4byte	.LFE24
 2835 01a8 00000000 		.4byte	.LFB25
 2836 01ac 5C000000 		.4byte	.LFE25
 2837 01b0 00000000 		.4byte	.LFB26
 2838 01b4 02000000 		.4byte	.LFE26
 2839 01b8 00000000 		.4byte	0
 2840 01bc 00000000 		.4byte	0
 2841              		.section	.debug_line,"",%progbits
 2842              	.Ldebug_line0:
 2843 0000 53030000 		.section	.debug_str,"MS",%progbits,1
 2843      02006700 
 2843      00000201 
 2843      FB0E0D00 
 2843      01010101 
 2844              	.LASF10:
 2845 0000 75696E74 		.ascii	"uint16\000"
 2845      313600
 2846              	.LASF22:
 2847 0007 5250695F 		.ascii	"RPi_UART_Enable\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 80


 2847      55415254 
 2847      5F456E61 
 2847      626C6500 
 2848              	.LASF59:
 2849 0017 43794578 		.ascii	"CyExitCriticalSection\000"
 2849      69744372 
 2849      69746963 
 2849      616C5365 
 2849      6374696F 
 2850              	.LASF39:
 2851 002d 74784461 		.ascii	"txDataByte\000"
 2851      74614279 
 2851      746500
 2852              	.LASF42:
 2853 0038 5250695F 		.ascii	"RPi_UART_PutString\000"
 2853      55415254 
 2853      5F507574 
 2853      53747269 
 2853      6E6700
 2854              	.LASF55:
 2855 004b 5250695F 		.ascii	"RPi_UART_SetTxAddressMode\000"
 2855      55415254 
 2855      5F536574 
 2855      54784164 
 2855      64726573 
 2856              	.LASF19:
 2857 0065 5250695F 		.ascii	"RPi_UART_ReadRxStatus\000"
 2857      55415254 
 2857      5F526561 
 2857      64527853 
 2857      74617475 
 2858              	.LASF64:
 2859 007b 5250695F 		.ascii	"RPi_UART_Init\000"
 2859      55415254 
 2859      5F496E69 
 2859      7400
 2860              	.LASF7:
 2861 0089 6C6F6E67 		.ascii	"long long unsigned int\000"
 2861      206C6F6E 
 2861      6720756E 
 2861      7369676E 
 2861      65642069 
 2862              	.LASF6:
 2863 00a0 6C6F6E67 		.ascii	"long long int\000"
 2863      206C6F6E 
 2863      6720696E 
 2863      7400
 2864              	.LASF0:
 2865 00ae 7369676E 		.ascii	"signed char\000"
 2865      65642063 
 2865      68617200 
 2866              	.LASF53:
 2867 00ba 74785065 		.ascii	"txPeriod\000"
 2867      72696F64 
 2867      00
 2868              	.LASF62:
 2869 00c3 47656E65 		.ascii	"Generated_Source\\PSoC5\\RPi_UART.c\000"
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 81


 2869      72617465 
 2869      645F536F 
 2869      75726365 
 2869      5C50536F 
 2870              	.LASF4:
 2871 00e5 6C6F6E67 		.ascii	"long int\000"
 2871      20696E74 
 2871      00
 2872              	.LASF9:
 2873 00ee 75696E74 		.ascii	"uint8\000"
 2873      3800
 2874              	.LASF33:
 2875 00f4 5250695F 		.ascii	"RPi_UART_SetRxAddress1\000"
 2875      55415254 
 2875      5F536574 
 2875      52784164 
 2875      64726573 
 2876              	.LASF36:
 2877 010b 5250695F 		.ascii	"RPi_UART_SetRxAddress2\000"
 2877      55415254 
 2877      5F536574 
 2877      52784164 
 2877      64726573 
 2878              	.LASF12:
 2879 0122 646F7562 		.ascii	"double\000"
 2879      6C6500
 2880              	.LASF56:
 2881 0129 61646472 		.ascii	"addressMode\000"
 2881      6573734D 
 2881      6F646500 
 2882              	.LASF54:
 2883 0135 5250695F 		.ascii	"RPi_UART_PutChar\000"
 2883      55415254 
 2883      5F507574 
 2883      43686172 
 2883      00
 2884              	.LASF51:
 2885 0146 7265744D 		.ascii	"retMode\000"
 2885      6F646500 
 2886              	.LASF40:
 2887 014e 5250695F 		.ascii	"RPi_UART_ReadControlRegister\000"
 2887      55415254 
 2887      5F526561 
 2887      64436F6E 
 2887      74726F6C 
 2888              	.LASF8:
 2889 016b 756E7369 		.ascii	"unsigned int\000"
 2889      676E6564 
 2889      20696E74 
 2889      00
 2890              	.LASF32:
 2891 0178 5250695F 		.ascii	"RPi_UART_ClearRxBuffer\000"
 2891      55415254 
 2891      5F436C65 
 2891      61725278 
 2891      42756666 
 2892              	.LASF5:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 82


 2893 018f 6C6F6E67 		.ascii	"long unsigned int\000"
 2893      20756E73 
 2893      69676E65 
 2893      6420696E 
 2893      7400
 2894              	.LASF57:
 2895 01a1 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2895      74657243 
 2895      72697469 
 2895      63616C53 
 2895      65637469 
 2896              	.LASF31:
 2897 01b8 73697A65 		.ascii	"size\000"
 2897      00
 2898              	.LASF3:
 2899 01bd 73686F72 		.ascii	"short unsigned int\000"
 2899      7420756E 
 2899      7369676E 
 2899      65642069 
 2899      6E7400
 2900              	.LASF29:
 2901 01d0 5250695F 		.ascii	"RPi_UART_GetByte\000"
 2901      55415254 
 2901      5F476574 
 2901      42797465 
 2901      00
 2902              	.LASF47:
 2903 01e1 5250695F 		.ascii	"RPi_UART_PutCRLF\000"
 2903      55415254 
 2903      5F507574 
 2903      43524C46 
 2903      00
 2904              	.LASF44:
 2905 01f2 62756649 		.ascii	"bufIndex\000"
 2905      6E646578 
 2905      00
 2906              	.LASF38:
 2907 01fb 5250695F 		.ascii	"RPi_UART_WriteTxData\000"
 2907      55415254 
 2907      5F577269 
 2907      74655478 
 2907      44617461 
 2908              	.LASF48:
 2909 0210 5250695F 		.ascii	"RPi_UART_GetTxBufferSize\000"
 2909      55415254 
 2909      5F476574 
 2909      54784275 
 2909      66666572 
 2910              	.LASF34:
 2911 0229 696E7453 		.ascii	"intSrc\000"
 2911      726300
 2912              	.LASF58:
 2913 0230 5250695F 		.ascii	"RPi_UART_IntClock_Start\000"
 2913      55415254 
 2913      5F496E74 
 2913      436C6F63 
 2913      6B5F5374 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 83


 2914              	.LASF26:
 2915 0248 5250695F 		.ascii	"RPi_UART_SetRxInterruptMode\000"
 2915      55415254 
 2915      5F536574 
 2915      5278496E 
 2915      74657272 
 2916              	.LASF50:
 2917 0264 5250695F 		.ascii	"RPi_UART_SendBreak\000"
 2917      55415254 
 2917      5F53656E 
 2917      64427265 
 2917      616B00
 2918              	.LASF52:
 2919 0277 746D7053 		.ascii	"tmpStat\000"
 2919      74617400 
 2920              	.LASF17:
 2921 027f 73697A65 		.ascii	"sizetype\000"
 2921      74797065 
 2921      00
 2922              	.LASF16:
 2923 0288 6C6F6E67 		.ascii	"long double\000"
 2923      20646F75 
 2923      626C6500 
 2924              	.LASF35:
 2925 0294 61646472 		.ascii	"address\000"
 2925      65737300 
 2926              	.LASF27:
 2927 029c 72785374 		.ascii	"rxStatus\000"
 2927      61747573 
 2927      00
 2928              	.LASF45:
 2929 02a5 5250695F 		.ascii	"RPi_UART_PutArray\000"
 2929      55415254 
 2929      5F507574 
 2929      41727261 
 2929      7900
 2930              	.LASF11:
 2931 02b7 666C6F61 		.ascii	"float\000"
 2931      7400
 2932              	.LASF15:
 2933 02bd 72656738 		.ascii	"reg8\000"
 2933      00
 2934              	.LASF1:
 2935 02c2 756E7369 		.ascii	"unsigned char\000"
 2935      676E6564 
 2935      20636861 
 2935      7200
 2936              	.LASF2:
 2937 02d0 73686F72 		.ascii	"short int\000"
 2937      7420696E 
 2937      7400
 2938              	.LASF23:
 2939 02da 5250695F 		.ascii	"RPi_UART_Start\000"
 2939      55415254 
 2939      5F537461 
 2939      727400
 2940              	.LASF24:
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 84


 2941 02e9 5250695F 		.ascii	"RPi_UART_Stop\000"
 2941      55415254 
 2941      5F53746F 
 2941      7000
 2942              	.LASF60:
 2943 02f7 5250695F 		.ascii	"RPi_UART_IntClock_Stop\000"
 2943      55415254 
 2943      5F496E74 
 2943      436C6F63 
 2943      6B5F5374 
 2944              	.LASF46:
 2945 030e 62797465 		.ascii	"byteCount\000"
 2945      436F756E 
 2945      7400
 2946              	.LASF20:
 2947 0318 72784461 		.ascii	"rxData\000"
 2947      746100
 2948              	.LASF43:
 2949 031f 73747269 		.ascii	"string\000"
 2949      6E6700
 2950              	.LASF49:
 2951 0326 5250695F 		.ascii	"RPi_UART_ClearTxBuffer\000"
 2951      55415254 
 2951      5F436C65 
 2951      61725478 
 2951      42756666 
 2952              	.LASF41:
 2953 033d 5250695F 		.ascii	"RPi_UART_ReadTxStatus\000"
 2953      55415254 
 2953      5F526561 
 2953      64547853 
 2953      74617475 
 2954              	.LASF14:
 2955 0353 63686172 		.ascii	"char\000"
 2955      00
 2956              	.LASF13:
 2957 0358 63686172 		.ascii	"char8\000"
 2957      3800
 2958              	.LASF63:
 2959 035e 433A5C55 		.ascii	"C:\\Users\\jon\\Sync\\Research\\PSoC Projects\\Cont"
 2959      73657273 
 2959      5C6A6F6E 
 2959      5C53796E 
 2959      635C5265 
 2960 038b 726F6C6C 		.ascii	"roller.cydsn\000"
 2960      65722E63 
 2960      7964736E 
 2960      00
 2961              	.LASF18:
 2962 0398 5250695F 		.ascii	"RPi_UART_ReadRxData\000"
 2962      55415254 
 2962      5F526561 
 2962      64527844 
 2962      61746100 
 2963              	.LASF25:
 2964 03ac 656E6162 		.ascii	"enableInterrupts\000"
 2964      6C65496E 
ARM GAS  C:\Users\jon\AppData\Local\Temp\ccORo9pn.s 			page 85


 2964      74657272 
 2964      75707473 
 2964      00
 2965              	.LASF21:
 2966 03bd 73746174 		.ascii	"status\000"
 2966      757300
 2967              	.LASF37:
 2968 03c4 5250695F 		.ascii	"RPi_UART_SetTxInterruptMode\000"
 2968      55415254 
 2968      5F536574 
 2968      5478496E 
 2968      74657272 
 2969              	.LASF65:
 2970 03e0 5250695F 		.ascii	"RPi_UART_initVar\000"
 2970      55415254 
 2970      5F696E69 
 2970      74566172 
 2970      00
 2971              	.LASF28:
 2972 03f1 5250695F 		.ascii	"RPi_UART_GetChar\000"
 2972      55415254 
 2972      5F476574 
 2972      43686172 
 2972      00
 2973              	.LASF30:
 2974 0402 5250695F 		.ascii	"RPi_UART_GetRxBufferSize\000"
 2974      55415254 
 2974      5F476574 
 2974      52784275 
 2974      66666572 
 2975              	.LASF61:
 2976 041b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2976      43313120 
 2976      352E342E 
 2976      31203230 
 2976      31363036 
 2977 044e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2977      20726576 
 2977      6973696F 
 2977      6E203233 
 2977      37373135 
 2978 0481 32202D66 		.ascii	"2 -ffunction-sections -ffat-lto-objects\000"
 2978      66756E63 
 2978      74696F6E 
 2978      2D736563 
 2978      74696F6E 
 2979              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
