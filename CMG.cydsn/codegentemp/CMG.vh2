--
--	Conversion of CMG.v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Wed Jan 23 15:07:34 2019
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL \PWM_CMG:PWMUDB:km_run\ : bit;
SIGNAL \PWM_CMG:PWMUDB:min_kill_reg\ : bit;
SIGNAL Net_32 : bit;
SIGNAL one : bit;
SIGNAL \PWM_CMG:PWMUDB:ClockOutFromEnBlock\ : bit;
SIGNAL zero : bit;
SIGNAL \PWM_CMG:PWMUDB:control_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:control_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_enable\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_cmpmode2_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_cmpmode2_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_cmpmode2_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_cmpmode1_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_cmpmode1_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ctrl_cmpmode1_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:prevCapture\ : bit;
SIGNAL \PWM_CMG:PWMUDB:capt_rising\ : bit;
SIGNAL \PWM_CMG:PWMUDB:capt_falling\ : bit;
SIGNAL \PWM_CMG:PWMUDB:hwCapture\ : bit;
SIGNAL \PWM_CMG:PWMUDB:hwEnable\ : bit;
SIGNAL \PWM_CMG:PWMUDB:trig_last\ : bit;
SIGNAL \PWM_CMG:PWMUDB:trig_rise\ : bit;
SIGNAL \PWM_CMG:PWMUDB:trig_fall\ : bit;
SIGNAL \PWM_CMG:PWMUDB:trig_out\ : bit;
SIGNAL \PWM_CMG:PWMUDB:runmode_enable\ : bit;
SIGNAL \PWM_CMG:PWMUDB:runmode_enable\\R\ : bit;
SIGNAL Net_166 : bit;
SIGNAL \PWM_CMG:PWMUDB:runmode_enable\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_enable\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sc_kill_tmp\ : bit;
SIGNAL \PWM_CMG:PWMUDB:tc_i\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ltch_kill_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ltch_kill_reg\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ltch_kill_reg\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:min_kill_reg\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:min_kill_reg\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sc_kill\ : bit;
SIGNAL \PWM_CMG:PWMUDB:min_kill\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_kill\ : bit;
SIGNAL \PWM_CMG:PWMUDB:km_tc\ : bit;
SIGNAL \PWM_CMG:PWMUDB:db_tc\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_1\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_1\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_0\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_0\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_sel\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:status_0\ : bit;
SIGNAL \PWM_CMG:Net_55\ : bit;
SIGNAL \PWM_CMG:PWMUDB:prevCompare1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_status\ : bit;
SIGNAL \PWM_CMG:PWMUDB:prevCompare2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2_status\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_status_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2_status_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_kill_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_status_reg\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_status_reg\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2_status_reg\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2_status_reg\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_kill_reg\\R\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_kill_reg\\S\ : bit;
SIGNAL \PWM_CMG:PWMUDB:fifo_full\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cs_addr_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cs_addr_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cs_addr_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_capture\ : bit;
SIGNAL \PWM_CMG:PWMUDB:nc2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:nc3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:nc1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:nc4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:nc5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:z1_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:z1_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:so_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:so_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:nc6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:nc7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:so_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:carry\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:sh_right\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:sh_left\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:msb\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_eq_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_eq_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_lt_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_lt_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_zero_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_zero_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_ff_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_ff_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cap_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cap_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cfb\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_eq\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_less\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:cmp2_eq\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2_less\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:z1_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:z1_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:so_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:so_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:fifo_nempty\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:so_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_CMG:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_CMG:PWMUDB:compare1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:compare2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm_i_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm_i\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm1_i_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm1_i\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm2_i_reg\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm2_i\ : bit;
SIGNAL \PWM_CMG:PWMUDB:tc_i_reg\ : bit;
SIGNAL \PWM_CMG:Net_101\ : bit;
SIGNAL \PWM_CMG:Net_96\ : bit;
SIGNAL Net_88 : bit;
SIGNAL Net_89 : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm_temp\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_31\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_30\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_29\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_28\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_27\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_26\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_25\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_23\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_22\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_21\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_20\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_19\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_18\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_17\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_15\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_14\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_13\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_12\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_11\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_10\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_9\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:b_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_31\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_30\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_29\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_28\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_27\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_26\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_25\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_23\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_22\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_21\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_20\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_19\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_18\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_17\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_15\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_14\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_13\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_12\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_11\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_10\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_9\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODIN1_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:a_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODIN1_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_31\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_30\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_29\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_28\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_27\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_26\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_25\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_23\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_22\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_21\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_20\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_19\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_18\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_17\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_15\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_14\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_13\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_12\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_11\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_10\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_9\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:b_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_31\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_31\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_30\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_30\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_29\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_29\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_28\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_28\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_27\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_27\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_26\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_26\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_25\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_25\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_23\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_23\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_22\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_22\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_21\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_21\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_20\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_20\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_19\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_19\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_18\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_18\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_17\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_17\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_15\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_15\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_14\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_14\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_13\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_13\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_12\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_12\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_11\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_11\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_10\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_10\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_9\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_9\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:add_vi_vv_MODGEN_1_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:s_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL Net_96 : bit;
SIGNAL Net_90 : bit;
SIGNAL Net_87 : bit;
SIGNAL \PWM_CMG:Net_113\ : bit;
SIGNAL \PWM_CMG:Net_107\ : bit;
SIGNAL \PWM_CMG:Net_114\ : bit;
SIGNAL tmpOE__flywheel_motor_net_0 : bit;
SIGNAL tmpFB_0__flywheel_motor_net_0 : bit;
SIGNAL tmpIO_0__flywheel_motor_net_0 : bit;
TERMINAL tmpSIOVREF__flywheel_motor_net_0 : bit;
SIGNAL tmpINTERRUPT_0__flywheel_motor_net_0 : bit;
SIGNAL tmpOE__gimbal_motor_net_0 : bit;
SIGNAL tmpFB_0__gimbal_motor_net_0 : bit;
SIGNAL tmpIO_0__gimbal_motor_net_0 : bit;
TERMINAL tmpSIOVREF__gimbal_motor_net_0 : bit;
SIGNAL tmpINTERRUPT_0__gimbal_motor_net_0 : bit;
SIGNAL tmpOE__gimbal_direction_net_0 : bit;
SIGNAL tmpFB_0__gimbal_direction_net_0 : bit;
SIGNAL tmpIO_0__gimbal_direction_net_0 : bit;
TERMINAL tmpSIOVREF__gimbal_direction_net_0 : bit;
SIGNAL tmpINTERRUPT_0__gimbal_direction_net_0 : bit;
SIGNAL Net_118 : bit;
SIGNAL \UART:Net_9\ : bit;
SIGNAL \UART:Net_61\ : bit;
SIGNAL \UART:BUART:clock_op\ : bit;
SIGNAL \UART:BUART:reset_reg\ : bit;
SIGNAL Net_117 : bit;
SIGNAL \UART:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART:BUART:FinalParityType_1\ : bit;
SIGNAL \UART:BUART:FinalParityType_0\ : bit;
SIGNAL \UART:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART:BUART:reset_sr\ : bit;
SIGNAL \UART:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_183 : bit;
SIGNAL \UART:BUART:txn\ : bit;
SIGNAL \UART:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_189 : bit;
SIGNAL \UART:BUART:rx_interrupt_out\ : bit;
SIGNAL \UART:BUART:tx_state_1\ : bit;
SIGNAL \UART:BUART:tx_state_0\ : bit;
SIGNAL \UART:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART:BUART:tx_shift_out\ : bit;
SIGNAL \UART:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:counter_load_not\ : bit;
SIGNAL \UART:BUART:tx_state_2\ : bit;
SIGNAL \UART:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART:BUART:tx_counter_dp\ : bit;
SIGNAL \UART:BUART:sc_out_7\ : bit;
SIGNAL \UART:BUART:sc_out_6\ : bit;
SIGNAL \UART:BUART:sc_out_5\ : bit;
SIGNAL \UART:BUART:sc_out_4\ : bit;
SIGNAL \UART:BUART:sc_out_3\ : bit;
SIGNAL \UART:BUART:sc_out_2\ : bit;
SIGNAL \UART:BUART:sc_out_1\ : bit;
SIGNAL \UART:BUART:sc_out_0\ : bit;
SIGNAL \UART:BUART:tx_counter_tc\ : bit;
SIGNAL \UART:BUART:tx_status_6\ : bit;
SIGNAL \UART:BUART:tx_status_5\ : bit;
SIGNAL \UART:BUART:tx_status_4\ : bit;
SIGNAL \UART:BUART:tx_status_0\ : bit;
SIGNAL \UART:BUART:tx_status_1\ : bit;
SIGNAL \UART:BUART:tx_status_2\ : bit;
SIGNAL \UART:BUART:tx_status_3\ : bit;
SIGNAL Net_115 : bit;
SIGNAL \UART:BUART:tx_bitclk\ : bit;
SIGNAL \UART:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART:BUART:tx_mark\ : bit;
SIGNAL \UART:BUART:tx_parity_bit\ : bit;
SIGNAL \UART:BUART:rx_addressmatch\ : bit;
SIGNAL \UART:BUART:rx_addressmatch1\ : bit;
SIGNAL \UART:BUART:rx_addressmatch2\ : bit;
SIGNAL \UART:BUART:rx_state_1\ : bit;
SIGNAL \UART:BUART:rx_state_0\ : bit;
SIGNAL \UART:BUART:rx_bitclk_enable\ : bit;
SIGNAL \UART:BUART:rx_postpoll\ : bit;
SIGNAL \UART:BUART:rx_load_fifo\ : bit;
SIGNAL \UART:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART:BUART:hd_shift_out\ : bit;
SIGNAL \UART:BUART:rx_fifonotempty\ : bit;
SIGNAL \UART:BUART:rx_fifofull\ : bit;
SIGNAL \UART:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \UART:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \UART:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART:BUART:rx_counter_load\ : bit;
SIGNAL \UART:BUART:rx_state_3\ : bit;
SIGNAL \UART:BUART:rx_state_2\ : bit;
SIGNAL \UART:BUART:rx_bitclk_pre\ : bit;
SIGNAL \UART:BUART:rx_count_2\ : bit;
SIGNAL \UART:BUART:rx_count_1\ : bit;
SIGNAL \UART:BUART:rx_count_0\ : bit;
SIGNAL \UART:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \UART:BUART:rx_count_6\ : bit;
SIGNAL \UART:BUART:rx_count_5\ : bit;
SIGNAL \UART:BUART:rx_count_4\ : bit;
SIGNAL \UART:BUART:rx_count_3\ : bit;
SIGNAL \UART:BUART:rx_count7_tc\ : bit;
SIGNAL \UART:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \UART:BUART:rx_bitclk\ : bit;
SIGNAL \UART:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \UART:BUART:rx_poll_bit1\ : bit;
SIGNAL \UART:BUART:rx_poll_bit2\ : bit;
SIGNAL \UART:BUART:pollingrange\ : bit;
SIGNAL \UART:BUART:pollcount_1\ : bit;
SIGNAL Net_188 : bit;
SIGNAL \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\ : bit;
SIGNAL \UART:BUART:pollcount_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODIN2_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODIN2_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODIN3_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODIN3_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODIN4_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODIN4_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ : bit;
SIGNAL \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\ : bit;
SIGNAL \UART:BUART:rx_status_0\ : bit;
SIGNAL \UART:BUART:rx_markspace_status\ : bit;
SIGNAL \UART:BUART:rx_status_1\ : bit;
SIGNAL \UART:BUART:rx_status_2\ : bit;
SIGNAL \UART:BUART:rx_parity_error_status\ : bit;
SIGNAL \UART:BUART:rx_status_3\ : bit;
SIGNAL \UART:BUART:rx_stop_bit_error\ : bit;
SIGNAL \UART:BUART:rx_status_4\ : bit;
SIGNAL \UART:BUART:rx_status_5\ : bit;
SIGNAL \UART:BUART:rx_status_6\ : bit;
SIGNAL \UART:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_114 : bit;
SIGNAL \UART:BUART:rx_markspace_pre\ : bit;
SIGNAL \UART:BUART:rx_parity_error_pre\ : bit;
SIGNAL \UART:BUART:rx_break_status\ : bit;
SIGNAL \UART:BUART:sRX:cmp_vv_vv_MODGEN_5\ : bit;
SIGNAL \UART:BUART:rx_address_detected\ : bit;
SIGNAL \UART:BUART:rx_last\ : bit;
SIGNAL \UART:BUART:rx_parity_bit\ : bit;
SIGNAL \UART:BUART:sRX:cmp_vv_vv_MODGEN_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_3\ : bit;
SIGNAL \UART:BUART:sRX:MODIN5_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_2\ : bit;
SIGNAL \UART:BUART:sRX:MODIN5_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_1\ : bit;
SIGNAL \UART:BUART:sRX:MODIN5_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newa_0\ : bit;
SIGNAL \UART:BUART:sRX:MODIN5_3\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_3\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_2\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:dataa_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_3\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_2\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:datab_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_6\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_5\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_4\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_3\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_3\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_2\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_2\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:lta_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_5:g2:a0:gta_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:newa_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:newb_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:dataa_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:datab_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:xeq\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:xneq\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:xlt\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:xlte\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:xgt\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:g1:a0:xgte\ : bit;
SIGNAL \UART:BUART:sRX:MODULE_6:lt\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:MODULE_6:lt\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:MODULE_6:eq\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:MODULE_6:eq\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:MODULE_6:gt\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:MODULE_6:gt\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:MODULE_6:gte\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:MODULE_6:gte\:SIGNAL IS 2;
SIGNAL \UART:BUART:sRX:MODULE_6:lte\ : bit;
ATTRIBUTE port_state_att of \UART:BUART:sRX:MODULE_6:lte\:SIGNAL IS 2;
SIGNAL tmpOE__Rx_RPi_net_0 : bit;
SIGNAL tmpIO_0__Rx_RPi_net_0 : bit;
TERMINAL tmpSIOVREF__Rx_RPi_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Rx_RPi_net_0 : bit;
SIGNAL tmpOE__Tx_RPi_net_0 : bit;
SIGNAL tmpFB_0__Tx_RPi_net_0 : bit;
SIGNAL tmpIO_0__Tx_RPi_net_0 : bit;
TERMINAL Net_224 : bit;
SIGNAL tmpINTERRUPT_0__Tx_RPi_net_0 : bit;
SIGNAL \VDAC8_1:Net_83\ : bit;
SIGNAL \VDAC8_1:Net_81\ : bit;
SIGNAL \VDAC8_1:Net_82\ : bit;
TERMINAL \VDAC8_1:Net_77\ : bit;
SIGNAL Net_135 : bit;
SIGNAL Net_128 : bit;
SIGNAL \Gimbal_Timer:Net_260\ : bit;
SIGNAL \Gimbal_Timer:Net_266\ : bit;
SIGNAL \Gimbal_Timer:Net_51\ : bit;
SIGNAL \Gimbal_Timer:Net_261\ : bit;
SIGNAL \Gimbal_Timer:Net_57\ : bit;
SIGNAL Net_129 : bit;
SIGNAL Net_134 : bit;
SIGNAL \Gimbal_Timer:Net_102\ : bit;
SIGNAL tmpOE__Gimbal_Encoder_A_net_0 : bit;
SIGNAL Net_223 : bit;
SIGNAL tmpIO_0__Gimbal_Encoder_A_net_0 : bit;
TERMINAL tmpSIOVREF__Gimbal_Encoder_A_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Gimbal_Encoder_A_net_0 : bit;
SIGNAL tmpOE__SW1_net_0 : bit;
SIGNAL tmpFB_0__SW1_net_0 : bit;
SIGNAL tmpIO_0__SW1_net_0 : bit;
TERMINAL tmpSIOVREF__SW1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__SW1_net_0 : bit;
SIGNAL tmpOE__LED1_net_0 : bit;
SIGNAL tmpFB_0__LED1_net_0 : bit;
SIGNAL tmpIO_0__LED1_net_0 : bit;
TERMINAL tmpSIOVREF__LED1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__LED1_net_0 : bit;
SIGNAL \Gimbal_Encoder:Net_1129\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_43\ : bit;
SIGNAL \Gimbal_Encoder:Net_1275\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_49\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_82\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_89\ : bit;
SIGNAL \Gimbal_Encoder:Net_1251\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_95\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_91\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:Net_102\ : bit;
SIGNAL Net_227 : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ctrl_cmod_2\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ctrl_cmod_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ctrl_cmod_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ctrl_capmode_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ctrl_capmode_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:Clk_Ctl_i\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_7\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_6\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_5\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_4\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_3\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_2\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:control_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:ctrl_enable\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:prevCapture\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:capt_rising\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:capt_falling\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:capt_either_edge\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:hwCapture\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:reload\ : bit;
SIGNAL \Gimbal_Encoder:Net_1260\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:reload_tc\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:final_enable\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:counter_enable\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_status\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:per_zero\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_2\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:overflow_status\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_3\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:underflow_status\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_4\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_5\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:fifo_full\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:status_6\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:fifo_nempty\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:overflow\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:per_FF\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:underflow\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:overflow_reg_i\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:underflow_reg_i\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:tc_i\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:tc_reg_i\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_i\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cmp_equal\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:prevCompare\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_reg_i\ : bit;
SIGNAL \Gimbal_Encoder:Net_1264\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:count_stored_i\ : bit;
SIGNAL \Gimbal_Encoder:Net_1203\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:count_enable\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:dp_dir\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cs_addr_2\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cs_addr_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cs_addr_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc16\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc17\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc10\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc2\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc3\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc30\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc31\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:carry\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_right\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_left\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:msb\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_1\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_0\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cfb\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:per_equal\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:nc43\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cmp_less\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Gimbal_Encoder:Net_1290\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:sync_clock\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_A_delayed_0\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_A_delayed_1\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_A_delayed_2\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:A_j\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:A_k\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_A_filt\ : bit;
SIGNAL Net_225 : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_B_delayed_0\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_B_delayed_1\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_B_delayed_2\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:B_j\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:B_k\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_B_filt\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:index_filt\ : bit;
SIGNAL \Gimbal_Encoder:Net_1232\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_2\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:error\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_3\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_1\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_0\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_0\ : bit;
SIGNAL \Gimbal_Encoder:Net_530\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_1\ : bit;
SIGNAL \Gimbal_Encoder:Net_611\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_2\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_3\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_4\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_5\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:status_6\ : bit;
SIGNAL Net_228 : bit;
SIGNAL \Gimbal_Encoder:Net_1151\ : bit;
SIGNAL \Gimbal_Encoder:Net_1248\ : bit;
SIGNAL \Gimbal_Encoder:Net_1229\ : bit;
SIGNAL \Gimbal_Encoder:Net_1272\ : bit;
SIGNAL \Gimbal_Encoder:Net_1287\ : bit;
SIGNAL tmpOE__Gimbal_Encoder_B_net_0 : bit;
SIGNAL tmpIO_0__Gimbal_Encoder_B_net_0 : bit;
TERMINAL tmpSIOVREF__Gimbal_Encoder_B_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Gimbal_Encoder_B_net_0 : bit;
SIGNAL \Handle_Encoder:Net_1129\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_43\ : bit;
SIGNAL \Handle_Encoder:Net_1275\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_49\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_82\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_89\ : bit;
SIGNAL \Handle_Encoder:Net_1251\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_95\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_91\ : bit;
SIGNAL \Handle_Encoder:Cnt16:Net_102\ : bit;
SIGNAL Net_42 : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ctrl_cmod_2\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ctrl_cmod_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ctrl_cmod_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ctrl_capmode_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ctrl_capmode_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:Clk_Ctl_i\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_7\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_6\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_5\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_4\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_3\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_2\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:control_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:ctrl_enable\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:prevCapture\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:capt_rising\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:capt_falling\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:capt_either_edge\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:hwCapture\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:reload\ : bit;
SIGNAL \Handle_Encoder:Net_1260\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:reload_tc\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:final_enable\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:counter_enable\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cmp_out_status\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:per_zero\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_2\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:overflow_status\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_3\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:underflow_status\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_4\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_5\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:fifo_full\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:status_6\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:fifo_nempty\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:overflow\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:per_FF\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:underflow\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:overflow_reg_i\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:underflow_reg_i\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:tc_i\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:tc_reg_i\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cmp_out_i\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cmp_equal\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:prevCompare\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cmp_out_reg_i\ : bit;
SIGNAL \Handle_Encoder:Net_1264\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:count_stored_i\ : bit;
SIGNAL \Handle_Encoder:Net_1203\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:count_enable\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:dp_dir\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cs_addr_2\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cs_addr_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cs_addr_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc16\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc17\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc10\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc2\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc3\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc30\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc31\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:carry\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_right\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_left\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:msb\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_1\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_0\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cfb\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:per_equal\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:nc43\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cmp_less\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:so_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Handle_Encoder:Net_1290\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:sync_clock\ : bit;
SIGNAL Net_262 : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_A_delayed_0\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_A_delayed_1\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_A_delayed_2\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:A_j\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:A_k\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_A_filt\ : bit;
SIGNAL Net_263 : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_B_delayed_0\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_B_delayed_1\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_B_delayed_2\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:B_j\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:B_k\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_B_filt\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:index_filt\ : bit;
SIGNAL \Handle_Encoder:Net_1232\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_2\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:error\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_3\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_1\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_0\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_0\ : bit;
SIGNAL \Handle_Encoder:Net_530\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_1\ : bit;
SIGNAL \Handle_Encoder:Net_611\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_2\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_3\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_4\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_5\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:status_6\ : bit;
SIGNAL Net_265 : bit;
SIGNAL \Handle_Encoder:Net_1151\ : bit;
SIGNAL \Handle_Encoder:Net_1248\ : bit;
SIGNAL \Handle_Encoder:Net_1229\ : bit;
SIGNAL \Handle_Encoder:Net_1272\ : bit;
SIGNAL \Handle_Encoder:Net_1287\ : bit;
SIGNAL tmpOE__Handle_Encoder_A_net_0 : bit;
SIGNAL tmpIO_0__Handle_Encoder_A_net_0 : bit;
TERMINAL tmpSIOVREF__Handle_Encoder_A_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Handle_Encoder_A_net_0 : bit;
SIGNAL tmpOE__Handle_Encoder_B_net_0 : bit;
SIGNAL tmpIO_0__Handle_Encoder_B_net_0 : bit;
TERMINAL tmpSIOVREF__Handle_Encoder_B_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Handle_Encoder_B_net_0 : bit;
SIGNAL Net_293 : bit;
SIGNAL \Steering_Timer:Net_260\ : bit;
SIGNAL \Steering_Timer:Net_266\ : bit;
SIGNAL Net_291 : bit;
SIGNAL \Steering_Timer:Net_51\ : bit;
SIGNAL \Steering_Timer:Net_261\ : bit;
SIGNAL \Steering_Timer:Net_57\ : bit;
SIGNAL Net_276 : bit;
SIGNAL Net_275 : bit;
SIGNAL \Steering_Timer:Net_102\ : bit;
SIGNAL tmpOE__Steering_PWM_net_0 : bit;
SIGNAL Net_311 : bit;
SIGNAL tmpFB_0__Steering_PWM_net_0 : bit;
SIGNAL tmpIO_0__Steering_PWM_net_0 : bit;
TERMINAL tmpSIOVREF__Steering_PWM_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Steering_PWM_net_0 : bit;
SIGNAL tmpOE__Steering_Dir_net_0 : bit;
SIGNAL tmpFB_0__Steering_Dir_net_0 : bit;
SIGNAL tmpIO_0__Steering_Dir_net_0 : bit;
TERMINAL tmpSIOVREF__Steering_Dir_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Steering_Dir_net_0 : bit;
SIGNAL \PWM_Steer:PWMUDB:km_run\ : bit;
SIGNAL \PWM_Steer:PWMUDB:min_kill_reg\ : bit;
SIGNAL Net_325 : bit;
SIGNAL \PWM_Steer:PWMUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:control_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_enable\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_cmpmode2_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_cmpmode2_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_cmpmode2_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_cmpmode1_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_cmpmode1_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ctrl_cmpmode1_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:prevCapture\ : bit;
SIGNAL \PWM_Steer:PWMUDB:capt_rising\ : bit;
SIGNAL \PWM_Steer:PWMUDB:capt_falling\ : bit;
SIGNAL \PWM_Steer:PWMUDB:hwCapture\ : bit;
SIGNAL \PWM_Steer:PWMUDB:hwEnable\ : bit;
SIGNAL \PWM_Steer:PWMUDB:trig_last\ : bit;
SIGNAL \PWM_Steer:PWMUDB:trig_rise\ : bit;
SIGNAL \PWM_Steer:PWMUDB:trig_fall\ : bit;
SIGNAL \PWM_Steer:PWMUDB:trig_out\ : bit;
SIGNAL \PWM_Steer:PWMUDB:runmode_enable\ : bit;
SIGNAL \PWM_Steer:PWMUDB:runmode_enable\\R\ : bit;
SIGNAL Net_312 : bit;
SIGNAL \PWM_Steer:PWMUDB:runmode_enable\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_enable\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sc_kill_tmp\ : bit;
SIGNAL \PWM_Steer:PWMUDB:tc_i\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ltch_kill_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ltch_kill_reg\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ltch_kill_reg\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:min_kill_reg\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:min_kill_reg\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sc_kill\ : bit;
SIGNAL \PWM_Steer:PWMUDB:min_kill\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_kill\ : bit;
SIGNAL \PWM_Steer:PWMUDB:km_tc\ : bit;
SIGNAL \PWM_Steer:PWMUDB:db_tc\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_1\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_1\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_0\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_0\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_sel\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:status_0\ : bit;
SIGNAL \PWM_Steer:Net_55\ : bit;
SIGNAL \PWM_Steer:PWMUDB:prevCompare1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_status\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2_status\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_status_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2_status_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_kill_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_status_reg\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_status_reg\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2_status_reg\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2_status_reg\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_kill_reg\\R\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_kill_reg\\S\ : bit;
SIGNAL \PWM_Steer:PWMUDB:fifo_full\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cs_addr_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cs_addr_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cs_addr_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_capture\ : bit;
SIGNAL \PWM_Steer:PWMUDB:nc2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:nc3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:nc1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:nc4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:nc5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:z1_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:z1_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:so_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:so_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:nc6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:nc7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:so_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:carry\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:sh_right\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:sh_left\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:msb\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_eq_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_eq_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_lt_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_lt_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_zero_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_zero_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_ff_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_ff_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cap_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cap_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cfb\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_eq\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_less\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:cmp2_eq\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2_less\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:z1_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:z1_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:so_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:so_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:fifo_nempty\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:so_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \PWM_Steer:PWMUDB:sP16:pwmdp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \PWM_Steer:PWMUDB:compare1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:compare2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm_i_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm_i\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm1_i_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm1_i\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm2_i_reg\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm2_i\ : bit;
SIGNAL \PWM_Steer:PWMUDB:tc_i_reg\ : bit;
SIGNAL \PWM_Steer:Net_101\ : bit;
SIGNAL \PWM_Steer:Net_96\ : bit;
SIGNAL Net_994 : bit;
SIGNAL Net_995 : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm_temp\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_31\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_30\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_29\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_28\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_27\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_26\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_25\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_23\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_22\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_21\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_20\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_19\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_18\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_17\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_15\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_14\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_13\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_12\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_11\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_10\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_9\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:b_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_31\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_30\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_29\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_28\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_27\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_26\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_25\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_23\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_22\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_21\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_20\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_19\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_18\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_17\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_15\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_14\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_13\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_12\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_11\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_10\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_9\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODIN6_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:a_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODIN6_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_31\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_30\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_29\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_28\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_27\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_26\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_25\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_23\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_22\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_21\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_20\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_19\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_18\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_17\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_15\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_14\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_13\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_12\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_11\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_10\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_9\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:b_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_31\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_31\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_30\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_30\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_29\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_29\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_28\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_28\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_27\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_27\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_26\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_26\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_25\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_25\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_23\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_23\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_22\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_22\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_21\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_21\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_20\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_20\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_19\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_19\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_18\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_18\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_17\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_17\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_15\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_15\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_14\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_14\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_13\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_13\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_12\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_12\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_11\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_11\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_10\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_10\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_9\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_9\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:add_vi_vv_MODGEN_7_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:s_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL Net_996 : bit;
SIGNAL Net_993 : bit;
SIGNAL \PWM_Steer:Net_113\ : bit;
SIGNAL \PWM_Steer:Net_107\ : bit;
SIGNAL \PWM_Steer:Net_114\ : bit;
SIGNAL \PWM_CMG:PWMUDB:min_kill_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:prevCapture\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:trig_last\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:runmode_enable\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:sc_kill_tmp\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:ltch_kill_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_1\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:dith_count_0\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:prevCompare1\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:prevCompare2\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp1_status_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:cmp2_status_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:final_kill_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm_i_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm1_i_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:pwm2_i_reg\\D\ : bit;
SIGNAL \PWM_CMG:PWMUDB:tc_i_reg\\D\ : bit;
SIGNAL \UART:BUART:reset_reg\\D\ : bit;
SIGNAL \UART:BUART:txn\\D\ : bit;
SIGNAL \UART:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_115D : bit;
SIGNAL \UART:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART:BUART:tx_mark\\D\ : bit;
SIGNAL \UART:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \UART:BUART:rx_state_1\\D\ : bit;
SIGNAL \UART:BUART:rx_state_0\\D\ : bit;
SIGNAL \UART:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \UART:BUART:rx_state_3\\D\ : bit;
SIGNAL \UART:BUART:rx_state_2\\D\ : bit;
SIGNAL \UART:BUART:rx_bitclk\\D\ : bit;
SIGNAL \UART:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \UART:BUART:pollcount_1\\D\ : bit;
SIGNAL \UART:BUART:pollcount_0\\D\ : bit;
SIGNAL \UART:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \UART:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \UART:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \UART:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \UART:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \UART:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \UART:BUART:rx_break_status\\D\ : bit;
SIGNAL \UART:BUART:rx_address_detected\\D\ : bit;
SIGNAL \UART:BUART:rx_last\\D\ : bit;
SIGNAL \UART:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Gimbal_Encoder:Net_1251\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:prevCapture\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:overflow_reg_i\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:underflow_reg_i\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:tc_reg_i\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:prevCompare\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_reg_i\\D\ : bit;
SIGNAL \Gimbal_Encoder:Cnt16:CounterUDB:count_stored_i\\D\ : bit;
SIGNAL \Gimbal_Encoder:Net_1203\\D\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_A_filt\\D\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:quad_B_filt\\D\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_2\\D\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_3\\D\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_1\\D\ : bit;
SIGNAL \Gimbal_Encoder:bQuadDec:state_0\\D\ : bit;
SIGNAL \Handle_Encoder:Net_1251\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:prevCapture\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:overflow_reg_i\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:underflow_reg_i\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:tc_reg_i\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:prevCompare\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:cmp_out_reg_i\\D\ : bit;
SIGNAL \Handle_Encoder:Cnt16:CounterUDB:count_stored_i\\D\ : bit;
SIGNAL \Handle_Encoder:Net_1203\\D\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_A_filt\\D\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:quad_B_filt\\D\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_2\\D\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_3\\D\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_1\\D\ : bit;
SIGNAL \Handle_Encoder:bQuadDec:state_0\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:min_kill_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:prevCapture\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:trig_last\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:runmode_enable\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:sc_kill_tmp\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:ltch_kill_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_1\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:dith_count_0\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:prevCompare1\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp1_status_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:cmp2_status_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:final_kill_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm_i_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm1_i_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:pwm2_i_reg\\D\ : bit;
SIGNAL \PWM_Steer:PWMUDB:tc_i_reg\\D\ : bit;
BEGIN

one <=  ('1') ;

zero <=  ('0') ;

\PWM_CMG:PWMUDB:sc_kill_tmp\\D\ <= (not \PWM_CMG:PWMUDB:tc_i\);

\PWM_CMG:PWMUDB:dith_count_1\\D\ <= ((not \PWM_CMG:PWMUDB:dith_count_1\ and \PWM_CMG:PWMUDB:tc_i\ and \PWM_CMG:PWMUDB:dith_count_0\)
	OR (not \PWM_CMG:PWMUDB:dith_count_0\ and \PWM_CMG:PWMUDB:dith_count_1\)
	OR (not \PWM_CMG:PWMUDB:tc_i\ and \PWM_CMG:PWMUDB:dith_count_1\));

\PWM_CMG:PWMUDB:dith_count_0\\D\ <= ((not \PWM_CMG:PWMUDB:dith_count_0\ and \PWM_CMG:PWMUDB:tc_i\)
	OR (not \PWM_CMG:PWMUDB:tc_i\ and \PWM_CMG:PWMUDB:dith_count_0\));

\PWM_CMG:PWMUDB:cmp1_status\ <= ((not \PWM_CMG:PWMUDB:prevCompare1\ and \PWM_CMG:PWMUDB:cmp1_less\));

\PWM_CMG:PWMUDB:cmp2_status\ <= ((not \PWM_CMG:PWMUDB:prevCompare2\ and \PWM_CMG:PWMUDB:cmp2_less\));

\PWM_CMG:PWMUDB:status_2\ <= ((\PWM_CMG:PWMUDB:runmode_enable\ and \PWM_CMG:PWMUDB:tc_i\));

\PWM_CMG:PWMUDB:pwm1_i\ <= ((\PWM_CMG:PWMUDB:runmode_enable\ and \PWM_CMG:PWMUDB:cmp1_less\));

\PWM_CMG:PWMUDB:pwm2_i\ <= ((\PWM_CMG:PWMUDB:runmode_enable\ and \PWM_CMG:PWMUDB:cmp2_less\));

Net_183 <= (not \UART:BUART:txn\);

\UART:BUART:counter_load_not\ <= ((not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_2\)
	OR \UART:BUART:tx_state_0\
	OR \UART:BUART:tx_state_1\);

\UART:BUART:tx_status_0\ <= ((not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_fifo_empty\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_status_2\ <= (not \UART:BUART:tx_fifo_notfull\);

Net_115D <= ((not \UART:BUART:reset_reg\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:tx_state_1\));

\UART:BUART:tx_bitclk\\D\ <= ((not \UART:BUART:tx_state_2\ and \UART:BUART:tx_bitclk_enable_pre\)
	OR (\UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk_enable_pre\)
	OR (\UART:BUART:tx_state_1\ and \UART:BUART:tx_bitclk_enable_pre\));

\UART:BUART:tx_mark\\D\ <= ((not \UART:BUART:reset_reg\ and \UART:BUART:tx_mark\));

\UART:BUART:tx_state_2\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_counter_dp\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_state_1\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:tx_state_1\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and not \UART:BUART:tx_counter_dp\ and \UART:BUART:tx_state_1\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_state_0\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_fifo_empty\ and \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_0\ and not \UART:BUART:tx_fifo_empty\ and not \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk_enable_pre\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_fifo_empty\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and \UART:BUART:tx_state_0\ and \UART:BUART:tx_state_2\));

\UART:BUART:txn\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_0\ and not \UART:BUART:tx_shift_out\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_counter_dp\ and \UART:BUART:tx_state_1\ and \UART:BUART:tx_bitclk\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_2\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_shift_out\ and not \UART:BUART:tx_state_2\ and \UART:BUART:tx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:tx_bitclk\ and \UART:BUART:txn\ and \UART:BUART:tx_state_1\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:txn\ and \UART:BUART:tx_state_2\));

\UART:BUART:tx_parity_bit\\D\ <= ((not \UART:BUART:tx_state_0\ and \UART:BUART:txn\ and \UART:BUART:tx_parity_bit\)
	OR (not \UART:BUART:tx_state_1\ and not \UART:BUART:tx_state_0\ and \UART:BUART:tx_parity_bit\)
	OR \UART:BUART:tx_parity_bit\);

\UART:BUART:rx_counter_load\ <= ((not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_0\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:rx_state_2\));

\UART:BUART:rx_bitclk_pre\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

\UART:BUART:rx_state_stop1_reg\\D\ <= (not \UART:BUART:rx_state_2\
	OR not \UART:BUART:rx_state_3\
	OR \UART:BUART:rx_state_0\
	OR \UART:BUART:rx_state_1\);

\UART:BUART:pollcount_1\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:pollcount_1\ and Net_188 and \UART:BUART:pollcount_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:pollcount_1\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not Net_188 and \UART:BUART:pollcount_1\));

\UART:BUART:pollcount_0\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:pollcount_0\ and Net_188)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not Net_188 and \UART:BUART:pollcount_0\));

\UART:BUART:rx_postpoll\ <= ((Net_188 and \UART:BUART:pollcount_0\)
	OR \UART:BUART:pollcount_1\);

\UART:BUART:rx_status_4\ <= ((\UART:BUART:rx_load_fifo\ and \UART:BUART:rx_fifofull\));

\UART:BUART:rx_status_5\ <= ((\UART:BUART:rx_fifonotempty\ and \UART:BUART:rx_state_stop1_reg\));

\UART:BUART:rx_stop_bit_error\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_0\ and not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_3\ and \UART:BUART:rx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_0\ and not \UART:BUART:pollcount_1\ and not Net_188 and \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_3\ and \UART:BUART:rx_state_2\));

\UART:BUART:rx_load_fifo\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_0\ and not \UART:BUART:rx_state_2\ and \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_3\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:rx_state_2\ and not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\ and \UART:BUART:rx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:rx_state_2\ and not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\ and \UART:BUART:rx_state_0\));

\UART:BUART:rx_state_3\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_2\ and not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\ and \UART:BUART:rx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_2\ and not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\ and \UART:BUART:rx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_3\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_1\ and \UART:BUART:rx_state_3\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_2\ and \UART:BUART:rx_state_3\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_0\ and \UART:BUART:rx_state_3\));

\UART:BUART:rx_state_2\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_0\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:rx_state_2\ and not Net_188 and \UART:BUART:rx_last\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_0\ and not \UART:BUART:rx_state_2\ and \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_3\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\ and \UART:BUART:rx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\ and \UART:BUART:rx_state_0\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_2\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_1\ and \UART:BUART:rx_state_2\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_0\ and \UART:BUART:rx_state_2\));

\UART:BUART:rx_state_1\\D\ <= ((not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_1\));

\UART:BUART:rx_state_0\\D\ <= ((not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_2\)
	OR (not \UART:BUART:reset_reg\ and not \UART:BUART:rx_state_1\ and not \UART:BUART:rx_state_3\ and not \UART:BUART:pollcount_1\ and not Net_188 and \UART:BUART:rx_bitclk_enable\ and \UART:BUART:rx_state_2\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_0\ and \UART:BUART:rx_count_5\ and \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_0\ and \UART:BUART:rx_count_6\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_0\ and \UART:BUART:rx_state_3\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_1\ and \UART:BUART:rx_state_0\)
	OR (not \UART:BUART:reset_reg\ and \UART:BUART:rx_state_0\ and \UART:BUART:rx_state_2\));

\UART:BUART:rx_last\\D\ <= ((not \UART:BUART:reset_reg\ and Net_188));

\UART:BUART:rx_address_detected\\D\ <= ((not \UART:BUART:reset_reg\ and \UART:BUART:rx_address_detected\));

\Gimbal_Encoder:Cnt16:CounterUDB:reload\ <= (\Gimbal_Encoder:Cnt16:CounterUDB:overflow\
	OR \Gimbal_Encoder:Cnt16:CounterUDB:status_1\
	OR \Gimbal_Encoder:Net_1260\);

\Gimbal_Encoder:Cnt16:CounterUDB:status_0\ <= ((not \Gimbal_Encoder:Cnt16:CounterUDB:prevCompare\ and \Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_i\));

\Gimbal_Encoder:Cnt16:CounterUDB:status_2\ <= ((not \Gimbal_Encoder:Cnt16:CounterUDB:overflow_reg_i\ and \Gimbal_Encoder:Cnt16:CounterUDB:overflow\));

\Gimbal_Encoder:Cnt16:CounterUDB:status_3\ <= ((not \Gimbal_Encoder:Cnt16:CounterUDB:underflow_reg_i\ and \Gimbal_Encoder:Cnt16:CounterUDB:status_1\));

\Gimbal_Encoder:Cnt16:CounterUDB:count_enable\ <= ((not \Gimbal_Encoder:Cnt16:CounterUDB:count_stored_i\ and \Gimbal_Encoder:Cnt16:CounterUDB:control_7\ and \Gimbal_Encoder:Net_1203\));

\Gimbal_Encoder:Cnt16:CounterUDB:reload_tc\ <= (\Gimbal_Encoder:Cnt16:CounterUDB:status_1\
	OR \Gimbal_Encoder:Cnt16:CounterUDB:overflow\);

\Gimbal_Encoder:bQuadDec:quad_A_filt\\D\ <= ((\Gimbal_Encoder:bQuadDec:quad_A_delayed_0\ and \Gimbal_Encoder:bQuadDec:quad_A_delayed_1\ and \Gimbal_Encoder:bQuadDec:quad_A_delayed_2\)
	OR (\Gimbal_Encoder:bQuadDec:quad_A_delayed_2\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\)
	OR (\Gimbal_Encoder:bQuadDec:quad_A_delayed_1\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\)
	OR (\Gimbal_Encoder:bQuadDec:quad_A_delayed_0\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\));

\Gimbal_Encoder:bQuadDec:quad_B_filt\\D\ <= ((\Gimbal_Encoder:bQuadDec:quad_B_delayed_0\ and \Gimbal_Encoder:bQuadDec:quad_B_delayed_1\ and \Gimbal_Encoder:bQuadDec:quad_B_delayed_2\)
	OR (\Gimbal_Encoder:bQuadDec:quad_B_delayed_2\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\)
	OR (\Gimbal_Encoder:bQuadDec:quad_B_delayed_1\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\)
	OR (\Gimbal_Encoder:bQuadDec:quad_B_delayed_0\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\));

\Gimbal_Encoder:bQuadDec:state_3\\D\ <= ((not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\));

\Gimbal_Encoder:bQuadDec:state_2\\D\ <= ((\Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (\Gimbal_Encoder:Net_1260\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (\Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (\Gimbal_Encoder:Net_1260\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (\Gimbal_Encoder:Net_1260\ and \Gimbal_Encoder:bQuadDec:error\));

\Gimbal_Encoder:bQuadDec:state_1\\D\ <= ((not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:error\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:state_1\));

\Gimbal_Encoder:bQuadDec:state_0\\D\ <= ((not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:error\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_0\));

\Gimbal_Encoder:Net_1251\\D\ <= ((not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:Net_1251\ and \Gimbal_Encoder:bQuadDec:error\)
	OR (not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:Net_1251\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:Net_1251\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:Net_1251\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\)
	OR (not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:Net_1251\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:Net_1251\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:Net_1251\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\));

\Gimbal_Encoder:Net_1203\\D\ <= ((not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:Net_1203\ and \Gimbal_Encoder:bQuadDec:error\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_1\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:Net_1260\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\ and \Gimbal_Encoder:bQuadDec:state_0\)
	OR (not \Gimbal_Encoder:bQuadDec:quad_B_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_A_filt\)
	OR (not \Gimbal_Encoder:bQuadDec:quad_A_filt\ and not \Gimbal_Encoder:bQuadDec:error\ and not \Gimbal_Encoder:bQuadDec:state_1\ and not \Gimbal_Encoder:bQuadDec:state_0\ and \Gimbal_Encoder:bQuadDec:quad_B_filt\));

\Gimbal_Encoder:Net_530\ <= ((not \Gimbal_Encoder:Net_1264\ and \Gimbal_Encoder:Net_1275\ and \Gimbal_Encoder:Net_1251\));

\Gimbal_Encoder:Net_611\ <= ((not \Gimbal_Encoder:Net_1251\ and not \Gimbal_Encoder:Net_1264\ and \Gimbal_Encoder:Net_1275\));

\Handle_Encoder:Cnt16:CounterUDB:reload\ <= (\Handle_Encoder:Cnt16:CounterUDB:overflow\
	OR \Handle_Encoder:Cnt16:CounterUDB:status_1\
	OR \Handle_Encoder:Net_1260\);

\Handle_Encoder:Cnt16:CounterUDB:status_0\ <= ((not \Handle_Encoder:Cnt16:CounterUDB:prevCompare\ and \Handle_Encoder:Cnt16:CounterUDB:cmp_out_i\));

\Handle_Encoder:Cnt16:CounterUDB:status_2\ <= ((not \Handle_Encoder:Cnt16:CounterUDB:overflow_reg_i\ and \Handle_Encoder:Cnt16:CounterUDB:overflow\));

\Handle_Encoder:Cnt16:CounterUDB:status_3\ <= ((not \Handle_Encoder:Cnt16:CounterUDB:underflow_reg_i\ and \Handle_Encoder:Cnt16:CounterUDB:status_1\));

\Handle_Encoder:Cnt16:CounterUDB:count_enable\ <= ((not \Handle_Encoder:Cnt16:CounterUDB:count_stored_i\ and \Handle_Encoder:Cnt16:CounterUDB:control_7\ and \Handle_Encoder:Net_1203\));

\Handle_Encoder:Cnt16:CounterUDB:reload_tc\ <= (\Handle_Encoder:Cnt16:CounterUDB:status_1\
	OR \Handle_Encoder:Cnt16:CounterUDB:overflow\);

\Handle_Encoder:bQuadDec:quad_A_filt\\D\ <= ((\Handle_Encoder:bQuadDec:quad_A_delayed_0\ and \Handle_Encoder:bQuadDec:quad_A_delayed_1\ and \Handle_Encoder:bQuadDec:quad_A_delayed_2\)
	OR (\Handle_Encoder:bQuadDec:quad_A_delayed_2\ and \Handle_Encoder:bQuadDec:quad_A_filt\)
	OR (\Handle_Encoder:bQuadDec:quad_A_delayed_1\ and \Handle_Encoder:bQuadDec:quad_A_filt\)
	OR (\Handle_Encoder:bQuadDec:quad_A_delayed_0\ and \Handle_Encoder:bQuadDec:quad_A_filt\));

\Handle_Encoder:bQuadDec:quad_B_filt\\D\ <= ((\Handle_Encoder:bQuadDec:quad_B_delayed_0\ and \Handle_Encoder:bQuadDec:quad_B_delayed_1\ and \Handle_Encoder:bQuadDec:quad_B_delayed_2\)
	OR (\Handle_Encoder:bQuadDec:quad_B_delayed_2\ and \Handle_Encoder:bQuadDec:quad_B_filt\)
	OR (\Handle_Encoder:bQuadDec:quad_B_delayed_1\ and \Handle_Encoder:bQuadDec:quad_B_filt\)
	OR (\Handle_Encoder:bQuadDec:quad_B_delayed_0\ and \Handle_Encoder:bQuadDec:quad_B_filt\));

\Handle_Encoder:bQuadDec:state_3\\D\ <= ((not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:quad_B_filt\));

\Handle_Encoder:bQuadDec:state_2\\D\ <= ((\Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (\Handle_Encoder:Net_1260\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (\Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (\Handle_Encoder:Net_1260\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (\Handle_Encoder:Net_1260\ and \Handle_Encoder:bQuadDec:error\));

\Handle_Encoder:bQuadDec:state_1\\D\ <= ((not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_A_filt\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:error\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:state_1\));

\Handle_Encoder:bQuadDec:state_0\\D\ <= ((not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_B_filt\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:error\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_0\));

\Handle_Encoder:Net_1251\\D\ <= ((not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:Net_1251\ and \Handle_Encoder:bQuadDec:error\)
	OR (not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_B_filt\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:Net_1251\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:Net_1251\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:Net_1251\ and \Handle_Encoder:bQuadDec:quad_B_filt\)
	OR (not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:Net_1251\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:Net_1251\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:Net_1251\ and \Handle_Encoder:bQuadDec:quad_B_filt\));

\Handle_Encoder:Net_1203\\D\ <= ((not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:Net_1203\ and \Handle_Encoder:bQuadDec:error\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_1\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:Net_1260\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and \Handle_Encoder:bQuadDec:quad_A_filt\ and \Handle_Encoder:bQuadDec:quad_B_filt\ and \Handle_Encoder:bQuadDec:state_0\)
	OR (not \Handle_Encoder:bQuadDec:quad_B_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_A_filt\)
	OR (not \Handle_Encoder:bQuadDec:quad_A_filt\ and not \Handle_Encoder:bQuadDec:error\ and not \Handle_Encoder:bQuadDec:state_1\ and not \Handle_Encoder:bQuadDec:state_0\ and \Handle_Encoder:bQuadDec:quad_B_filt\));

\Handle_Encoder:Net_530\ <= ((not \Handle_Encoder:Net_1264\ and \Handle_Encoder:Net_1275\ and \Handle_Encoder:Net_1251\));

\Handle_Encoder:Net_611\ <= ((not \Handle_Encoder:Net_1251\ and not \Handle_Encoder:Net_1264\ and \Handle_Encoder:Net_1275\));

\PWM_Steer:PWMUDB:sc_kill_tmp\\D\ <= (not \PWM_Steer:PWMUDB:tc_i\);

\PWM_Steer:PWMUDB:dith_count_1\\D\ <= ((not \PWM_Steer:PWMUDB:dith_count_1\ and \PWM_Steer:PWMUDB:tc_i\ and \PWM_Steer:PWMUDB:dith_count_0\)
	OR (not \PWM_Steer:PWMUDB:dith_count_0\ and \PWM_Steer:PWMUDB:dith_count_1\)
	OR (not \PWM_Steer:PWMUDB:tc_i\ and \PWM_Steer:PWMUDB:dith_count_1\));

\PWM_Steer:PWMUDB:dith_count_0\\D\ <= ((not \PWM_Steer:PWMUDB:dith_count_0\ and \PWM_Steer:PWMUDB:tc_i\)
	OR (not \PWM_Steer:PWMUDB:tc_i\ and \PWM_Steer:PWMUDB:dith_count_0\));

\PWM_Steer:PWMUDB:cmp1_status\ <= ((not \PWM_Steer:PWMUDB:prevCompare1\ and \PWM_Steer:PWMUDB:cmp1_less\));

\PWM_Steer:PWMUDB:status_2\ <= ((\PWM_Steer:PWMUDB:runmode_enable\ and \PWM_Steer:PWMUDB:tc_i\));

\PWM_Steer:PWMUDB:pwm_i\ <= ((\PWM_Steer:PWMUDB:runmode_enable\ and \PWM_Steer:PWMUDB:cmp1_less\));

\PWM_CMG:PWMUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_32,
		enable=>one,
		clock_out=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\);
\PWM_CMG:PWMUDB:genblk1:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		control=>(\PWM_CMG:PWMUDB:control_7\, \PWM_CMG:PWMUDB:control_6\, \PWM_CMG:PWMUDB:control_5\, \PWM_CMG:PWMUDB:control_4\,
			\PWM_CMG:PWMUDB:control_3\, \PWM_CMG:PWMUDB:control_2\, \PWM_CMG:PWMUDB:control_1\, \PWM_CMG:PWMUDB:control_0\));
\PWM_CMG:PWMUDB:genblk8:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0100111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>zero,
		clock=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		status=>(zero, \PWM_CMG:PWMUDB:status_5\, zero, \PWM_CMG:PWMUDB:status_3\,
			\PWM_CMG:PWMUDB:status_2\, \PWM_CMG:PWMUDB:status_1\, \PWM_CMG:PWMUDB:status_0\),
		interrupt=>\PWM_CMG:Net_55\);
\PWM_CMG:PWMUDB:sP16:pwmdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		cs_addr=>(\PWM_CMG:PWMUDB:tc_i\, \PWM_CMG:PWMUDB:runmode_enable\, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\PWM_CMG:PWMUDB:nc2\,
		cl0=>\PWM_CMG:PWMUDB:nc3\,
		z0=>\PWM_CMG:PWMUDB:nc1\,
		ff0=>open,
		ce1=>\PWM_CMG:PWMUDB:nc4\,
		cl1=>\PWM_CMG:PWMUDB:nc5\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>\PWM_CMG:PWMUDB:nc6\,
		f1_blk_stat=>\PWM_CMG:PWMUDB:nc7\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\PWM_CMG:PWMUDB:sP16:pwmdp:carry\,
		sir=>zero,
		sor=>open,
		sil=>\PWM_CMG:PWMUDB:sP16:pwmdp:sh_right\,
		sol=>\PWM_CMG:PWMUDB:sP16:pwmdp:sh_left\,
		msbi=>\PWM_CMG:PWMUDB:sP16:pwmdp:msb\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_eq_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_eq_0\),
		cli=>(zero, zero),
		clo=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_lt_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_lt_0\),
		zi=>(zero, zero),
		zo=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_zero_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_zero_0\),
		fi=>(zero, zero),
		fo=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_ff_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_ff_0\),
		capi=>(zero, zero),
		capo=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cap_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cap_0\),
		cfbi=>zero,
		cfbo=>\PWM_CMG:PWMUDB:sP16:pwmdp:cfb\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\PWM_CMG:PWMUDB:sP16:pwmdp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		cs_addr=>(\PWM_CMG:PWMUDB:tc_i\, \PWM_CMG:PWMUDB:runmode_enable\, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\PWM_CMG:PWMUDB:cmp1_eq\,
		cl0=>\PWM_CMG:PWMUDB:cmp1_less\,
		z0=>\PWM_CMG:PWMUDB:tc_i\,
		ff0=>open,
		ce1=>\PWM_CMG:PWMUDB:cmp2_eq\,
		cl1=>\PWM_CMG:PWMUDB:cmp2_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>\PWM_CMG:PWMUDB:fifo_nempty\,
		f1_blk_stat=>\PWM_CMG:PWMUDB:status_3\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\PWM_CMG:PWMUDB:sP16:pwmdp:carry\,
		co=>open,
		sir=>\PWM_CMG:PWMUDB:sP16:pwmdp:sh_left\,
		sor=>\PWM_CMG:PWMUDB:sP16:pwmdp:sh_right\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\PWM_CMG:PWMUDB:sP16:pwmdp:msb\,
		cei=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_eq_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_eq_0\),
		ceo=>open,
		cli=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_lt_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_lt_0\),
		clo=>open,
		zi=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_zero_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_zero_0\),
		zo=>open,
		fi=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cmp_ff_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cmp_ff_0\),
		fo=>open,
		capi=>(\PWM_CMG:PWMUDB:sP16:pwmdp:cap_1\, \PWM_CMG:PWMUDB:sP16:pwmdp:cap_0\),
		capo=>open,
		cfbi=>\PWM_CMG:PWMUDB:sP16:pwmdp:cfb\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_24\);
\PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_16\);
\PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\PWM_CMG:PWMUDB:MODULE_1:g2:a0:g1:z1:s0:g1:u0:c_8\);
Clock_1:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"8c19a967-63b7-46f3-85bc-5fcf050a82e3",
		source_clock_id=>"",
		divisor=>0,
		period=>"10000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_32,
		dig_domain_out=>open);
flywheel_motor:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"e851a3b9-efb8-48be-bbb8-b303b216c393",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_88,
		fb=>(tmpFB_0__flywheel_motor_net_0),
		analog=>(open),
		io=>(tmpIO_0__flywheel_motor_net_0),
		siovref=>(tmpSIOVREF__flywheel_motor_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__flywheel_motor_net_0);
gimbal_motor:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"5c50f1bc-a045-46fe-9e2f-e79a01723807",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_89,
		fb=>(tmpFB_0__gimbal_motor_net_0),
		analog=>(open),
		io=>(tmpIO_0__gimbal_motor_net_0),
		siovref=>(tmpSIOVREF__gimbal_motor_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__gimbal_motor_net_0);
gimbal_direction:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"6bcad45d-47d0-4fbe-b03c-15df0b5896a5",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__gimbal_direction_net_0),
		analog=>(open),
		io=>(tmpIO_0__gimbal_direction_net_0),
		siovref=>(tmpSIOVREF__gimbal_direction_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__gimbal_direction_net_0);
\UART:TXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_118);
\UART:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"ccb04739-7491-4641-9f01-129becc8e878/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"2170138888.88889",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UART:Net_9\,
		dig_domain_out=>open);
\UART:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UART:Net_9\,
		enable=>one,
		clock_out=>\UART:BUART:clock_op\);
\UART:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clk=>\UART:BUART:clock_op\,
		cs_addr=>(\UART:BUART:tx_state_1\, \UART:BUART:tx_state_0\, \UART:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART:BUART:tx_shift_out\,
		f0_bus_stat=>\UART:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clk=>\UART:BUART:clock_op\,
		cs_addr=>(zero, zero, \UART:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\UART:BUART:sc_out_7\, \UART:BUART:sc_out_6\, \UART:BUART:sc_out_5\, \UART:BUART:sc_out_4\,
			\UART:BUART:sc_out_3\, \UART:BUART:sc_out_2\, \UART:BUART:sc_out_1\, \UART:BUART:sc_out_0\));
\UART:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clock=>\UART:BUART:clock_op\,
		status=>(zero, zero, zero, \UART:BUART:tx_fifo_notfull\,
			\UART:BUART:tx_status_2\, \UART:BUART:tx_fifo_empty\, \UART:BUART:tx_status_0\),
		interrupt=>Net_118);
\UART:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clk=>\UART:BUART:clock_op\,
		cs_addr=>(\UART:BUART:rx_state_1\, \UART:BUART:rx_state_0\, \UART:BUART:rx_bitclk_enable\),
		route_si=>\UART:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\UART:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\UART:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\UART:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART:BUART:hd_shift_out\,
		f0_bus_stat=>\UART:BUART:rx_fifonotempty\,
		f0_blk_stat=>\UART:BUART:rx_fifofull\,
		f1_bus_stat=>\UART:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\UART:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\UART:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\UART:BUART:clock_op\,
		reset=>\UART:BUART:reset_reg\,
		load=>\UART:BUART:rx_counter_load\,
		enable=>one,
		count=>(\UART:BUART:rx_count_6\, \UART:BUART:rx_count_5\, \UART:BUART:rx_count_4\, \UART:BUART:rx_count_3\,
			\UART:BUART:rx_count_2\, \UART:BUART:rx_count_1\, \UART:BUART:rx_count_0\),
		tc=>\UART:BUART:rx_count7_tc\);
\UART:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART:BUART:reset_reg\,
		clock=>\UART:BUART:clock_op\,
		status=>(zero, \UART:BUART:rx_status_5\, \UART:BUART:rx_status_4\, \UART:BUART:rx_status_3\,
			\UART:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_189);
Rx_RPi:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"345b9c63-a8fb-4acc-a032-06ab1065451d",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_188,
		analog=>(open),
		io=>(tmpIO_0__Rx_RPi_net_0),
		siovref=>(tmpSIOVREF__Rx_RPi_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Rx_RPi_net_0);
Tx_RPi:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"b851ab1a-4547-4be8-9645-8a1f7a8f1838",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>1,
		sio_hifreq=>"1",
		sio_hyst=>"1",
		sio_ibuf=>"0",
		sio_info=>"01",
		sio_obuf=>"1",
		sio_refsel=>"1",
		sio_vtrip=>"1",
		sio_vohsel=>"000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_183,
		fb=>(tmpFB_0__Tx_RPi_net_0),
		analog=>(open),
		io=>(tmpIO_0__Tx_RPi_net_0),
		siovref=>Net_224,
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Tx_RPi_net_0);
Rpi_Tx_Interrupt:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_189);
\VDAC8_1:viDAC8\:cy_psoc3_vidac8_v1_0
	GENERIC MAP(cy_registers=>"",
		reg_data=>'0',
		is_all_if_any=>'0')
	PORT MAP(reset=>zero,
		idir=>zero,
		ioff=>zero,
		data=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		strobe=>zero,
		strobe_udb=>zero,
		vout=>Net_224,
		iout=>\VDAC8_1:Net_77\);
\VDAC8_1:cy_analog_noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\VDAC8_1:Net_77\);
Clock_3:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"97ea16c5-0381-42e2-a6ab-b8333ee384e3",
		source_clock_id=>"61737EF6-3B74-48f9-8B91-F7473A442AE7",
		divisor=>0,
		period=>"100000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_135,
		dig_domain_out=>open);
\Gimbal_Timer:TimerHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Net_135,
		kill=>zero,
		enable=>one,
		capture=>zero,
		timer_reset=>zero,
		tc=>\Gimbal_Timer:Net_51\,
		compare=>\Gimbal_Timer:Net_261\,
		interrupt=>Net_129);
Gimbal_Control_Loop_Interrupt:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_129);
Timer_Interrupt:cy_isr_v1_0
	GENERIC MAP(int_type=>"00",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_135);
Gimbal_Encoder_A:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"dbfb9751-6d7b-4701-b028-88483445f954",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_223,
		analog=>(open),
		io=>(tmpIO_0__Gimbal_Encoder_A_net_0),
		siovref=>(tmpSIOVREF__Gimbal_Encoder_A_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Gimbal_Encoder_A_net_0);
SW1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"8d318d8b-cf7b-4b6b-b02c-ab1c5c49d0ba",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__SW1_net_0),
		analog=>(open),
		io=>(tmpIO_0__SW1_net_0),
		siovref=>(tmpSIOVREF__SW1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__SW1_net_0);
LED1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"d999e358-37d2-440a-98f5-295dbeb5f576",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__LED1_net_0),
		analog=>(open),
		io=>(tmpIO_0__LED1_net_0),
		siovref=>(tmpSIOVREF__LED1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__LED1_net_0);
\Gimbal_Encoder:Cnt16:CounterUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_227,
		enable=>one,
		clock_out=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\);
\Gimbal_Encoder:Cnt16:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_227,
		enable=>one,
		clock_out=>\Gimbal_Encoder:Cnt16:CounterUDB:Clk_Ctl_i\);
\Gimbal_Encoder:Cnt16:CounterUDB:sCTRLReg:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\Gimbal_Encoder:Cnt16:CounterUDB:Clk_Ctl_i\,
		control=>(\Gimbal_Encoder:Cnt16:CounterUDB:control_7\, \Gimbal_Encoder:Cnt16:CounterUDB:control_6\, \Gimbal_Encoder:Cnt16:CounterUDB:control_5\, \Gimbal_Encoder:Cnt16:CounterUDB:control_4\,
			\Gimbal_Encoder:Cnt16:CounterUDB:control_3\, \Gimbal_Encoder:Cnt16:CounterUDB:control_2\, \Gimbal_Encoder:Cnt16:CounterUDB:control_1\, \Gimbal_Encoder:Cnt16:CounterUDB:control_0\));
\Gimbal_Encoder:Cnt16:CounterUDB:sSTSReg:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Gimbal_Encoder:Net_1260\,
		clock=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		status=>(\Gimbal_Encoder:Cnt16:CounterUDB:status_6\, \Gimbal_Encoder:Cnt16:CounterUDB:status_5\, zero, \Gimbal_Encoder:Cnt16:CounterUDB:status_3\,
			\Gimbal_Encoder:Cnt16:CounterUDB:status_2\, \Gimbal_Encoder:Cnt16:CounterUDB:status_1\, \Gimbal_Encoder:Cnt16:CounterUDB:status_0\),
		interrupt=>\Gimbal_Encoder:Cnt16:Net_43\);
\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		cs_addr=>(\Gimbal_Encoder:Net_1251\, \Gimbal_Encoder:Cnt16:CounterUDB:count_enable\, \Gimbal_Encoder:Cnt16:CounterUDB:reload\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Gimbal_Encoder:Cnt16:CounterUDB:nc16\,
		cl0=>\Gimbal_Encoder:Cnt16:CounterUDB:nc17\,
		z0=>\Gimbal_Encoder:Cnt16:CounterUDB:nc1\,
		ff0=>\Gimbal_Encoder:Cnt16:CounterUDB:nc10\,
		ce1=>\Gimbal_Encoder:Cnt16:CounterUDB:nc2\,
		cl1=>\Gimbal_Encoder:Cnt16:CounterUDB:nc3\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Gimbal_Encoder:Cnt16:CounterUDB:nc30\,
		f0_blk_stat=>\Gimbal_Encoder:Cnt16:CounterUDB:nc31\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:carry\,
		sir=>zero,
		sor=>open,
		sil=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_right\,
		sol=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_left\,
		msbi=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:msb\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_0\),
		cli=>(zero, zero),
		clo=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_0\),
		zi=>(zero, zero),
		zo=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_0\),
		fi=>(zero, zero),
		fo=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_0\),
		capi=>(zero, zero),
		capo=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_0\),
		cfbi=>zero,
		cfbo=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cfb\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		cs_addr=>(\Gimbal_Encoder:Net_1251\, \Gimbal_Encoder:Cnt16:CounterUDB:count_enable\, \Gimbal_Encoder:Cnt16:CounterUDB:reload\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Gimbal_Encoder:Cnt16:CounterUDB:per_equal\,
		cl0=>\Gimbal_Encoder:Cnt16:CounterUDB:nc43\,
		z0=>\Gimbal_Encoder:Cnt16:CounterUDB:status_1\,
		ff0=>\Gimbal_Encoder:Cnt16:CounterUDB:overflow\,
		ce1=>\Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_i\,
		cl1=>\Gimbal_Encoder:Cnt16:CounterUDB:cmp_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Gimbal_Encoder:Cnt16:CounterUDB:status_6\,
		f0_blk_stat=>\Gimbal_Encoder:Cnt16:CounterUDB:status_5\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:carry\,
		co=>open,
		sir=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_left\,
		sor=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_right\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:msb\,
		cei=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_0\),
		ceo=>open,
		cli=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_0\),
		clo=>open,
		zi=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_0\),
		zo=>open,
		fi=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_0\),
		fo=>open,
		capi=>(\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_1\, \Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_0\),
		capo=>open,
		cfbi=>\Gimbal_Encoder:Cnt16:CounterUDB:sC16:counterdp:cfb\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Gimbal_Encoder:bQuadDec:CtrlClkEn\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_227,
		enable=>one,
		clock_out=>\Gimbal_Encoder:bQuadDec:sync_clock\);
\Gimbal_Encoder:bQuadDec:genblk1:DelayA1\:cy_dff
	PORT MAP(d=>Net_223,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_A_delayed_0\);
\Gimbal_Encoder:bQuadDec:genblk1:DelayA2\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:quad_A_delayed_0\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_A_delayed_1\);
\Gimbal_Encoder:bQuadDec:genblk1:DelayA3\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:quad_A_delayed_1\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_A_delayed_2\);
\Gimbal_Encoder:bQuadDec:genblk1:DelayB1\:cy_dff
	PORT MAP(d=>Net_225,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_B_delayed_0\);
\Gimbal_Encoder:bQuadDec:genblk1:DelayB2\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:quad_B_delayed_0\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_B_delayed_1\);
\Gimbal_Encoder:bQuadDec:genblk1:DelayB3\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:quad_B_delayed_1\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_B_delayed_2\);
\Gimbal_Encoder:bQuadDec:Stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0001111",
		cy_int_mask=>"0001111")
	PORT MAP(reset=>zero,
		clock=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		status=>(zero, zero, zero, \Gimbal_Encoder:bQuadDec:error\,
			\Gimbal_Encoder:Net_1260\, \Gimbal_Encoder:Net_611\, \Gimbal_Encoder:Net_530\),
		interrupt=>Net_228);
Gimbal_Encoder_B:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"59c1ab5f-11ef-41d7-8009-aa04b9dba266",
		drive_mode=>"010",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_225,
		analog=>(open),
		io=>(tmpIO_0__Gimbal_Encoder_B_net_0),
		siovref=>(tmpSIOVREF__Gimbal_Encoder_B_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Gimbal_Encoder_B_net_0);
Clock_2:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"b73e02db-35b2-4288-b433-128b23b8e302",
		source_clock_id=>"",
		divisor=>0,
		period=>"41666666666.6667",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_227,
		dig_domain_out=>open);
\Handle_Encoder:Cnt16:CounterUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_42,
		enable=>one,
		clock_out=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\);
\Handle_Encoder:Cnt16:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_42,
		enable=>one,
		clock_out=>\Handle_Encoder:Cnt16:CounterUDB:Clk_Ctl_i\);
\Handle_Encoder:Cnt16:CounterUDB:sCTRLReg:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\Handle_Encoder:Cnt16:CounterUDB:Clk_Ctl_i\,
		control=>(\Handle_Encoder:Cnt16:CounterUDB:control_7\, \Handle_Encoder:Cnt16:CounterUDB:control_6\, \Handle_Encoder:Cnt16:CounterUDB:control_5\, \Handle_Encoder:Cnt16:CounterUDB:control_4\,
			\Handle_Encoder:Cnt16:CounterUDB:control_3\, \Handle_Encoder:Cnt16:CounterUDB:control_2\, \Handle_Encoder:Cnt16:CounterUDB:control_1\, \Handle_Encoder:Cnt16:CounterUDB:control_0\));
\Handle_Encoder:Cnt16:CounterUDB:sSTSReg:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\Handle_Encoder:Net_1260\,
		clock=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		status=>(\Handle_Encoder:Cnt16:CounterUDB:status_6\, \Handle_Encoder:Cnt16:CounterUDB:status_5\, zero, \Handle_Encoder:Cnt16:CounterUDB:status_3\,
			\Handle_Encoder:Cnt16:CounterUDB:status_2\, \Handle_Encoder:Cnt16:CounterUDB:status_1\, \Handle_Encoder:Cnt16:CounterUDB:status_0\),
		interrupt=>\Handle_Encoder:Cnt16:Net_43\);
\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		cs_addr=>(\Handle_Encoder:Net_1251\, \Handle_Encoder:Cnt16:CounterUDB:count_enable\, \Handle_Encoder:Cnt16:CounterUDB:reload\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Handle_Encoder:Cnt16:CounterUDB:nc16\,
		cl0=>\Handle_Encoder:Cnt16:CounterUDB:nc17\,
		z0=>\Handle_Encoder:Cnt16:CounterUDB:nc1\,
		ff0=>\Handle_Encoder:Cnt16:CounterUDB:nc10\,
		ce1=>\Handle_Encoder:Cnt16:CounterUDB:nc2\,
		cl1=>\Handle_Encoder:Cnt16:CounterUDB:nc3\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Handle_Encoder:Cnt16:CounterUDB:nc30\,
		f0_blk_stat=>\Handle_Encoder:Cnt16:CounterUDB:nc31\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:carry\,
		sir=>zero,
		sor=>open,
		sil=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_right\,
		sol=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_left\,
		msbi=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:msb\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_0\),
		cli=>(zero, zero),
		clo=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_0\),
		zi=>(zero, zero),
		zo=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_0\),
		fi=>(zero, zero),
		fo=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_0\),
		capi=>(zero, zero),
		capo=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_0\),
		cfbi=>zero,
		cfbo=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cfb\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		cs_addr=>(\Handle_Encoder:Net_1251\, \Handle_Encoder:Cnt16:CounterUDB:count_enable\, \Handle_Encoder:Cnt16:CounterUDB:reload\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Handle_Encoder:Cnt16:CounterUDB:per_equal\,
		cl0=>\Handle_Encoder:Cnt16:CounterUDB:nc43\,
		z0=>\Handle_Encoder:Cnt16:CounterUDB:status_1\,
		ff0=>\Handle_Encoder:Cnt16:CounterUDB:overflow\,
		ce1=>\Handle_Encoder:Cnt16:CounterUDB:cmp_out_i\,
		cl1=>\Handle_Encoder:Cnt16:CounterUDB:cmp_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Handle_Encoder:Cnt16:CounterUDB:status_6\,
		f0_blk_stat=>\Handle_Encoder:Cnt16:CounterUDB:status_5\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:carry\,
		co=>open,
		sir=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_left\,
		sor=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:sh_right\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:msb\,
		cei=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_eq_0\),
		ceo=>open,
		cli=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_lt_0\),
		clo=>open,
		zi=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_zero_0\),
		zo=>open,
		fi=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cmp_ff_0\),
		fo=>open,
		capi=>(\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_1\, \Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cap_0\),
		capo=>open,
		cfbi=>\Handle_Encoder:Cnt16:CounterUDB:sC16:counterdp:cfb\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Handle_Encoder:bQuadDec:CtrlClkEn\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_42,
		enable=>one,
		clock_out=>\Handle_Encoder:bQuadDec:sync_clock\);
\Handle_Encoder:bQuadDec:genblk1:DelayA1\:cy_dff
	PORT MAP(d=>Net_262,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_A_delayed_0\);
\Handle_Encoder:bQuadDec:genblk1:DelayA2\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:quad_A_delayed_0\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_A_delayed_1\);
\Handle_Encoder:bQuadDec:genblk1:DelayA3\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:quad_A_delayed_1\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_A_delayed_2\);
\Handle_Encoder:bQuadDec:genblk1:DelayB1\:cy_dff
	PORT MAP(d=>Net_263,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_B_delayed_0\);
\Handle_Encoder:bQuadDec:genblk1:DelayB2\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:quad_B_delayed_0\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_B_delayed_1\);
\Handle_Encoder:bQuadDec:genblk1:DelayB3\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:quad_B_delayed_1\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_B_delayed_2\);
\Handle_Encoder:bQuadDec:Stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0001111",
		cy_int_mask=>"0001111")
	PORT MAP(reset=>zero,
		clock=>\Handle_Encoder:bQuadDec:sync_clock\,
		status=>(zero, zero, zero, \Handle_Encoder:bQuadDec:error\,
			\Handle_Encoder:Net_1260\, \Handle_Encoder:Net_611\, \Handle_Encoder:Net_530\),
		interrupt=>Net_265);
Handle_Encoder_A:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"3cb5493c-9586-4985-a323-bff655c98192",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_262,
		analog=>(open),
		io=>(tmpIO_0__Handle_Encoder_A_net_0),
		siovref=>(tmpSIOVREF__Handle_Encoder_A_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Handle_Encoder_A_net_0);
Clock_4:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"5598b230-0e6d-4359-876d-e6247a6ef0e2",
		source_clock_id=>"",
		divisor=>0,
		period=>"50000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_42,
		dig_domain_out=>open);
Handle_Encoder_B:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"5497ccb0-c41e-4bed-9f49-b2280d2d6b63",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_263,
		analog=>(open),
		io=>(tmpIO_0__Handle_Encoder_B_net_0),
		siovref=>(tmpSIOVREF__Handle_Encoder_B_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Handle_Encoder_B_net_0);
\Steering_Timer:TimerHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Net_293,
		kill=>zero,
		enable=>one,
		capture=>zero,
		timer_reset=>zero,
		tc=>\Steering_Timer:Net_51\,
		compare=>\Steering_Timer:Net_261\,
		interrupt=>Net_276);
Steering_Control_Loop_Interrupt:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_276);
Clock_5:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"a25c26e9-62fa-476f-a66a-3cb0a498f57e",
		source_clock_id=>"CEF43CFB-0213-49b9-B980-2FFAB81C5B47",
		divisor=>0,
		period=>"1000000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_293,
		dig_domain_out=>open);
Steering_PWM:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"fbcc3ec6-f8bf-4e1b-9b5d-8406e6447d68",
		drive_mode=>"011",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_311,
		fb=>(tmpFB_0__Steering_PWM_net_0),
		analog=>(open),
		io=>(tmpIO_0__Steering_PWM_net_0),
		siovref=>(tmpSIOVREF__Steering_PWM_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Steering_PWM_net_0);
Steering_Dir:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"3252715a-43b3-4818-a181-6456404418a1",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__Steering_Dir_net_0),
		analog=>(open),
		io=>(tmpIO_0__Steering_Dir_net_0),
		siovref=>(tmpSIOVREF__Steering_Dir_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Steering_Dir_net_0);
\PWM_Steer:PWMUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_325,
		enable=>one,
		clock_out=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\);
\PWM_Steer:PWMUDB:genblk1:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		control=>(\PWM_Steer:PWMUDB:control_7\, \PWM_Steer:PWMUDB:control_6\, \PWM_Steer:PWMUDB:control_5\, \PWM_Steer:PWMUDB:control_4\,
			\PWM_Steer:PWMUDB:control_3\, \PWM_Steer:PWMUDB:control_2\, \PWM_Steer:PWMUDB:control_1\, \PWM_Steer:PWMUDB:control_0\));
\PWM_Steer:PWMUDB:genblk8:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0100111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>zero,
		clock=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		status=>(zero, \PWM_Steer:PWMUDB:status_5\, zero, \PWM_Steer:PWMUDB:status_3\,
			\PWM_Steer:PWMUDB:status_2\, \PWM_Steer:PWMUDB:status_1\, \PWM_Steer:PWMUDB:status_0\),
		interrupt=>\PWM_Steer:Net_55\);
\PWM_Steer:PWMUDB:sP16:pwmdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		cs_addr=>(\PWM_Steer:PWMUDB:tc_i\, \PWM_Steer:PWMUDB:runmode_enable\, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\PWM_Steer:PWMUDB:nc2\,
		cl0=>\PWM_Steer:PWMUDB:nc3\,
		z0=>\PWM_Steer:PWMUDB:nc1\,
		ff0=>open,
		ce1=>\PWM_Steer:PWMUDB:nc4\,
		cl1=>\PWM_Steer:PWMUDB:nc5\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>\PWM_Steer:PWMUDB:nc6\,
		f1_blk_stat=>\PWM_Steer:PWMUDB:nc7\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\PWM_Steer:PWMUDB:sP16:pwmdp:carry\,
		sir=>zero,
		sor=>open,
		sil=>\PWM_Steer:PWMUDB:sP16:pwmdp:sh_right\,
		sol=>\PWM_Steer:PWMUDB:sP16:pwmdp:sh_left\,
		msbi=>\PWM_Steer:PWMUDB:sP16:pwmdp:msb\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_eq_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_eq_0\),
		cli=>(zero, zero),
		clo=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_lt_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_lt_0\),
		zi=>(zero, zero),
		zo=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_zero_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_zero_0\),
		fi=>(zero, zero),
		fo=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_ff_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_ff_0\),
		capi=>(zero, zero),
		capo=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cap_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cap_0\),
		cfbi=>zero,
		cfbo=>\PWM_Steer:PWMUDB:sP16:pwmdp:cfb\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\PWM_Steer:PWMUDB:sP16:pwmdp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		cs_addr=>(\PWM_Steer:PWMUDB:tc_i\, \PWM_Steer:PWMUDB:runmode_enable\, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\PWM_Steer:PWMUDB:cmp1_eq\,
		cl0=>\PWM_Steer:PWMUDB:cmp1_less\,
		z0=>\PWM_Steer:PWMUDB:tc_i\,
		ff0=>open,
		ce1=>\PWM_Steer:PWMUDB:cmp2_eq\,
		cl1=>\PWM_Steer:PWMUDB:cmp2_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>\PWM_Steer:PWMUDB:fifo_nempty\,
		f1_blk_stat=>\PWM_Steer:PWMUDB:status_3\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\PWM_Steer:PWMUDB:sP16:pwmdp:carry\,
		co=>open,
		sir=>\PWM_Steer:PWMUDB:sP16:pwmdp:sh_left\,
		sor=>\PWM_Steer:PWMUDB:sP16:pwmdp:sh_right\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\PWM_Steer:PWMUDB:sP16:pwmdp:msb\,
		cei=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_eq_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_eq_0\),
		ceo=>open,
		cli=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_lt_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_lt_0\),
		clo=>open,
		zi=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_zero_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_zero_0\),
		zo=>open,
		fi=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cmp_ff_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cmp_ff_0\),
		fo=>open,
		capi=>(\PWM_Steer:PWMUDB:sP16:pwmdp:cap_1\, \PWM_Steer:PWMUDB:sP16:pwmdp:cap_0\),
		capo=>open,
		cfbi=>\PWM_Steer:PWMUDB:sP16:pwmdp:cfb\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_24\);
\PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_16\);
\PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\PWM_Steer:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_8\);
Clock_6:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"b2e4b31e-0d33-46d7-9727-2481ba2c680d",
		source_clock_id=>"CEF43CFB-0213-49b9-B980-2FFAB81C5B47",
		divisor=>0,
		period=>"41666666.6666667",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_325,
		dig_domain_out=>open);
\PWM_CMG:PWMUDB:min_kill_reg\:cy_dsrff
	PORT MAP(d=>one,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:min_kill_reg\);
\PWM_CMG:PWMUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:prevCapture\);
\PWM_CMG:PWMUDB:trig_last\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:trig_last\);
\PWM_CMG:PWMUDB:runmode_enable\:cy_dsrff
	PORT MAP(d=>\PWM_CMG:PWMUDB:control_7\,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:runmode_enable\);
\PWM_CMG:PWMUDB:sc_kill_tmp\:cy_dff
	PORT MAP(d=>\PWM_CMG:PWMUDB:sc_kill_tmp\\D\,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:sc_kill_tmp\);
\PWM_CMG:PWMUDB:ltch_kill_reg\:cy_dsrff
	PORT MAP(d=>one,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:ltch_kill_reg\);
\PWM_CMG:PWMUDB:dith_count_1\:cy_dsrff
	PORT MAP(d=>\PWM_CMG:PWMUDB:dith_count_1\\D\,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:dith_count_1\);
\PWM_CMG:PWMUDB:dith_count_0\:cy_dsrff
	PORT MAP(d=>\PWM_CMG:PWMUDB:dith_count_0\\D\,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:dith_count_0\);
\PWM_CMG:PWMUDB:prevCompare1\:cy_dff
	PORT MAP(d=>\PWM_CMG:PWMUDB:cmp1_less\,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:prevCompare1\);
\PWM_CMG:PWMUDB:prevCompare2\:cy_dff
	PORT MAP(d=>\PWM_CMG:PWMUDB:cmp2_less\,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:prevCompare2\);
\PWM_CMG:PWMUDB:cmp1_status_reg\:cy_dsrff
	PORT MAP(d=>\PWM_CMG:PWMUDB:cmp1_status\,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:status_0\);
\PWM_CMG:PWMUDB:cmp2_status_reg\:cy_dsrff
	PORT MAP(d=>\PWM_CMG:PWMUDB:cmp2_status\,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:status_1\);
\PWM_CMG:PWMUDB:final_kill_reg\:cy_dsrff
	PORT MAP(d=>zero,
		s=>zero,
		r=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:status_5\);
\PWM_CMG:PWMUDB:pwm_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:pwm_i_reg\);
\PWM_CMG:PWMUDB:pwm1_i_reg\:cy_dff
	PORT MAP(d=>\PWM_CMG:PWMUDB:pwm1_i\,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>Net_88);
\PWM_CMG:PWMUDB:pwm2_i_reg\:cy_dff
	PORT MAP(d=>\PWM_CMG:PWMUDB:pwm2_i\,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>Net_89);
\PWM_CMG:PWMUDB:tc_i_reg\:cy_dff
	PORT MAP(d=>\PWM_CMG:PWMUDB:status_2\,
		clk=>\PWM_CMG:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_CMG:PWMUDB:tc_i_reg\);
\UART:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:reset_reg\);
\UART:BUART:txn\:cy_dff
	PORT MAP(d=>\UART:BUART:txn\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:txn\);
\UART:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_state_1\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_state_1\);
\UART:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_state_0\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_state_0\);
\UART:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_state_2\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_state_2\);
Net_115:cy_dff
	PORT MAP(d=>Net_115D,
		clk=>\UART:BUART:clock_op\,
		q=>Net_115);
\UART:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_bitclk\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_bitclk\);
\UART:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_ctrl_mark_last\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_ctrl_mark_last\);
\UART:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_mark\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_mark\);
\UART:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART:BUART:tx_parity_bit\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:tx_parity_bit\);
\UART:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_state_1\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_state_1\);
\UART:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_state_0\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_state_0\);
\UART:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_load_fifo\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_load_fifo\);
\UART:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_state_3\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_state_3\);
\UART:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_state_2\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_state_2\);
\UART:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_bitclk_pre\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_bitclk_enable\);
\UART:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_state_stop1_reg\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_state_stop1_reg\);
\UART:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\UART:BUART:pollcount_1\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:pollcount_1\);
\UART:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\UART:BUART:pollcount_0\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:pollcount_0\);
\UART:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_markspace_status\);
\UART:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_status_2\);
\UART:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_stop_bit_error\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_status_3\);
\UART:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_addr_match_status\);
\UART:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_markspace_pre\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_markspace_pre\);
\UART:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_parity_error_pre\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_parity_error_pre\);
\UART:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_break_status\);
\UART:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_address_detected\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_address_detected\);
\UART:BUART:rx_last\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_last\\D\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_last\);
\UART:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\UART:BUART:rx_parity_bit\,
		clk=>\UART:BUART:clock_op\,
		q=>\UART:BUART:rx_parity_bit\);
\Gimbal_Encoder:Net_1251\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Net_1251\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:Net_1251\);
\Gimbal_Encoder:Cnt16:CounterUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Cnt16:CounterUDB:prevCapture\);
\Gimbal_Encoder:Cnt16:CounterUDB:overflow_reg_i\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Cnt16:CounterUDB:overflow\,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Cnt16:CounterUDB:overflow_reg_i\);
\Gimbal_Encoder:Cnt16:CounterUDB:underflow_reg_i\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Cnt16:CounterUDB:status_1\,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Cnt16:CounterUDB:underflow_reg_i\);
\Gimbal_Encoder:Cnt16:CounterUDB:tc_reg_i\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Cnt16:CounterUDB:reload_tc\,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Net_1275\);
\Gimbal_Encoder:Cnt16:CounterUDB:prevCompare\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_i\,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Cnt16:CounterUDB:prevCompare\);
\Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_reg_i\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Cnt16:CounterUDB:cmp_out_i\,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Net_1264\);
\Gimbal_Encoder:Cnt16:CounterUDB:count_stored_i\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Net_1203\,
		clk=>\Gimbal_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Gimbal_Encoder:Cnt16:CounterUDB:count_stored_i\);
\Gimbal_Encoder:Net_1203\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:Net_1203\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:Net_1203\);
\Gimbal_Encoder:bQuadDec:quad_A_filt\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:quad_A_filt\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_A_filt\);
\Gimbal_Encoder:bQuadDec:quad_B_filt\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:quad_B_filt\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:quad_B_filt\);
\Gimbal_Encoder:bQuadDec:state_2\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:state_2\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:Net_1260\);
\Gimbal_Encoder:bQuadDec:state_3\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:state_3\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:error\);
\Gimbal_Encoder:bQuadDec:state_1\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:state_1\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:state_1\);
\Gimbal_Encoder:bQuadDec:state_0\:cy_dff
	PORT MAP(d=>\Gimbal_Encoder:bQuadDec:state_0\\D\,
		clk=>\Gimbal_Encoder:bQuadDec:sync_clock\,
		q=>\Gimbal_Encoder:bQuadDec:state_0\);
\Handle_Encoder:Net_1251\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Net_1251\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:Net_1251\);
\Handle_Encoder:Cnt16:CounterUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Cnt16:CounterUDB:prevCapture\);
\Handle_Encoder:Cnt16:CounterUDB:overflow_reg_i\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Cnt16:CounterUDB:overflow\,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Cnt16:CounterUDB:overflow_reg_i\);
\Handle_Encoder:Cnt16:CounterUDB:underflow_reg_i\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Cnt16:CounterUDB:status_1\,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Cnt16:CounterUDB:underflow_reg_i\);
\Handle_Encoder:Cnt16:CounterUDB:tc_reg_i\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Cnt16:CounterUDB:reload_tc\,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Net_1275\);
\Handle_Encoder:Cnt16:CounterUDB:prevCompare\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Cnt16:CounterUDB:cmp_out_i\,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Cnt16:CounterUDB:prevCompare\);
\Handle_Encoder:Cnt16:CounterUDB:cmp_out_reg_i\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Cnt16:CounterUDB:cmp_out_i\,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Net_1264\);
\Handle_Encoder:Cnt16:CounterUDB:count_stored_i\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Net_1203\,
		clk=>\Handle_Encoder:Cnt16:CounterUDB:ClockOutFromEnBlock\,
		q=>\Handle_Encoder:Cnt16:CounterUDB:count_stored_i\);
\Handle_Encoder:Net_1203\:cy_dff
	PORT MAP(d=>\Handle_Encoder:Net_1203\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:Net_1203\);
\Handle_Encoder:bQuadDec:quad_A_filt\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:quad_A_filt\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_A_filt\);
\Handle_Encoder:bQuadDec:quad_B_filt\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:quad_B_filt\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:quad_B_filt\);
\Handle_Encoder:bQuadDec:state_2\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:state_2\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:Net_1260\);
\Handle_Encoder:bQuadDec:state_3\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:state_3\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:error\);
\Handle_Encoder:bQuadDec:state_1\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:state_1\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:state_1\);
\Handle_Encoder:bQuadDec:state_0\:cy_dff
	PORT MAP(d=>\Handle_Encoder:bQuadDec:state_0\\D\,
		clk=>\Handle_Encoder:bQuadDec:sync_clock\,
		q=>\Handle_Encoder:bQuadDec:state_0\);
\PWM_Steer:PWMUDB:min_kill_reg\:cy_dsrff
	PORT MAP(d=>one,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:min_kill_reg\);
\PWM_Steer:PWMUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:prevCapture\);
\PWM_Steer:PWMUDB:trig_last\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:trig_last\);
\PWM_Steer:PWMUDB:runmode_enable\:cy_dsrff
	PORT MAP(d=>\PWM_Steer:PWMUDB:control_7\,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:runmode_enable\);
\PWM_Steer:PWMUDB:sc_kill_tmp\:cy_dff
	PORT MAP(d=>\PWM_Steer:PWMUDB:sc_kill_tmp\\D\,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:sc_kill_tmp\);
\PWM_Steer:PWMUDB:ltch_kill_reg\:cy_dsrff
	PORT MAP(d=>one,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:ltch_kill_reg\);
\PWM_Steer:PWMUDB:dith_count_1\:cy_dsrff
	PORT MAP(d=>\PWM_Steer:PWMUDB:dith_count_1\\D\,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:dith_count_1\);
\PWM_Steer:PWMUDB:dith_count_0\:cy_dsrff
	PORT MAP(d=>\PWM_Steer:PWMUDB:dith_count_0\\D\,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:dith_count_0\);
\PWM_Steer:PWMUDB:prevCompare1\:cy_dff
	PORT MAP(d=>\PWM_Steer:PWMUDB:cmp1_less\,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:prevCompare1\);
\PWM_Steer:PWMUDB:cmp1_status_reg\:cy_dsrff
	PORT MAP(d=>\PWM_Steer:PWMUDB:cmp1_status\,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:status_0\);
\PWM_Steer:PWMUDB:cmp2_status_reg\:cy_dsrff
	PORT MAP(d=>zero,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:status_1\);
\PWM_Steer:PWMUDB:final_kill_reg\:cy_dsrff
	PORT MAP(d=>zero,
		s=>zero,
		r=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:status_5\);
\PWM_Steer:PWMUDB:pwm_i_reg\:cy_dff
	PORT MAP(d=>\PWM_Steer:PWMUDB:pwm_i\,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>Net_311);
\PWM_Steer:PWMUDB:pwm1_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:pwm1_i_reg\);
\PWM_Steer:PWMUDB:pwm2_i_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:pwm2_i_reg\);
\PWM_Steer:PWMUDB:tc_i_reg\:cy_dff
	PORT MAP(d=>\PWM_Steer:PWMUDB:status_2\,
		clk=>\PWM_Steer:PWMUDB:ClockOutFromEnBlock\,
		q=>\PWM_Steer:PWMUDB:tc_i_reg\);

END R_T_L;
